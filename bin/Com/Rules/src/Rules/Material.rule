// Material
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
//
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//

// No direct correlation of ACM topics - just miscellaneous rules pertaining to
// Material objects
//
// The main objects in the SDD are:
//     Mat / Material
//

// -----------------------------------------------------------------------------
RULE Mat:CavityIns
  DESCRIPTION
    "Nominal R-value of composite layer cavity insulation."
  INPUTCLASS
    CondRequired
  DEFAULT
    0
  SIZING
    UNCHANGED
  ANNUAL
    UNCHANGED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:CavityInsVal
  DATATYPE
    Float
  LONGFORM
    CavityInsulationValue
  UNITS
    °F-ft2-h/Btu
  DESCRIPTION
    "Insulation R-value of composite layer cavity"
  INPUTCLASS
    NotInput
  DEFAULT : S901G ECBC
    if( CodeCat != "Composite" ) then  0
    else if( FrmMat = "Metal" )
      then
             if( CavityInsOpt = "R-0"  ) then   0
        else if( CavityInsOpt = "R-4"  ) then   4
        else if( CavityInsOpt = "R-5"  ) then   5
        else if( CavityInsOpt = "R-6"  ) then   6
        else if( CavityInsOpt = "R-8"  ) then   8
        else if( CavityInsOpt = "R-10" ) then  10
        else if( CavityInsOpt = "R-11" ) then  11
        else if( CavityInsOpt = "R-12" ) then  12
        else if( CavityInsOpt = "R-13" ) then  13
        else if( CavityInsOpt = "R-15" ) then  15
        else if( CavityInsOpt = "R-16" ) then  16
        else if( CavityInsOpt = "R-19" ) then  19
        else if( CavityInsOpt = "R-20" ) then  20
        else if( CavityInsOpt = "R-21" ) then  21
        else if( CavityInsOpt = "R-24" ) then  24
        else if( CavityInsOpt = "R-25" ) then  25
        else if( CavityInsOpt = "R-29" ) then  29
        else if( CavityInsOpt = "R-30" ) then  30
        else if( CavityInsOpt = "R-35" ) then  35
        else if( CavityInsOpt = "R-36" ) then  36
        else if( CavityInsOpt = "R-38" ) then  38
        else if( CavityInsOpt = "R-40" ) then  40
        else if( CavityInsOpt = "R-45" ) then  45
        else if( CavityInsOpt = "R-50" ) then  50
        else if( CavityInsOpt = "R-55" ) then  55
        else  0
        endif endif endif endif endif
        endif endif endif endif endif
        endif endif endif endif endif
        endif endif endif endif endif
	endif endif endif endif endif
    else if( FrmMat = "Wood" )
      then  CavityIns
    else  0
    endif endif endif
  DEFAULT
    if( CodeCat != "Composite" ) then  0
    else if( FrmMat = "Metal" )
      then
             if( CavityInsOpt = "R-0"  ) then   0
        else if( CavityInsOpt = "R-5"  ) then   5
        else if( CavityInsOpt = "R-6"  ) then   6
        else if( CavityInsOpt = "R-10" ) then  10
        else if( CavityInsOpt = "R-11" ) then  11
        else if( CavityInsOpt = "R-13" ) then  13
        else if( CavityInsOpt = "R-15" ) then  15
        else if( CavityInsOpt = "R-16" ) then  16
        else if( CavityInsOpt = "R-19" ) then  19
        else if( CavityInsOpt = "R-20" ) then  20
        else if( CavityInsOpt = "R-21" ) then  21
        else if( CavityInsOpt = "R-22" ) then  22
        else if( CavityInsOpt = "R-23" ) then  23
        else if( CavityInsOpt = "R-24" ) then  24
        else if( CavityInsOpt = "R-25" ) then  25
        else if( CavityInsOpt = "R-26" ) then  26
        else if( CavityInsOpt = "R-29" ) then  29
        else if( CavityInsOpt = "R-30" ) then  30
        else if( CavityInsOpt = "R-32" ) then  32
        else if( CavityInsOpt = "R-35" ) then  35
        else if( CavityInsOpt = "R-36" ) then  36
        else if( CavityInsOpt = "R-38" ) then  38
        else  0
        endif endif endif endif endif
        endif endif endif endif endif
        endif endif endif endif endif
        endif endif endif endif endif
        endif endif
    else if( FrmMat = "Wood" )
      then  CavityIns
    else  0
    endif endif endif
  CHECKCODE
    if( CodeCat = "Composite" .AND. CavityInsVal = 0 ) then
      PostError( "Composite material '%s' has a cavity insulation r-value of 
                  zero, which is not allowed.  Select a material from the 
                  category - Air - instead.", Name )
    else if( CodeCat = "Composite" .AND. CavityInsVal < 0 ) then
      PostError( "Composite material '%s' has a negative cavity insulation 
                  r-value, which is not allowed.  Use a positive r-value.", 
                  Name )
    else UNCHANGED
    endif endif
//  SIZING      - overridden by logic in Material_baseline.rule
//    u:CavityInsVal
  ANNUAL
    z:CavityInsVal
ENDRULE


// -----------------------------------------------------------------------------
; placeholder for future use - must be included or ConsAssmUFactor() function will post error message
RULE Mat:HeaderIns
  DESCRIPTION
    "Overall R-value of header portion of assembly"
  INPUTCLASS
    NotInput
  DEFAULT
    0.0
  SIZING
    0.0
  ANNUAL
    z:HeaderIns
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW Mat:FrmDepthVal
  DATATYPE
    Float
  LONGFORM
    FramingDepthValue
  UNITS
    in
  DESCRIPTION
    "Depth (in inches) of composite layer cavity"
  INPUTCLASS
    NotInput
  DEFAULT : S901G ECBC
    if( CodeCat != "Composite" ) then  0
    else if( LocalStatus(FrmDepth) < 1 ) then  0
//    else if( FrmDepth = "0_5In"   ) then  0.5
//    else if( FrmDepth = "0_75In"  ) then  0.75
//    else if( FrmDepth = "1In"     ) then  1.0
    else if( FrmDepth = "2x2"     ) then  1.5
//    else if( FrmDepth = "2In"     ) then  2.0
    else if( FrmDepth = "2x3"     ) then  2.5
//    else if( FrmDepth = "3In"     ) then  3.0
    else if( FrmDepth = "2x4"     ) then  3.5
//    else if( FrmDepth = "4In"     ) then  4.0
//    else if( FrmDepth = "4_5In"   ) then  4.5
//    else if( FrmDepth = "5In"     ) then  5.0
    else if( FrmDepth = "2x6"     ) then  5.5
    else if( FrmDepth = "2x8"     ) then  7.25
    else if( FrmDepth = "2x10"    ) then  9.25
    else if( FrmDepth = "2x12"    ) then  11.25
    else if( FrmDepth = "AllSizes"     ) then  16.00
    else  0  
    endif endif endif endif endif 
    endif endif endif endif endif 
//    endif endif endif endif endif 
//    endif endif endif
  DEFAULT
    if( CodeCat != "Composite" ) then  0
    else if( LocalStatus(FrmDepth) < 1 ) then  0
    else if( FrmDepth = "0_5In"   ) then  0.5
    else if( FrmDepth = "0_75In"  ) then  0.75
    else if( FrmDepth = "1In"     ) then  1.0
    else if( FrmDepth = "1_5In"   ) then  1.5
    else if( FrmDepth = "2In"     ) then  2.0
    else if( FrmDepth = "2_5In"   ) then  2.5
    else if( FrmDepth = "3In"     ) then  3.0
    else if( FrmDepth = "3_5In"   ) then  3.5
    else if( FrmDepth = "4In"     ) then  4.0
    else if( FrmDepth = "4_5In"   ) then  4.5
    else if( FrmDepth = "5In"     ) then  5.0
    else if( FrmDepth = "5_5In"   ) then  5.5
    else if( FrmDepth = "7_25In"  ) then  7.25
    else if( FrmDepth = "9_25In"  ) then  9.25
    else if( FrmDepth = "11_25In" ) then  11.25
    else  0  
    endif endif endif endif endif 
    endif endif endif endif endif 
    endif endif endif endif endif 
    endif endif
  SIZING
    u:FrmDepthVal
  ANNUAL
    z:FrmDepthVal
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsSpandrel
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if spandrel panel layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Spandrel Panels Curtain Walls" ) then
      1.0
    else
      0.0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsSpandrel
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalWall
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal wall layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeItem = "Metal Siding - 1/16 in." ) 
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalWall
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalFrame
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal framed wall, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Metal" .AND.
        (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC") ) 
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalFrame
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsWoodFrame
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if wood framed wall, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Wood" .AND.
        (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC" .OR. 
         FrmConfig = "WallAWS48inOC" .OR. FrmConfig = "WallAWS24inOC") )
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsWoodFrame
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalFrameLayer
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal framed layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Metal" .AND.
        (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC" .OR.
         FrmConfig = "Floor16inOC" .OR. FrmConfig = "Floor24inOC" .OR. 
         FrmConfig = "Roof16inOC" .OR. FrmConfig = "Roof24inOC") ) 
      then 1
    else if( CodeItem = "Air - Metal Wall Framing - 16 or 24 in. OC" )
      then 1
    else 0
    endif endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalFrameLayer
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsWoodFrameLayer
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if wood framed layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Wood" .AND.
        (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC" .OR. 
         FrmConfig = "WallAWS48inOC" .OR. FrmConfig = "WallAWS24inOC" .OR.
         FrmConfig = "Floor16inOC" .OR. FrmConfig = "Floor24inOC" .OR. 
         FrmConfig = "Roof16inOC" .OR. FrmConfig = "Roof24inOC" .OR.
         FrmConfig = "Roof48inOC") )
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsWoodFrameLayer
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalRoof
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal roof layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Metal" .AND.
        (FrmConfig = "RoofMetalScrewDown" .OR. 
         FrmConfig = "RoofMetalStandingSeam" .OR. 
         FrmConfig = "RoofMetalStandingSeamFilledCavity") ) 
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalRoof
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -----------------------------------------------------------------------------
RULE Mat:FrmFacMembers
  DESCRIPTION
    "Framing factor (fraction) of framing members"
  INPUTCLASS
    Prescribed
  DEFAULT : S901G ECBC
    if( CodeCat != "Composite" ) then
      UNDEFINED
    else if( LocalStatus(FrmMat) < 1 .OR. LocalStatus(FrmConfig) < 1 ) then
      UNDEFINED
    else if( IsMetalRoof = 1 ) then
      UNDEFINED
    else if( FrmConfig = "Floor16in24in36in48inOC" .OR.
             FrmConfig = "Roof16in24in36in48inOC" ) then
      UNDEFINED
    else FramingFactors:FrmFactor("FrmMat",FrmMat,"FrmConfig",FrmConfig)
    endif endif endif endif
  DEFAULT
    if( CodeCat != "Composite" ) then
      UNDEFINED
    else if( LocalStatus(FrmMat) < 1 .OR. LocalStatus(FrmConfig) < 1 ) then
      UNDEFINED
    else if( IsMetalRoof = 1 ) then
      UNDEFINED
    else FramingFactors:FrmFactor("FrmMat",FrmMat,"FrmConfig",FrmConfig)
    endif endif endif
  SIZING
    u:FrmFacMembers
  ANNUAL
    z:FrmFacMembers
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsWoodFrameRoof
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if wood framed roof, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Wood" .AND.
        (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC" .OR. 
         FrmConfig = "WallAWS48inOC" .OR. FrmConfig = "WallAWS24inOC") )
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsWoodFrame
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE Mat:FrmFacHeaders
  DESCRIPTION
    "Framing factor (fraction) of framing headers  (NOT CURRENTLY REFERENCED)"
  INPUTCLASS
    Prescribed
  DEFAULT
    0.0
  SIZING
    0.0
  ANNUAL
    z:FrmFacHeaders
ENDRULE

// -----------------------------------------------------------------------------
RULE Mat:FrmFacCav
  DESCRIPTION
    "Fraction of cavity in composite layer"
  INPUTCLASS
    Prescribed
  DEFAULT
    if( LocalStatus(FrmFacMembers) < 1 .OR. LocalStatus(FrmFacHeaders) < 1 )  then
      UNDEFINED
    else if( (FrmFacMembers + FrmFacHeaders) > 1 ) then
      0.0
    else 1.0 - FrmFacMembers - FrmFacHeaders
    endif endif
  SIZING
    u:FrmFacCav
  ANNUAL_PROPOSED
    z:FrmFacCav
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:RefCnt
  DATATYPE
    Integer
  LONGFORM
    ReferenceCount
  DESCRIPTION
    "Number of times this Mat is referenced by ConsAssm objects"
  INPUTCLASS
    NotInput
  DEFAULT
    CountRefs(ConsAssm:MatRef)
  SIZING
    CountRefs(ConsAssm:MatRef)
  ANNUAL_PROPOSED
    CountRefs(ConsAssm:MatRef)
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Proj:WoodFrmRPerIn
  DATATYPE
    Float
  LONGFORM
    WoodFramingRValuePerInch
  UNITS
    °F-ft2-h/Btu-in
  DESCRIPTION
    "R-value per inch of standard douglas fir wood framing (used in composite layer performance calculations)"
  INPUTCLASS
    NotInput
  DEFAULT
    0.99
  SIZING
    u:WoodFrmRPerIn
  ANNUAL_PROPOSED
    z:WoodFrmRPerIn
ENDRULE


// -----------------------------------------------------------------------------
// Composite Layer R-value Calc  - no special function required for Simple Wall R-value calc...
// ----------------------------
// By "SimpleWall" we mean this composite layer w/ NOTHING on either side.
// ----------------------------
RULE NEW Mat:SimpleWallCompositeR
  DATATYPE
    Float
  LONGFORM
    SimpleWallCompositeRValue
  UNITS
    °F-ft2-h/Btu
  DESCRIPTION
    "Composite (wood framing) layer R-value"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat != "Composite" )
      then 0
    else if( LocalStatus(FrmMat) < 1 .OR. LocalStatus(FrmFacCav) < 1 .OR. LocalStatus(CavityInsVal) < 1 )
      then 0
    else if( FrmMat != "Wood" .OR. FrmDepthVal <= 0 )
      then 0
    else if( FrmFacCav <= 0 )
      then Proj:WoodFrmRPerIn * FrmDepthVal         // layer is ALL framing
    else if( FrmFacCav >= 1 )
      then CavityInsVal                             // layer is ALL cavity/insulation
    // this is a valid wood framed composite Mat
    else (1 / ( (FrmFacCav / CavityInsVal) + (FrmFacMembers / (Proj:WoodFrmRPerIn * FrmDepthVal)) ))
    endif endif endif endif endif
//  SIZING      - overridden by logic in Material_baseline.rule
//    u:SimpleWallCompositeR
  ANNUAL_PROPOSED
    z:SimpleWallCompositeR
ENDRULE


// -----------------------------------------------------------------------------
// TO DO: Revise Mat:CodeCat = Composite default once rules for this are written
RULE Mat:RVal
  DESCRIPTION
    "This is RValue of each material"
  INPUTCLASS : S901G ECBC
    Optional
  INPUTCLASS
    NotInput
  DEFAULT : S901G ECBC
    if( CodeCat = "Composite" )
    then
      if( FrmMat = "Metal" )
      then
        if( LocalStatus(FrmConfig) > 0 .AND. LocalStatus(CavityInsVal) > 0 )
	     then
          if( FrmConfig = "RoofMetalScrewDown" .OR.
              FrmConfig = "RoofMetalStandingSeam" .OR.
              FrmConfig = "RoofMetalStandingSeamFilledCavity" )
	       then MetalInsFrameLayers:Rvalue("FrmConfig", FrmConfig, "CavityIns", CavityInsVal)
          else
	         if( LocalStatus(FrmDepth) > 0 )
	         then MetalInsFrameLayers:Rvalue("FrmConfig", FrmConfig, "FrmDepth", FrmDepth,
                                            "CavityIns", CavityInsVal )
            else UNDEFINED
            endif
	       endif
        else UNDEFINED
        endif
      else
        if( SimpleWallCompositeR > 0 )
        then SimpleWallCompositeR       // to be replaced w/ construction-specific value
        else 0.91                       // Placeholder !!
        endif
      endif
    else
      if( LocalStatus( Thkns ) > 0 .AND. IfValidAnd( ThrmlCndct > 0 ) ) 
      then ( ( Thkns / 12 ) * ( 1 / ThrmlCndct ) )
      else UNDEFINED
      endif
    endif
  DEFAULT
    if( CodeCat = "Composite" ) then
      if( FrmMat = "Metal" ) then
        if( LocalStatus(FrmConfig) > 0 .AND. LocalStatus(CavityInsVal) > 0 ) then
          if( FrmConfig = "RoofMetalScrewDown" .OR.
              FrmConfig = "RoofMetalStandingSeam" .OR.
              FrmConfig = "RoofMetalStandingSeamFilledCavity" ) then
            MetalInsFrameLayers:Rvalue("FrmConfig",FrmConfig,"CavityIns",CavityInsVal)
          else if( LocalStatus(FrmDepth) > 0 ) then
            MetalInsFrameLayers:Rvalue("FrmConfig",FrmConfig,"FrmDepth",FrmDepth,"CavityIns",CavityInsVal )
          else UNDEFINED
          endif endif
        else UNDEFINED
        endif
      else if( SimpleWallCompositeR > 0 ) then
        SimpleWallCompositeR       // to be replaced w/ construction-specific value
      else 10.0                    // Placeholder !!
      endif endif
    else if( LocalStatus(CodeItem) < 2 ) then 
      UNDEFINED
    else if( CodeItem = "- specify -" ) then 
      UNDEFINED
    else MaterialData:Rvalue("MatList",CodeItem)
    endif endif endif
  CHECKSIM : S901G ECBC
    if(  LocalStatus( RVal ) < 1 .OR.
         IfValidAnd( RVal < 0 ) )
    then PostError( "Material '%s' does not have a valid RValue assigned.", Name )
    else UNCHANGED
    endif
  ANNUAL_PROPOSED : S901G ECBC
    u:RVal
  ANNUAL_PROPOSED
    zp:RVal
  ANNUAL_BASELINE : S901G ECBC
    zb:RVal
ENDRULE

// -----------------------------------------------------------------------------
RULE Mat:ThrmlCndct
  DESCRIPTION
     ""
  INPUTCLASS : S901G ECBC
    Optional
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalStatus(CodeItem) < 2 ) then
      UNDEFINED
    else if( CodeItem = "- specify -" ) then
      UNDEFINED
    else MaterialData:ThrmlCndct("MatList",CodeItem)
    endif endif
  CHECKSIM : S901G ECBC
    if( CodeCat = "Composite" )
    then UNCHANGED
    else
      if(  LocalStatus( ThrmlCndct ) < 1 .OR.
           IfValidAnd( ThrmlCndct <= 0 ) )
      then PostError( "Material '%s' does not have a valid Therrmal Conductivity assigned.", Name )
      else UNCHANGED
      endif
    endif
  ANNUAL_PROPOSED : S901G ECBC
    u:ThrmlCndct
  ANNUAL_BASELINE : S901G ECBC
    zb:ThrmlCndct
ENDRULE

// -----------------------------------------------------------------------------
RULE Mat:SpecHt
  DESCRIPTION
     ""
  INPUTCLASS : S901G ECBC
    Optional
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalStatus(CodeItem) < 2 ) then
      UNDEFINED
    else if( CodeItem = "- specify -" ) then
      UNDEFINED
    else MaterialData:SpecHt("MatList",CodeItem)
    endif endif
  CHECKSIM : S901G ECBC
    if( CodeCat = "Composite" )
    then UNCHANGED
    else
      if(  LocalStatus( SpecHt ) < 1 .OR.
           IfValidAnd( SpecHt <= 0 ) )
      then PostError( "Material '%s' does not have a valid Specific Heat assigned.", Name )
      else UNCHANGED
      endif
    endif
  ANNUAL_PROPOSED : S901G ECBC
    u:SpecHt
  ANNUAL_BASELINE : S901G ECBC
    zb:SpecHt
ENDRULE

// -----------------------------------------------------------------------------
RULE Mat:Dens
  DESCRIPTION
     ""
  INPUTCLASS : S901G ECBC
    Optional
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalStatus(CodeItem) < 2 ) then
      0
//      UNDEFINED
    else if( CodeItem = "- specify -" ) then
      0
//      UNDEFINED
    else if( CodeCat = "Composite" ) then
      0
    else MaterialData:Dens("MatList",CodeItem)
    endif endif endif
  CHECKSIM : S901G ECBC
    if( CodeCat = "Composite" )
    then UNCHANGED
    else
      if(  LocalStatus( Dens ) < 1 .OR.
           IfValidAnd( Dens <= 0 ) )
      then PostError( "Material '%s' does not have a valid Density assigned.", Name )
      else UNCHANGED
      endif
    endif
  ANNUAL_PROPOSED : S901G ECBC
    u:Dens
  ANNUAL_BASELINE : S901G ECBC
    zb:Dens
ENDRULE

// -----------------------------------------------------------------------------
RULE Mat:Thkns
  DESCRIPTION
     "The thickness of a material layer in inches."
  HELP
     "The thickness of a material layer (inches) used in conjunction with
     density and specific heat to determine the heat capacity of a layer.  The
     thickness does not affect the geometry of a model - geometrically all
     surfaces are modeled as having zero thickness."
  INPUTCLASS : S901G ECBC
    Optional
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalStatus(CodeItem) < 2 ) then
      0
//      UNDEFINED
    else if( CodeItem = "- specify -" ) then
      0
//      UNDEFINED
    else if( CodeCat = "Composite" ) then
      0
    else  MaterialData:Thkns("MatList",CodeItem)
    endif endif endif
  CHECKSIM : S901G ECBC
    if( CodeCat = "Composite" )
    then UNCHANGED
    else
      if(  LocalStatus( Thkns ) < 1 .OR.
           IfValidAnd( Thkns <= 0 ) )
      then PostError( "Material '%s' does not have a valid Thickness assigned.", Name )
      else UNCHANGED
      endif
    endif
  ANNUAL_PROPOSED : S901G ECBC
    u:Thkns
  ANNUAL_PROPOSED
    zp:Thkns
  ANNUAL_BASELINE : S901G ECBC
    zb:Thkns
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:HeatCap
  DESCRIPTION
     "the heat capacity of the material"
  UNITS
    Btu/ft2-F
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(SpecHt > 0) .AND.
        IfValidAnd(Dens > 0) .AND.
        IfValidAnd(Thkns > 0) ) then
      SpecHt * Dens * Thkns / 12.0
    else 0
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalWall
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal wall layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeItem = "Metal Siding - 1/16 in." ) 
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalWall
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalFrame
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal framed wall, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeItem = "Air - Metal Wall Framing - 16 or 24 in. OC" )
      then 1
    else if( CodeCat = "Composite" .AND. FrmMat = "Metal" .AND.
             (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC") )
      then 1
    else 0
    endif endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalFrame
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsWoodFrame
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if wood framed wall, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Wood" .AND.
        (FrmConfig = "Wall16inOC" .OR. FrmConfig = "Wall24inOC" .OR. 
         FrmConfig = "WallAWS48inOC" .OR. FrmConfig = "WallAWS24inOC") )
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsWoodFrame
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:IsMetalRoof
  DATATYPE
    Float
  DESCRIPTION
    "Flag with value of 1 if metal roof layer, otherwise 0"
  INPUTCLASS
    NotInput
  DEFAULT
    if( CodeCat = "Composite" .AND. FrmMat = "Metal" .AND.
        (FrmConfig = "RoofMetalScrewDown" .OR. 
         FrmConfig = "RoofMetalStandingSeam" .OR. 
         FrmConfig = "RoofMetalStandingSeamFilledCavity") ) 
    then 1
    else 0
    endif
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:IsMetalRoof
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Mat:InsCheck
  DATATYPE
    Float
  DESCRIPTION
    "Checking if insulation is continuous."
  INPUTCLASS
    NotInput
  DEFAULT
    if(     Mat:CodeCat = "Insulation Batt"
       .OR. Mat:CodeCat = "Insulation Board"
       .OR. Mat:CodeCat = "Insulation Loose Fill"
       .OR. Mat:CodeCat = "Insulation Other"
       .OR. Mat:CodeCat = "Insulation Spray Applied" )
    then Mat:RVal
    else 0.0
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW Mat:FrmConfigRpt
  DATATYPE
    String
  DESCRIPTION
    "String describing composite layer framing configuration for reporting."
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( CodeCat = "Composite" .AND. FrmMat = "Metal" ) then
      if( FrmConfig = "Wall16inOC" ) then
        "Metal framed wall, 16in. OC"
      else if ( FrmConfig = "Wall24inOC" ) then
        "Metal framed wall, 24in. OC"
      else if ( FrmConfig = "Floor16inOC" ) then
        "Metal framed floor, 16in. OC"
      else if ( FrmConfig = "Floor24inOC" ) then
        "Metal framed floor, 24in. OC"
      else if ( FrmConfig = "Roof16inOC" ) then
        "Metal framed roof, 16in. OC"
      else if ( FrmConfig = "Roof24inOC" ) then
        "Metal framed roof, 24in. OC"
      else if ( FrmConfig = "RoofMetalScrewDown" ) then
        "Metal screw down roof"
      else if ( FrmConfig = "RoofMetalStandingSeam" ) then
        "Metal standing seam roof"
      else if ( FrmConfig = "RoofMetalStandingSeamFilledCavity" ) then
        "Metal standing seam, filled cavity roof"
      else "Unknown metal framed composite layer"
      endif endif endif endif endif endif endif endif endif
    else if( CodeCat = "Composite" .AND. FrmMat = "Wood" ) then
      if( FrmConfig = "Wall16inOC" ) then
        "Wood framed wall, 16in. OC"
      else if ( FrmConfig = "Wall24inOC" ) then
        "Wood framed wall, 24in. OC"
      else if ( FrmConfig = "WallAWS24inOC" ) then
        "Wood framed advanced wall system, 24in. OC"
      else if ( FrmConfig = "WallAWS48inOC" ) then
        "Wood framed advanced wall system, 48in. OC"
      else if ( FrmConfig = "Floor16inOC" ) then
        "Wood framed floor, 16in. OC"
      else if ( FrmConfig = "Floor24inOC" ) then
        "Wood framed floor, 24in. OC"
      else if ( FrmConfig = "Roof16inOC" ) then
        "Wood framed roof, 16in. OC"
      else if ( FrmConfig = "Roof24inOC" ) then
        "Wood framed roof, 24in. OC"
      else if ( FrmConfig = "Roof48inOC" ) then
        "Wood framed roof, 48in. OC"
      else "Unknown wood framed composite layer"
      endif endif endif endif endif endif endif endif endif
    else "Unknown composite layer"
    endif endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -----------------------------------------------------------------------------
RULE Mat:CodeItemRpt
  DESCRIPTION
    "A text string describing composite layers, or containing CodeItem for 
     non-composite materials, for reporting."
  INPUTCLASS
    NotInput
  ANNUAL
    if( Mat:CodeCat = "Composite" ) then
      if( FrmDepthVal = 0 ) then
        Format( "%s, R-%s", FrmConfigRpt, FltToStr( CavityInsVal, 0 ) )
      else if( FrmDepthVal = 0.75 .OR. FrmDepthVal = 7.25 .OR.
               FrmDepthVal = 9.25 .OR. FrmDepthVal = 11.25 ) then
        Format( "%s, %sin., R-%s", FrmConfigRpt, FltToStr( FrmDepthVal, 2 ), 
                 FltToStr( CavityInsVal, 0 ) )
      else
        Format( "%s, %sin., R-%s", FrmConfigRpt, FltToStr( FrmDepthVal, 1 ), 
                 FltToStr( CavityInsVal, 0 ) )
      endif endif
    else CodeItem
    endif
ENDRULE

