// AirSystem - AirSegments
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALifORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN if
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------


//  This rule file addresses the following building descriptors:



// ----------- Type ------------------------------------------------------------
RULE AirSeg:Type
  DESCRIPTION
    "A high-level descriptor of the AirSegments purpose."
  HELP
    "Used to validate data model connections and relationships of in AirSystems."
  INPUTCLASS 
    Compulsory
// Enums defined in BEMEnums.txt since property referenced by Library object
;  OPTION
;   - specify -
;   Supply
;   Return
;   Relief
;   Exhaust
;   DualDuctSplitter // Not currently supported
;   MakeupAir // Not currently supported
  DEFAULT
    if( ChildIndex ( 1 ) = 1 )
    then // This is the first child of the parent AirSys
      if( Parent( Type ) != "Exhaust" )
      then "Supply"
      else "Exhaust"
      endif
    else "Return"
    endif    
; SIZING    
// AirSeg:Type for baseline systems defined in Library_HVAC file
  CHECKSIM
    if( Type = "Exhaust" .AND. AirSys:IsExhSys = 0 )
    then 
      PostError("AirSegment '%s' is Type = 'Exhaust', but the parent AirSystem:Type
                 is not specified as 'Exhaust'. This is currently not supported. Possible
                 alternate configurations include a) model as a separate
                 Type = 'Exhaust' system, b) revise to Type = 'Return' if air is
                 returned to the air handler before being exhausted, or c) 
                 revise to Type = 'Relief' if building air is relieved directly
                 from the building in proportion to system outdoor air flow rate.",
                 Name)
    else if( Type != "Exhaust" .AND. 
             AirSys:IsExhSys .AND. 
             AirSys:AirSegCnt <= 1 )
    then 
      PostError("AirSegment '%s' is Type = '%s'. For Exhaust AirSystems with only
                 one AirSegment, the Type must be 'Exhaust'.",
                 Name, Type)
    else UNCHANGED
    endif endif
  ANNUAL
    z:Type
ENDRULE


// ********** Status ***********************************************************
RULE NEW AirSeg:IsNew
  DATATYPE
    Integer
  DESCRIPTION
    "The status of the system or component, used for additions and alterations."
  INPUTCLASS 
    NotInput
  DEFAULT
// Status defined from top-down. If parent system is altered, child objects
// are defaulted to Existing
    if( Parent( IsNew ) ) then 1 else 0 endif
// Status defined from bottom-up
;   if( ( SumChildren( CoilClg:IsExisting ) + 
;         SumChildren( CoilHtg:IsExisting ) + 
;         SumChildren( Fan:IsExisting ) ) > 0 )
;   then 1 // System includes some existing components
;   else 0 // All AirSeg components are New
;   endif
  SIZING
    if( Parent( IsNew ) ) then 1 else 0 endif
  ANNUAL
    z:IsNew   
ENDRULE

RULE NEW AirSeg:IsExisting
  DATATYPE
    Integer
  DESCRIPTION
    "The status of the system or component, used for additions and alterations."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( IsNew ) then 0 else 1 endif
  SIZING
    if( IsNew ) then 0 else 1 endif
  ANNUAL
    z:IsExisting  
ENDRULE


// ----------- Path ------------------------------------------------------------
RULE AirSeg:Path
  DESCRIPTION
    "The path of air flow to/from the zone."
  HELP
    "Used to validate data model connections and relationships of in AirSystems."
  REFERENCE
    NACM Section 5.7.3.2
    NACM Section 5.7.3.3
  INPUTCLASS 
    Default
  OPTION
   NotApplicable
   Direct
   Ducted
   PlenumZones
  DEFAULT
    "Ducted"
  SIZING
    if( BaseSysNum > 0 )
    then "Ducted"
    else u:Path 
    endif
  ANNUAL
    z:Path
ENDRULE


// ----------- Source ------------------------------------------------------------
;RULE AirSeg:Src
;  DESCRIPTION
;    ""
;  HELP
;    ""
;  INPUTCLASS 
;    Optional
;  OPTION
;    NotApplicable
;    AirSystem
;    OutdoorAir
;    ZoneAir
;ENDRULE


// Rules to default AirSeg references and plenum relationships
// Supply 
RULE NEW AirSeg:SupAirSegIdx
  DATATYPE
    Integer
  LONGFORM
    SupplyAirSegmentIndex
  INPUTCLASS 
    NotInput
  DEFAULT
    if( Type = "Supply" )
    then ChildIndex( 1 ) 
    else 0
    endif
ENDRULE
RULE AirSys:SupAirSegRef
  INPUTCLASS 
    NotInput
  DEFAULT
    if( IfValidAnd( MaxChild( AirSeg:SupAirSegIdx ) > 0 ) )
    then ChildRef( AirSeg:Name, MaxChild( AirSeg:SupAirSegIdx ) )
    else UNDEFINED
    endif
  CHECKSIM
    if( Type != "Exhaust" .AND. LocalCompAssigned( SupAirSegRef ) = 0 )
    then
      PostError("AirSystem '%s' does not have a supply AirSegment.", Name )
    else UNCHANGED
    endif
ENDRULE 


// Return side
RULE NEW AirSeg:RetAirSegIdx
  DATATYPE
    Integer
  LONGFORM
    SupplyAirSegmentIndex
  INPUTCLASS 
    NotInput
  DEFAULT
    if( Type = "Return" .OR. Type = "Relief" )
    then ChildIndex( 1 ) 
    else 0
    endif
ENDRULE 
RULE AirSys:RetAirSegRef
  INPUTCLASS 
    NotInput
  DEFAULT
    if( IfValidAnd( MaxChild( AirSeg:RetAirSegIdx ) > 0 ) )
    then ChildRef( AirSeg:Name, MaxChild( AirSeg:RetAirSegIdx ) ) 
    else UNDEFINED
    endif
  CHECKSIM
    if( Type != "Exhaust" .AND. LocalCompAssigned( RetAirSegRef ) = 0 )
    then
      PostError("AirSystem '%s' does not have a return AirSegment.", Name )
    else UNCHANGED
    endif
ENDRULE

// Parent AirSys
RULE NEW AirSeg:ParentAirSysRef
  DATATYPE
    AirSystem
  LONGFORM
    ParentAirSystemReference
  DESCRIPTION
    "Reference to the AirSegment's parent AirSys object."
  INPUTCLASS
    NotInput
  DEFAULT
    Parent( Name )
  ANNUAL
    Parent( Name )
ENDRULE 



