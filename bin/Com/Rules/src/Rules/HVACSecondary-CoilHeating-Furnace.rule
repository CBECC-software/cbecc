// HVAC Secondary Systems - Heating Coils - Furnaces
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------


//  This rule file addresses the following building descriptors:



// ---------- Section 5.7.6.4 - Furnaces ---------------------------------------
// ********** Furnace Fuel Heating Efficiency (AFUE) ***************************
RULE NEW CoilHtg:CapTotInpRtd
  DATATYPE
    Float
  LONGFORM
    CapacityTotalInputRated
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( Type = "Furnace" .AND. IfValidAnd( CapTotGrossRtd > 0 ) )
    then 
      if( IfValidAnd( FurnThrmlEff > 0 ) )
      then // Calculate input ( efficiency from ThrmlEff )
        CapTotGrossRtd / FurnThrmlEff
      else if( IfValidAnd( FurnAFUE > 0 ) )
      then // Calculate input ( efficiency from AFUE )
        CapTotGrossRtd / ( ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989 )
      else CapTotGrossRtd / 0.80 // This is an intermediate default
      endif endif
    else UNDEFINED
    endif
  ANNUAL
    if( Type = "Furnace" .AND. IfValidAnd( CapTotGrossRtd > 0 ) )
    then 
      if( IfValidAnd( FurnThrmlEff > 0 ) )
      then // Calculate input ( efficiency from ThrmlEff )
        CapTotGrossRtd / FurnThrmlEff
      else if( IfValidAnd( FurnAFUE > 0 ) )
      then // Calculate input ( efficiency from AFUE )
        CapTotGrossRtd / ( ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989 )
      else CapTotGrossRtd / 0.80 // This is the default for baseline
      endif endif
    else UNDEFINED
    endif
ENDRULE



// ********** Furnace Fuel Heating Efficiency (AFUE) ***************************
RULE NEW CoilHtg:CodeMinAFUE
  DATATYPE
    Float
  LONGFORM
    CodeMinimumAFUE
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Furnace" .AND. IfValidAnd( CapTotInpRtd > 0 ) )
    then 
      if( CapTotInpRtd < 225000 )
      then 0.78
      else UNDEFINED
      endif
    else UNDEFINED
    endif
  SIZING
    if( BaseSysNum > 0 )
    then UNDEFINED
    else u:CodeMinAFUE
    endif 
  ANNUAL
    if( BaseSysNum > 0 )
    then UNDEFINED
    else z:CodeMinAFUE
    endif 
ENDRULE

// -----------------------------------------------------------------------------
RULE CoilHtg:FurnAFUE
  DESCRIPTION
    "The Annual Fuel Utilization Efficiency (AFUE) is an indicator of expected, 
     seasonal furnace efficiency. It is determined in accordance with DOE Test
     Standards." 
  HELP
    "This is a required input if furnace thermal efficiency is not entered and the
     gross input capacity is < 225 MBH."
  REFERENCE 
    NACM Section 5.7.6.4
    T24 Std Table 110.2-J
  INPUTCLASS 
    CondRequired
  COMMONMINIMUM
    0.70
  COMMONMAXIMUM
    0.98
  MAXIMUM
    1.0
  DEFAULT
    if( Proj:AutoEffInput = 1 .AND.
        LocalStatus( CodeMinAFUE ) > 0 )
    then // For PROPOSED AutoEffInput only 
      CodeMinAFUE
    else UNDEFINED
    endif
  CHECKCODE : T24N
    if( LocalStatus( CodeMinAFUE ) > 0 .AND. 
        LocalStatus( FurnAFUE ) = 0 .AND. 
        LocalStatus( FurnThrmlEff ) = 0 )
    then 
      PostError("Furnace coil '%s' must be specified with AHRI rated AFUE or 
                 thermal efficiency", Name )
    else 
    if( BypassMinEffCheck = 0 .AND.
        LocalStatus( CodeMinAFUE ) > 0 .AND. 
        IfValidAnd( FurnAFUE < CodeMinAFUE ) .AND.
        IfValidAnd( FurnThrmlEff < 0.8 ) ) // If AFUE rated, minimum 
    then 
      PostError("AFUE of coil '%s' less than the code minimum required efficiency
                 of AFUE %.2f. Select the bypass of efficiency check at the coil
                 if this is not applicable.", Name, CodeMinAFUE )
    else UNCHANGED 
    endif endif
  CHECKCODE : S901G ECBC
    if( LocalStatus( CodeMinAFUE ) > 0 .AND. 
        LocalStatus( FurnAFUE ) = 0 .AND. 
        LocalStatus( FurnThrmlEff ) = 0 )
    then 
      PostError("Furnace coil '%s' must be specified with AHRI rated AFUE or 
                 thermal efficiency", Name )
    else UNCHANGED 
    endif
  SIZING
    if( ( BaseSysNum > 0 ) .OR. Type != "Furnace")
    then UNDEFINED
    else u:FurnAFUE
    endif
  ANNUAL
    if( BaseSysNum > 0 .AND. Type = "Furnace" )
    then
      if( ValidOr( CapTotGrossRtd, 0 ) / 0.80 < 225000 )
      then 0.78
      else UNDEFINED
      endif
    else z:FurnAFUE
    endif
ENDRULE


// ********** Furnace Fuel Heating Efficiency (Thrml Eff) **********************
RULE NEW CoilHtg:CodeMinThrmlEff
  DATATYPE
    Float
  LONGFORM
    CodeMinimumThrmlEff
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Furnace" .AND. IfValidAnd( CapTotInpRtd > 0 ) )
    then 
      if( CapTotInpRtd < 225000 )
        then 
        if( IfValidAnd( FurnAFUE > 0 ) = 0 )
        then 0.80 // User has not input AFUE, so minimum thermal efficiency is an alternate CodeMin
        else UNDEFINED
        endif
      else if( FuelSrc = "Oil" ) 
      then 0.81
      else 0.80
      endif endif
    else UNDEFINED
    endif
  SIZING
    if( BaseSysNum > 0 )
    then UNDEFINED
    else u:CodeMinThrmlEff
    endif 
  ANNUAL
    if( BaseSysNum > 0 )
    then UNDEFINED
    else z:CodeMinThrmlEff
    endif 
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW CoilHtg:FurnThrmlEffCheck
// made the original FurnThrmlEff into this rule new so an
// adjustment can be applied for duct leakage.
  DATATYPE
    Float
  LONGFORM
    FurnaceThermalEfficiencyCheck
  DESCRIPTION
    "The heating efficiency of a furnace at AHRI rated conditions."
  HELP
    "This is a required input if furnace thermal efficiency is not entered and the
     gross input capacity is < 225 MBH."
  REFERENCE 
    NACM Section 5.7.6.5
    T24 Std Table 110.2-J
  INPUTCLASS 
    NotInput
  COMMONMINIMUM
    0.70
  COMMONMAXIMUM
    0.98
  MAXIMUM
    1.0
  DEFAULT
    if( Type = "Furnace" )
    then 
      if( Proj:AutoEffInput = 1 .AND. LocalStatus( CodeMinThrmlEff ) > 0 ) 
      then // For PROPOSED AutoEffInput only 
        CodeMinThrmlEff
      else if( IfValidAnd( FurnAFUE > 0 ) )
      then // Convert user input of AFUE to ThrmlEff
        ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989
      else UNDEFINED
      endif endif
    else UNDEFINED
    endif
  CHECKCODE : T24N
    if( LocalStatus( CodeMinThrmlEff ) > 0 .AND.
        IfValidAnd( FurnAFUE > 0 ) = 0 .AND.
        IfValidAnd( FurnThrmlEff > 0 ) = 0 )
    then 
      PostError("Furnace coil '%s' must be specified with AHRI rated AFUE or 
                thermal efficiency.", Name )
    else 
    if( BypassMinEffCheck = 0 .AND.
        LocalStatus( CodeMinThrmlEff ) > 0 .AND. 
        IfValidAnd( FurnThrmlEff < CodeMinThrmlEff ) .AND.
        IsNew )
    then
      PostError("Thermal efficiency of coil '%s' is less than the code minimum
                 required efficiency of %.2f. Select the bypass of
                 efficiency check at the coil if this is not applicable.",
                 Name, CodeMinThrmlEff)
    else UNCHANGED 
    endif endif
  CHECKCODE : S901G ECBC
    if( LocalStatus( CodeMinThrmlEff ) > 0 .AND.
        IfValidAnd( FurnAFUE > 0 ) = 0 .AND.
        IfValidAnd( FurnThrmlEff > 0 ) = 0 )
    then 
      PostError("Furnace coil '%s' must be specified with AHRI rated AFUE or 
                thermal efficiency.", Name )
    else UNCHANGED 
    endif
  SIZING
    if( BaseSysNum > 0 .AND. Type = "Furnace")
    then 0.8
    else if( Type = "Furnace" )
      then
      if( IfValidAnd( u:FurnAFUE > 0 ) .AND. IfValidAnd( u:FurnThrmlEff > 0 ) = 0 ) 
      then
        // User has provided AFUE but not ThrmlEff, use equation to calculate ThrmlEff
        ( 0.0051427 * ( u:FurnAFUE * 100 ) ) + 0.3989
      else u:FurnThrmlEff
      endif
    else UNDEFINED
    endif endif
  ANNUAL
    if( z:Proj:IsBaseHVAC .AND. Type = "Furnace" .AND. IsNew )
    then 
      if( IfValidAnd( FurnAFUE > 0 ) )
      then ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989
      else 0.8
      endif
    else z:FurnThrmlEff
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE CoilHtg:FurnThrmlEff
  DESCRIPTION
    "The heating efficiency of a furnace at AHRI rated conditions."
  HELP
    "This is a required input if furnace thermal efficiency is not entered and the
     gross input capacity is < 225 MBH."
  REFERENCE 
    NACM Section 5.7.6.5
    T24 Std Table 110.2-J
  INPUTCLASS 
    CondRequired
  COMMONMINIMUM
    0.70
  COMMONMAXIMUM
    0.98
  MAXIMUM
    1.0
  DEFAULT
    FurnThrmlEffCheck
  SIZING
    if( BaseSysNum > 0 .AND. Type = "Furnace")
    then 0.8
    else if( Type = "Furnace" ) then
      FurnThrmlEffCheck
//      if( IfValidAnd( Parent2(DuctLeakage) > 0 ) ) then
//        FurnThrmlEffCheck / 1.0486              // For now, increase HIR by 4.86% if duct leakage > 0
//      else 
//        FurnThrmlEffCheck
//      endif
    else UNDEFINED
    endif endif
  ANNUAL
    if( z:Proj:IsBaseHVAC .AND. Type = "Furnace" .AND. IsNew )
    then 
      if( IfValidAnd( FurnAFUE > 0 ) )
      then ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989
      else 0.8
      endif
    else z:FurnThrmlEff
    endif
//  DEFAULT
//    if( Type = "Furnace" )
//    then 
//      if( Proj:AutoEffInput = 1 .AND. LocalStatus( CodeMinThrmlEff ) > 0 ) 
//      then // For PROPOSED AutoEffInput only 
//        CodeMinThrmlEff
//      else if( IfValidAnd( FurnAFUE > 0 ) )
//      then // Convert user input of AFUE to ThrmlEff
//        ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989
//      else UNDEFINED
//      endif endif
//    else UNDEFINED
//    endif
//  CHECKCODE : T24N
//    if( LocalStatus( CodeMinThrmlEff ) > 0 .AND.
//        IfValidAnd( FurnAFUE > 0 ) = 0 .AND.
//        IfValidAnd( FurnThrmlEff > 0 ) = 0 )
//    then 
//      PostError("Furnace coil '%s' must be specified with AHRI rated AFUE or 
//                thermal efficiency.", Name )
//    else 
//    if( BypassMinEffCheck = 0 .AND.
//        LocalStatus( CodeMinThrmlEff ) > 0 .AND. 
//        IfValidAnd( FurnThrmlEff < CodeMinThrmlEff ) .AND.
//        IsNew )
//    then
//      PostError("Thermal efficiency of coil '%s' is less than the code minimum
//                 required efficiency of %.2f. Select the bypass of
//                 efficiency check at the coil if this is not applicable.",
//                 Name, CodeMinThrmlEff)
//    else UNCHANGED 
//    endif endif
//  CHECKCODE : S901G ECBC
//    if( LocalStatus( CodeMinThrmlEff ) > 0 .AND.
//        IfValidAnd( FurnAFUE > 0 ) = 0 .AND.
//        IfValidAnd( FurnThrmlEff > 0 ) = 0 )
//    then 
//      PostError("Furnace coil '%s' must be specified with AHRI rated AFUE or 
//                thermal efficiency.", Name )
//    else UNCHANGED 
//    endif
//  SIZING
//    if( BaseSysNum > 0 .AND. Type = "Furnace")
//    then 0.8
//    else if( Type = "Furnace" )
//      then
//      if( IfValidAnd( u:FurnAFUE > 0 ) .AND. IfValidAnd( u:FurnThrmlEff > 0 ) = 0 ) 
//      then
//        // User has provided AFUE but not ThrmlEff, use equation to calculate ThrmlEff
//        ( 0.0051427 * ( u:FurnAFUE * 100 ) ) + 0.3989
//      else u:FurnThrmlEff
//      endif
//    else UNDEFINED
//    endif endif
//  ANNUAL
//    if( z:Proj:IsBaseHVAC .AND. Type = "Furnace" .AND. IsNew )
//    then 
//      if( IfValidAnd( FurnAFUE > 0 ) )
//      then ( 0.0051427 * ( FurnAFUE * 100 ) ) + 0.3989
//      else 0.8
//      endif
//    else z:FurnThrmlEff
//    endif
ENDRULE


// ********** Furnace Fuel Heating Part Load Efficiency Curve ******************
RULE CoilHtg:FurnHIR_fPLRCrvRef
  DESCRIPTION
    "Normalized curve that varies full-load efficiency as a function of 
     part-load ratio."
  REFERENCE 
    NACM Section 5.7.6.4
  INPUTCLASS
    Prescribed  
  SIZING
    if( Type = "Furnace" )
    then RuleLibrary(CrvQuad, "CoilHtgFurnFIRRatio_fQRatio") 
    else UNDEFINED
    endif
  ANNUAL
    z:FurnHIR_fPLRCrvRef
ENDRULE


// ********** Furnace Fuel Heating Pilot ***************************************
RULE CoilHtg:FurnIgnType
  DESCRIPTION
    "The method used to start combustion in fuel-fired furnaces."
  REFERENCE 
    NACM Section 5.7.6.4
  INPUTCLASS 
    Default
  OPTION
    IntermittentIgnitionDevice
    PilotLight
  DEFAULT
    if( Type = "Furnace" )
    then "IntermittentIgnitionDevice"
    else UNDEFINED
    endif
  SIZING
    if( BaseSysNum > 0 .AND. Type = "Furnace")
    then "IntermittentIgnitionDevice"
    else if( Type = "Furnace" )
    then u:FurnIgnType
    else UNDEFINED
    endif endif
  ANNUAL
    z:FurnIgnType
ENDRULE

// -----------------------------------------------------------------------------
RULE CoilHtg:FurnPilotFuelInp
  DESCRIPTION
    "The fuel input for a pilot light on a furnace."
  REFERENCE 
    NACM Section 5.7.6.4
  INPUTCLASS 
    Default
  DEFAULT
    if( Type = "Furnace" .AND. 
        IfValidAnd( FurnIgnType = "PilotLight" ) .AND.
        LocalStatus ( CapTotGrossRtd ) > 0 )
    then CapTotGrossRtd * 0.01 // Pilot is ~1% of gross output capacity.
    else UNDEFINED
    endif
  SIZING
    if( BaseSysNum > 0 .AND. Type = "Furnace")
    then UNDEFINED
    else if( Type = "Furnace" )
    then u:FurnPilotFuelInp
    else UNDEFINED
    endif endif
  ANNUAL
    z:FurnPilotFuelInp
ENDRULE


// ********** Furnace Fuel Heating Fan/Auxiliary *******************************
RULE CoilHtg:AuxPwr
  DESCRIPTION
    "The fan energy in forced draft furnaces and the auxiliary (pumps and outdoor
     fan) energy in fuel-fired heat pumps."
  REFERENCE 
    NACM Section 5.7.6.4
  PREVIOUSNAMES
    AuxilliaryPower
  INPUTCLASS 
    Optional 
  UNITS
    W
  DEFAULT
    0
  SIZING
    if( BaseSysNum > 0 )
    then 0
    else u:AuxPwr
    endif
  ANNUAL
    z:AuxPwr
ENDRULE
