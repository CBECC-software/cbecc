// OpaqueEnvelope - UndergroundWalls
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------

// Placeholder rules to assign C & F-Factors to UndgrFlr/UndgrWall for initial testing translators



// -------------- Underground Wall Name --------------------
// Input restriction summary: 
//      None
// Baseline rule summary: 
//      If provided, same for all transformations.
//
RULE UndgrWall:Name
  DESCRIPTION
    "A unique name that identifies the underground wall."  
  HELP
    "A unique name or code that identifies the wall and ties it to the 
     construction documents submitted for energy code review. It is not 
     mandatory to name surfaces."  
  REFERENCE 
    ACM-5.5.8 Below Grade Walls
  INPUTCLASS
    Required
  // No transformations are needed since already copied initially.
ENDRULE



// -------------- Underground Floor Status -----------------------------
RULE UndgrWall:Status
  DESCRIPTION
    "This sets the Underground Wall construction status to New."  
  HELP
    ""
  REFERENCE 
    ACM-5.5.8 Below Grade Walls
  INPUTCLASS
    Required
  DEFAULT
    Parent(EnvStatus)
  CHECKCODE
    if( Proj:IsNewEnv ) then
      if( Status != "New" ) then
        PostWarning( "Underground Wall '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'New' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsExistingEnv ) then
      if( Status != "Existing" ) then
        PostWarning( "Underground Wall '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'Existing' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsAdd ) then
      if( Status = "Altered" ) then
        PostWarning( "Underground Wall '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'New' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsAltOnly ) then
      if( Status = "New" ) then
        PostWarning( "Underground Wall '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'Altered' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else UNCHANGED
    endif endif endif endif
  SIZING
    if( Proj:IsNewEnv ) then "New"
    else if( Proj:IsExistingEnv ) then "Existing"
    else if( Proj:IsAdd .AND. u:Status = "Altered" ) then "New"
    else if( Proj:IsAltOnly .AND. u:Status = "New" ) then "Altered"
    else u:Status
    endif endif endif endif
  ANNUAL
    z:Status
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW UndgrWall:IsNew
  DATATYPE 
    Integer
  LONGFORM
    IsNew
  DESCRIPTION
    "Flag to identify whether the status of the surface is New"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 1
    else if( Proj:IsExistingEnv ) then 0
    else if( Proj:IsAdd .AND. u:Status = "Altered" ) then 1
    else if( Proj:CompType = "ExistingAlteration" ) then 0
    else if( u:Status = "New") then 1
    else 0
    endif endif endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW UndgrWall:IsAltered
  DATATYPE 
    Integer
  LONGFORM
    IsAltered
  DESCRIPTION
    "Flag to identify whether the status of the surface is Altered"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 0
    else if( Proj:IsExistingEnv ) then 0
    else if( Proj:IsAdd ) then 0
    else if( Proj:CompType = "ExistingAlteration" .AND. u:Status = "New" ) then 1
    else if( u:Status = "Altered" ) then 1
    else 0
    endif endif endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW UndgrWall:IsExisting
  DATATYPE 
    Integer
  LONGFORM
    IsExisting
  DESCRIPTION
    "Flag to identify whether the status of the surface is Existing"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 0
    else if( Proj:IsExistingEnv ) then 1
    else if( u:Status = "Existing" ) then 1
    else 0
    endif endif endif
ENDRULE


// -------------- Determine the name of the underground wall construction ---------
RULE UndgrWall:ConsAssmRef
  DESCRIPTION
    "Construction assembly reference (construction name) for an Underground Wall."  
  HELP
    "A reference to a construction assembly. "  
  REFERENCE 
    ACM-5.5.8 Below Grade Walls
  INPUTCLASS
    Required
  CHECKSIM
    if( LocalCompAssigned(u:ConsAssmRef) < 1 )
    then
      PostError("An underground wall construction has not been assigned to 
                 surface '%s'.",Name)
    else UNCHANGED
    endif
  SIZING_PROPOSED
    u:ConsAssmRef
  SIZING_BASELINE : S901G ECBC
    if( Spc:NotEnclosed = 1 )
    then zp:ConsAssmRef
    else
      if( Status = "Existing" )
      then zp:ConsAssmRef
      else 
        if( Spc:Semiheated = 1 )
        then RuleLibrary(ConsAssm,"WallBelowGradeC1.14")
        else
          if( Spc:OccClass = "Nonresidential" )
	  then
	    if( Proj:CliZnNum < 50 ) 
	    then RuleLibrary(ConsAssm,"WallBelowGradeC1.14")
	    else RuleLibrary(ConsAssm,"WallBelowGradeC0.119")
	    endif
	  else
	    if( Spc:OccClass = "Residential" )
	    then
	      if( Proj:CliZnNum < 40 )
	      then RuleLibrary(ConsAssm,"WallBelowGradeC1.14")
	      else if( Proj:CliZnNum = 70 ) then RuleLibrary(ConsAssm,"WallBelowGradeC0.092") 
	      else if( Proj:CliZnNum = 80 ) then RuleLibrary(ConsAssm,"WallBelowGradeC0.075")
	      else RuleLibrary(ConsAssm,"WallBelowGradeC0.119")
	      endif endif endif
            else UNDEFINED
	    endif
	  endif
        endif 
      endif
    endif
  SIZING_BASELINE : T24N
    if( Status = "Existing" )
    then zp:ConsAssmRef
    else RuleLibrary(ConsAssm,"BelowGradeWallC114")
    endif 
  ANNUAL_PROPOSED
    zp:ConsAssmRef
  ANNUAL_BASELINE 
    zb:ConsAssmRef
ENDRULE


// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// ------- Calculate area by Status - UndgrWall
RULE NEW UndgrWall:AreaNew
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "New" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -----------------------------------------------------------------------------
RULE NEW UndgrWall:AreaAltered
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Altered" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -----------------------------------------------------------------------------
RULE NEW UndgrWall:AreaExisting
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Existing" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -------------- Underground Wall Reference CHECKSIM ----------------------
//RULE NEW UndgrWall:ConsAssmRefCheck
//  DESCRIPTION
//    "Checks if all underground walls have a underground wall construction 
//     assignment."  
//  HELP
//    ""
//  INPUTCLASS
//    Optional
//  CHECKSIM
//    if( LocalCompAssigned(u:ConsAssmRef) < 1 )
//    then
//      PostError("An underground wall construction has not been assigned to 
//                 surface '%s'.",Name)
//    else UNCHANGED
//    endif
//ENDRULE


// -------------- Underground Wall CFactor  --------------------
RULE NEW UndgrWall:CFactor
  DATATYPE
    Float
  DESCRIPTION
     "This determines the wall c-factor."
  REFERENCE 
    ACM-5.5.8 Below Grade Walls
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    zp:ConsAssmRef:CFactor
  SIZING_BASELINE : S901G ECBC
    if( LocalCompAssigned(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then zp:CFactor
      else
        if( Spc:Semiheated = 1 )
	then 1.14
        else
          if( Spc:OccClass = "Nonresidential" )
	  then
	    if( Proj:CliZnNum < 50 ) then 1.14 else 0.119
	    endif
	  else
	    if( Spc:OccClass = "Residential" )
	    then
	      if( Proj:CliZnNum < 40 )
	      then 1.14
	      else if( Proj:CliZnNum = 70 ) then 0.092 
	      else if( Proj:CliZnNum = 80 ) then 0.075
	      else 0.119
	      endif endif endif
            else UNDEFINED
	    endif
	  endif
	endif
      endif
    endif
  SIZING_BASELINE
    if( LocalCompAssigned(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then zp:CFactor
      else 1.14
      endif
    endif
  ANNUAL_PROPOSED
    zp:CFactor
  ANNUAL_BASELINE
    zb:CFactor
ENDRULE


// -------------- Underground Wall Compliance Check --------------------
RULE NEW UndgrWall:MandatoryInsComp
//  DATATYPE
//    String
//  LONGFORM
//    MandatoryInsulationCompliance
  RULESETS
    T24N
  DESCRIPTION
    "Does comply with the requirements of Section 120.7 Mandatory
     Insulation Requirements "
  HELP
    ""
  REFERENCE 
    ACM-5.5.8 Below Grade Walls
  INPUTCLASS
    NotInput
  CHECKCODE
    if( LocalCompAssigned(u:ConsAssmRef) > 0 )
    then
      if( u:Status = "Existing" )
      then UNCHANGED
      else
        if( u:Spc:SlabTypeCount >= 1 )
	then
	  if( u:Proj:CliZn = "ClimateZone16" )
	  then
	    if( u:CFactor > 0.092444 )
	    then
	      PostError("The Below Grade Wall CFactor of surface '%s' exceeds 0.092, 
	                 which requires continuous exterior R10 insulation when 
	                 connected to a heated slab.",Name)
            else UNCHANGED
	    endif
          else
	    if( u:ConsAssmRef:CFactor > 0.176444 )
	    then
	      PostError("The Below Grade Wall CFactor of surface '%s' exceeds 0.176, 
	                 which requires continuous exterior R5 insulation when 
	                 connected to a heated slab.",Name)
            else UNCHANGED
	    endif
	  endif
        else UNCHANGED
        endif
      endif
    else UNCHANGED
    endif
ENDRULE


// -------------- Underground Wall Height ----------------
RULE UndgrWall:Hgt
  DESCRIPTION
     "The height of an underground wall surface."
  HELP
    "Used in conjuction with C-Factor to simulate the thermal performance of 
     vertical surfaces in contact with the earth."
  REFERENCE 
    ACM-5.5.8 Below Grade Walls
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  DEFAULT
    if ( Proj:IsDetailedGeometry )
    then  SumChildren(PolyLp:ZHgt)
    else  UNDEFINED  
    endif
  CHECKSIM
    IF( Height = 0 )
      then
        PostError("Height for UndgrWall '%s' must be >= 0.", Name)
    else UNCHANGED
    endif
  SIZING
    u:Height
  ANNUAL
    z:Height
ENDRULE