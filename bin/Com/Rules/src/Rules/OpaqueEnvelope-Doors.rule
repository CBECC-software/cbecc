// Opaque Envelope - Doors
//
// -------------------------------------------------------------------------
//  Copyright (c) 2013, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//             


// -------------- Door Name --------------------
// Input restriction summary: 
//      None
// ANNUAL_BASELINE rule summary: 
//      If provided, same for all transformations.
//
RULE ExtWall:Dr:Name
  DESCRIPTION
    "A unique name that identifies the wall."  
  HELP
    "A unique name or code that relates the exterior wall to the design documents. This is 
    an optional input since there are other acceptable ways to key surfaces to the construction 
    documents."  
  REFERENCE 
    ACM-5.5.4
  INPUTCLASS
    Required
ENDRULE




// -------------- Exterior Door Status -----------------------------
RULE ExtWall:Dr:Status
  DESCRIPTION
    "This sets the Exterior Door construction status to New.  There will be an option
     to select New, ExistingAlteration, ExistingUnchanged, Removed."  
  HELP
    ""
  INPUTCLASS
    Required
  DEFAULT
    Parent(Status)
//    Parent(EnvStatus)
  CHECKCODE
    if( Proj:IsNewEnv ) then
      if( Status != "New" ) then
        PostWarning( "Door '%s':  Status '%s' is incompatible with
                      Compliance Type '%s'.  Status will be treated as
                      'New' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsExistingEnv) then
      if( Status != "Existing" ) then
        PostWarning( "Door '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'Existing' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsAdd ) then
      if( Status = "Altered" ) then
        PostWarning( "Door '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'New' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsAltOnly ) then
      if( Status = "New" ) then
        PostWarning( "Door '%s':  Status '%s' is incompatible with 
                      Compliance Type '%s'.  Status will be treated as
                      'Altered' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else UNCHANGED
    endif endif endif endif
  SIZING
    if( Proj:IsNewEnv ) then "New"
    else if( Proj:IsExistingEnv ) then "Existing"
    else if( Proj:IsAdd .AND. u:Status = "Altered" ) then "New"
    else if( Proj:IsAltOnly .AND. u:Status = "New" ) then "Altered"
    else u:Status
    endif endif endif endif
  ANNUAL
    z:Status
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Dr:IsNew
  DATATYPE 
    Integer
  LONGFORM
    IsNew
  DESCRIPTION
    "Flag to identify whether the status of the surface is New"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 1
    else if( Proj:IsExistingEnv ) then 0
    else if( Proj:IsAdd .AND. u:Status = "Altered" ) then 1
    else if( Proj:CompType = "ExistingAlteration" ) then 0
    else if( u:Status = "New") then 1
    else 0
    endif endif endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Dr:IsAltered
  DATATYPE 
    Integer
  LONGFORM
    IsAltered
  DESCRIPTION
    "Flag to identify whether the status of the surface is Altered"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 0
    else if( Proj:IsExistingEnv ) then 0
    else if( Proj:IsAdd ) then 0
    else if( Proj:CompType = "ExistingAlteration" .AND. u:Status = "New" ) then 1
    else if( u:Status = "Altered" ) then 1
    else 0
    endif endif endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW Dr:IsExisting
  DATATYPE 
    Integer
  LONGFORM
    IsExisting
  DESCRIPTION
    "Flag to identify whether the status of the surface is Existing"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 0
    else if( Proj:IsExistingEnv ) then 1
    else if( u:Status = "Existing" ) then 1
    else 0
    endif endif endif
ENDRULE




// -------------- Door Construction Reference CheckCode ----------------------
//RULE NEW ExtWall:Dr:DrConsRefCheck
//  DESCRIPTION
//    "Checks if all door surfaces have a door construction assignment."  
//  HELP
//    ""
//  INPUTCLASS
//    Optional
//  CHECKCODE
//    if( LocalCompAssigned(u:Dr:DrConsRef) < 1 )
//    then
//      PostError("A door construction has not been assigned to '%s'.",Name)
//    else UNCHANGED
//    endif
//ENDRULE


// -------------- Building Type - Res, Relocatable School, NonRes --------------
RULE NEW ExtWall:Dr:BldgType
  DATATYPE
    Enumeration
  LONGFORM
    BuildingType
  DESCRIPTION
    "Space type used when determining the exterior wall u-factor"  
  HELP
    ""  
  OPTION : S901G ECBC
    Residential
    Semiheated
    NonResidential
  OPTION
    Residential
    RelocSchool
    NonResidential
  REFERENCE 
    ACM-5.5.4
  INPUTCLASS
    NotInput
  DEFAULT : S901G ECBC
    if( Spc:Semiheated = 1 )
    then "Semiheated"
    else if( Spc:OccClass = "Residential" )
//            Spc:SpcFunc = "Courthouse/Police Station/Penitentiary - Confinement Cells"
//       .OR. Spc:SpcFunc = "Dormitory - Living Quarters"
//       .OR. Spc:SpcFunc = "Fire Stations - Sleeping Quarters"
//       .OR. Spc:SpcFunc = "Hospital - Nursery"
//       .OR. Spc:SpcFunc = "Hospital - Patient Room" 
//       .OR. Spc:SpcFunc = "Hotel/Highway Lodging - Hotel Guest Rooms"
//       .OR. Spc:SpcFunc = "Hotel/Highway Lodging - Highway Lodging Guest Rooms")
    then "Residential"
    else "NonResidential"
    endif endif
  DEFAULT
    if( Bldg:RelocPubSchoolBldg = 1 )
    then "RelocSchool"
    else if(     Spc:SpcFunc = "High-Rise Residential Living Spaces"
            .OR. Spc:SpcFunc = "Hotel/Motel Guest Room"
            .OR. Spc:SpcFunc = "Housing, Public and Common Areas: Multi-family, Dormitory"
            .OR. Spc:SpcFunc = "Housing, Public and Common Areas: Senior Housing"
            .OR. Spc:SpcFunc = "Police Station and Fire Station" )
    then "Residential"
    else "NonResidential"
    endif endif
  SIZING : S901G ECBC
    if( Spc:Semiheated = 1 )
    then "Semiheated"
    else if( Spc:OccClass = "Residential" )
    then "Residential"
    else "NonResidential"
    endif endif  
  SIZING
    if( Bldg:RelocPubSchoolBldg = 1 )
    then "RelocSchool"
    else if(     Spc:SpcFunc = "High-Rise Residential Living Spaces"
            .OR. Spc:SpcFunc = "Hotel/Motel Guest Room"
            .OR. Spc:SpcFunc = "Housing, Public and Common Areas: Multi-family, Dormitory"
            .OR. Spc:SpcFunc = "Housing, Public and Common Areas: Senior Housing"
            .OR. Spc:SpcFunc = "Police Station and Fire Station" )
    then "Residential"
    else "NonResidential"
    endif endif
  ANNUAL
    z:BldgType
ENDRULE


// -------------- Door Certifaction Method ----------------------------------
RULE NEW ExtWall:Dr:CertificationMthd
  DATATYPE
    Enumeration
  DESCRIPTION
    "Defines the door certification method."  
  HELP
    ""
  REFERENCE 
    ACM-5.5.6
  INPUTCLASS
    Prescribed
  OPTION : S901G ECBC
    - specify -
    NFRCRated
    90.1DefaultPerformance
  OPTION
    - specify -
    NFRCRated
    DefaultPerformance
  CHECKCODE
    if( LocalCompAssigned(u:DrConsRef) > 0 )
    then
      if( u:DrConsRef:CertificationMthd = "- specify -" )
      then
        PostError("Door Certification Method has not been specified for the 
                   door construciton assigned to '%s'.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:DrConsRef:CertificationMthd
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:DrConsRef:CertificationMthd
      else "NFRCRated"
      endif
    endif
  ANNUAL_PROPOSED
    zp:CertificationMthd
  ANNUAL_BASELINE  
    zb:CertificationMthd
ENDRULE



// -------------- Door Opening Type ---------------------------------------
RULE NEW ExtWall:Dr:Open
  DATATYPE
    Enumeration
  DESCRIPTION
    "Defines the exterior door operation. "  
  HELP
    ""
  REFERENCE 
    ACM-5.5.6
  INPUTCLASS
    Prescribed
  OPTION
    - specify -
    Swinging
    NonSwinging
  CHECKCODE
    if( LocalCompAssigned(u:DrConsRef) > 0 )
    then
      if( u:DrConsRef:Open = "- specify -" )
      then
        PostError("Door Open Type has not been specified for the door 
                   construction assigned to '%s'.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( u:DrConsRef:Open = "Swinging" )
      then "Swinging"
      else 
        if( u:DrConsRef:Open = "NonSwinging" )
        then "NonSwinging"
        else Undefined
        endif 
      endif
    endif
  SIZING_BASELINE
    if (LocalStatus(u:Name) < 1)
    then UNDEFINED
    else
      if( u:DrConsRef:Open = "Swinging" )
      then "Swinging"
      else 
        if( u:DrConsRef:Open = "NonSwinging" )
        then "NonSwinging"
        else Undefined
        endif 
      endif
    endif
  ANNUAL_PROPOSED
    zp:Open
  ANNUAL_BASELINE
    zb:Open
ENDRULE


// -------------- Door Type ---------------------------------------
RULE NEW ExtWall:Dr:Type
  DATATYPE
    Enumeration
  DESCRIPTION
    "Specifies the type of door for CEC Default Performance."  
  HELP
    ""
  REFERENCE 
    ACM-5.5.6
  INPUTCLASS
    Prescribed
  OPTION : S901G ECBC
    - specify -
    MetalInsulatedSwingingDoor
    MetalUninsulatedDoubleLayerDoor
    MetalUninsulatedSingleLayerDoor
    WoodLessThan1.75inThickDoor
    WoodGreaterThanOrEqualTo1.75inThickDoor
  OPTION
    - specify -
    MetalInsulatedSingleLayerSectionalDoor
    MetalInsulatedSwingingDoor
    MetalUninsulatedDoubleLayerDoor
    MetalUninsulatedSingleLayerDoor
    MetalUninsulatedSingleLayerRollupDoor
    WoodLessThan1.75inThickDoor
    WoodGreaterThanOrEqualTo1.75inThickDoor
  CHECKCODE : S901G ECBC
    if( LocalCompAssigned(u:DrConsRef) > 0 )
    then
      if( u:DrConsRef:CertificationMthd = "90.1DefaultPerformance"
         .AND. u:DrConsRef:Type = "- specify -" )
      then
        PostError("Door type has not been specified for the door construction 
                   assigned to '%s'.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  CHECKCODE
    if( LocalCompAssigned(u:DrConsRef) > 0 )
    then
      if( u:DrConsRef:CertificationMthd = "DefaultPerformance"
         .AND. u:DrConsRef:Type = "- specify -" )
      then
        PostError("Door type has not been specified for the door construction 
                   assigned to '%s'.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:DrConsRef:Type
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:DrConsRef:Type
      else UNDEFINED
      endif
    endif
  ANNUAL_PROPOSED
    zp:Type
  ANNUAL_BASELINE
    zb:Type
ENDRULE



// -------------- Door UFactor ---------------------------------------
RULE NEW ExtWall:Dr:UFactor
  DATATYPE
    Float
  DESCRIPTION
    ""  
  HELP
    ""
  INPUTCLASS
    NotInput
//  DEFAULT
  CHECKCODE
    if( LocalCompAssigned(u:DrConsRef) > 0 )
    then
      if( u:DrConsRef:UFactor = 0 
         .OR. LocalStatus(u:DrConsRef:UFactor) < 1 )
      then
        PostError("A UFactor has not been specified for the door construction 
                   assigned to '%s'.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:DrConsRef:UFactor
    endif
  SIZING_BASELINE : S901G ECBC
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:DrConsRef:UFactor
      else BaseOpqDoorUFactor_S901G:UFactor("BldgType",zb:BldgType, "Operation",zb:Open, "ClimateZone",u:Proj:CliZn)
      endif
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:DrConsRef:UFactor
      else BaseOpqDoorUFactor:UFactor("BldgType",zb:BldgType, "Operation",zb:Open, "ClimateZone",u:Proj:CliZnNum)
      endif
    endif
  ANNUAL_PROPOSED
    zp:UFactor
  ANNUAL_BASELINE
    zb:UFactor
ENDRULE

// BaseOpqDoorUFactor_S901G:UFactor("BldgType",zb:BldgType, "Operation",zb:Open, "ClimateZone",u:Proj:CliZn)
TABLE BaseOpqDoorUFactor_S901G
    BldgType         Operation                 UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor  
    ClimateZone=                               1A      1B      2A      2B      3A      3B      3C      4A      4B      4C      5A      5B      5C      6A      6B      7       8
    NonResidential   NonSwinging               1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.5     1.5     1.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5
    NonResidential   Swinging                  0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.5     0.5
    Residential      NonSwinging               1.45    1.45    0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5     0.5
    Residential      Swinging                  0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.5     0.5     0.5     0.5     0.5     0.5     0.5
    Semiheated       NonSwinging               1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    1.45    0.5
    Semiheated       Swinging                  0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7     0.7
ENDTABLE

// BaseOpqDoorUFactor:UFactor("BldgType",zb:BldgType, "Operation",zb:Open, "ClimateZone",u:Proj:CliZnNum)
TABLE BaseOpqDoorUFactor
    BldgType         Operation                 UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor UFactor   
    ClimateZone=                               1       2       3       4       5       6       7       8       9       10      11      12      13      14      15      16 
    NonResidential   NonSwinging               0.500   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   0.500
    NonResidential   Swinging                  0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700
    Residential      NonSwinging               0.500   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   1.450   0.500
    Residential      Swinging                  0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700
    RelocSchool      NonSwinging               0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500   0.500
    RelocSchool      Swinging                  0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700   0.700
ENDTABLE


// -------------- Determine the name of the exterior door construction ---------
RULE Proj:Bldg:Story:Space:ExtWall:Dr:DrConsRef
  DESCRIPTION
    "Construction assembly reference (construction name) for an exterior wall."  
  HELP
    "A reference to a construction assembly. "  
  REFERENCE 
    ACM-5.5.4
    App5.5C-Table5.5.1
    JA4-Table4.2.7
  CHECKCODE
    if( LocalCompAssigned(u:DrConsRef) < 1 )
    then
      PostError("A door construction has not been assigned to '%s'.",Name)
    else UNCHANGED
    endif
  SIZING_PROPOSED
    u:DrConsRef
  SIZING_BASELINE : S901G ECBC
    SWITCH (Status)
      CASE "New":
        if( Spc:NotEnclosed = 1 )
        then zp:DrConsRef
        else
          if( zb:Dr:Open = "NonSwinging" )
          then
            SWITCH (zb:Dr:UFactor)
              CASE 1.50:
                RuleLibrary(DrCons,"DoorExtOpaqueNonswingU1.50")
              CASE 1.45:
                RuleLibrary(DrCons,"DoorExtOpaqueNonswingU1.45")
              CASE 0.50:
                RuleLibrary(DrCons,"DoorExtOpaqueNonswingU0.50")
              DEFAULT:
                RuleLibrary(DrCons,"DoorExtOpaqueNonswingU0.50")
            ENDSWITCH
          else  //( zb:Dr:Open = "Swinging" )
            SWITCH (zb:Dr:UFactor)
              CASE 0.70:
                RuleLibrary(DrCons,"DoorExtOpaqueSwingU0.70")
              CASE 0.50:
                RuleLibrary(DrCons,"DoorExtOpaqueSwingU0.50")
              DEFAULT:
                RuleLibrary(DrCons,"DoorExtOpaqueSwingU0.50")
            ENDSWITCH
          endif
	endif
      DEFAULT:
        RuleLibrary(DrCons,"DoorExtOpaqueSwingU0.50")
    ENDSWITCH
  SIZING_BASELINE
    SWITCH (Status)
      CASE "New":
        SWITCH (zb:Dr:UFactor)
          CASE 0.50:
            RuleLibrary(DrCons,"ExtOpaqueDoorU050")
          CASE 1.45:
            RuleLibrary(DrCons,"ExtOpaqueDoorU145")
          CASE 0.70:
            RuleLibrary(DrCons,"ExtOpaqueDoorU070")
          DEFAULT:
            RuleLibrary(DrCons,"ExtOpaqueDoorU070")
        ENDSWITCH
      CASE "Altered":
        SWITCH (zb:Dr:UFactor)
          CASE 0.50:
            RuleLibrary(DrCons,"ExtOpaqueDoorU050")
          CASE 1.45:
            RuleLibrary(DrCons,"ExtOpaqueDoorU145")
          CASE 0.70:
            RuleLibrary(DrCons,"ExtOpaqueDoorU070")
          DEFAULT:
            RuleLibrary(DrCons,"ExtOpaqueDoorU070")
        ENDSWITCH
      CASE "Existing":
        u:DrConsRef
      DEFAULT:
        RuleLibrary(DrCons,"ExtOpaqueDoorU070")
    ENDSWITCH
  ANNUAL_PROPOSED
    zp:DrConsRef
  ANNUAL_BASELINE
    zb:DrConsRef
ENDRULE


RULE NEW Dr:TreeDescrip
  DATATYPE
    String
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( DrConsRef ) .AND. IfValidAnd( Area > 0 ) )
    then  Format( "%s, %s ft2", DrConsRef:Name, FltToStr( Area ) )
      else if( LocalCompAssigned( DrConsRef ) )
      then  Format( "%s", DrConsRef:Name )
        else if( IfValidAnd( Area > 0 ) )
          then  Format( "%s ft2", FltToStr( Area ) )
        else  " "
    endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// ------- Calculate area by Status - Dr (Door)
RULE NEW Dr:AreaNew
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "New" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -----------------------------------------------------------------------------
RULE NEW Dr:AreaAltered
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Altered" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -----------------------------------------------------------------------------
RULE NEW Dr:AreaExisting
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Existing" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

//
//  Do do after 2016 Beta Release - Add status to DrCons
//

