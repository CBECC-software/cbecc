// ThermalZone - General Information
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  

//  This rule file addresses the following building descriptors:
//  Section 5.3.1 Thermal Zones - General Information 
//      Thermal Zone Name
//      Thermal Zone Description 
//      Thermal Zone Type
//      System Name
//      Floor Area

       

// ---------- Section 5.3.1 - Thermal Zones - General Information --------------


// ********** Thermal Zone Name ************************************************
RULE ThrmlZn:Name
  DESCRIPTION
    "A unique identifier for the ThermalZone"  
  HELP
    "A unique identifier for the ThermalZone made up of 50 or fewer 
     alphanumeric characters."  
  REFERENCE 
    NACM Section 5.3.1    
  INPUTCLASS
    Required
  // Transformation definitions initialized to be the same as user input.
ENDRULE


// ********** Thermal Zone Description *****************************************
RULE ThrmlZn:Desc
  DESCRIPTION
    "A unique identifier for the ThermalZone"  
  HELP
    "A brief description of the ThermalZone that identifies the spaces 
     that make up the ThermalZone or other descriptive information. 
     The description should tie the ThermalZone to the building plans."  
  REFERENCE 
    NACM Section 5.3.1    
  INPUTCLASS
    Optional
  // Transformation definitions initialized to be the same as user input.
ENDRULE


// ********** Thermal Zone Type ************************************************
// First sum up space Area and areas by CondgType for CHECKCODE rules
RULE NEW ThrmlZn:Area
  DATATYPE
    Float
  LONGFORM
    Area
  DESCRIPTION
    "The total area of the ThermalZone based on Spc:Area" 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:Area ) 
ENDRULE
RULE NEW ThrmlZn:DirectCondArea
  DATATYPE
    Float
  LONGFORM
    DirectConditionedArea
  DESCRIPTION
    "The area of the ThermalZone that is Spc:CondgType = 'DirectlyConditioned'" 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:DirectCondArea ) 
ENDRULE
RULE NEW ThrmlZn:IndirectCondArea
  DATATYPE
    Float
  LONGFORM
    IndirectConditionedArea
  DESCRIPTION
    "The area of the ThermalZone that is Spc:CondgType = 'IndirectlyConditioned'" 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:IndirectCondArea ) 
ENDRULE
RULE NEW ThrmlZn:UncondArea
  DATATYPE
    Float
  LONGFORM
    UnconditionedArea
  DESCRIPTION
    "The area of the ThermalZone that is Spc:CondgType = 'Unconditioned'" 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:UncondArea ) 
ENDRULE
RULE NEW ThrmlZn:PlenumArea
  DATATYPE
    Float
  LONGFORM
    PlenumArea
  DESCRIPTION
    "The area of the ThermalZone that is Spc:CondgType = 'Plenum'" 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:PlenumArea ) 
ENDRULE
RULE NEW ThrmlZn:UnoccupiedArea
  DATATYPE
    Float
  LONGFORM
    UnoccupiedArea
  DESCRIPTION
    "The area of the ThermalZone that is 'Unoccupied'" 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:UnoccupiedArea ) 
ENDRULE
// Then define rule
RULE ThrmlZn:Type
  DESCRIPTION
    "The conditioning type designation for the ThermalZone"  
  HELP
    "Designation of the ThermalZone as directly conditioned space, 
     indirectly conditioned space (i.e., conditioned only by passive heating 
     or cooling from an adjacent ThermalZone), or plenum (i.e., unoccupied 
     but partially conditioned as a consequence of its role as a path for 
     returning air)."  
  REFERENCE 
    NACM Section 5.3.1    
  INPUTCLASS
    Default
  OPTION         
    Conditioned
    Unconditioned
    Plenum
  DEFAULT 
    if( UncondArea > 0 )
    then "Unconditioned"
    else if( PlenumArea > 0 )
    then "Plenum"
    else "Conditioned"
    endif endif
 CHECKCODE
   // Checks for various invalid configurations
   if( Type = "Conditioned" .AND. DirectCondArea > 0 )
   then // Zone is Conditioned and includes DirectlyConditioned space
     if( UncondArea > 0 )
     then // Conditioned ThrmlZn includes Unconditioned space area
       PostError("ThermalZone '%s' combines 'Unconditioned' and
                  'DirectlyConditioned' space area; this is not permitted.",
                 Name )
     else if( PlenumArea > 0 )
     then // Conditioned ThrmlZn includes Plenum space area
       PostError("ThermalZone '%s' combines 'Plenum' and
                  'DirectlyConditioned' space area; this is not permitted.",
                 Name)
     else UNCHANGED
     endif endif
   else if( Type = "Unconditioned" )
     then
     if( HasHtg .OR. HasClg )
     then // Unconditioned ThrmlZn is served by a pri. or vent. system with htg or clg
       PostError("ThermalZone '%s' is 'Unconditioned' but is served by a Primary
                  or Ventilation system with heating and/or cooling; this is not
                  currently permitted.",
                 Name)    
     else 
     if( DirectCondArea > 0 )
     then // Unconditioned ThrmlZn includes Conditioned space area
       PostError("ThermalZone '%s' combines 'Unconditioned' and
                  'DirectlyConditioned' space area; this is not permitted.",
                 Name)
     else if( PlenumArea > 0 )
     then // Conditioned ThrmlZn includes Plenum space area
       PostError("ThermalZone '%s' combines 'Plenum' and
                  'Unconditioned' space area; this is not permitted.",
                 Name)
     else if( UncondArea > 0 .AND. IndirectCondArea > 0 )
     then // Zone is Unconditioned and space area is either not 
          // 100% Unconditioned or 100% IndirectlyConditioned    
       PostError("ThermalZone '%s' is Type = 'Unconditioned' and contains 
                  a mix of 'Unconditioned' and 'IndirectlyConditioned' space;
                  this is not permitted.", Name)
     else UNCHANGED
     endif endif endif endif
   else if( Type = "Plenum" .AND. PlenumArea != Area )
   then // Zone is Plenum and 100% of space area is not Plenum
     PostError("ThermalZone '%s' is Type = 'Plenum', but does not contain
                100% 'Plenum' space area; this is not permitted.", 
               Name)
   else if( Type = "Conditioned" .AND. DirectCondArea = 0 )
   then // Zone is Conditioned but has no DirectlyConditioned space
     PostError("ThermalZone '%s' is 'Conditioned', but does not contain any
                'DirectlyConditioned' space area; this is not permitted.", 
               Name)
   else UNCHANGED
   endif endif endif endif
  SIZING
    u:Type
  ANNUAL
    z:Type
ENDRULE
RULE NEW ThrmlZn:IsCond
  DATATYPE
    Integer
  DESCRIPTION
    "Flag that indicates if the zone type is Conditioned." 
  LONGFORM
    IsConditioned 
  HELP
    "Used to to calculate and report Proj:NumThrmlZnCond."    
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Type = "Conditioned" )
    then 1
    else 0
    endif
  SIZING
    u:IsCond
  ANNUAL
    z:IsCond
ENDRULE
RULE ThrmlZn:CondgStatus
  DESCRIPTION
    "Flag that indicates the conditioning status of the zone for reporting."
  HELP
    "The flag values are:

     0 : ThrmlZn:Type = 'Plenum', or ThrmlZn:Type = 'Unconditioned' and comprised of
         100% Spc:CondgType = 'Unconditioned' space

     1 : ThrmlZn:Type = 'Conditioned'.  In this case, the zone may be comprised of a mix of
         Spc:CondgType = 'DirectlyConditioned' or 'IndirectlyConditioned' space, or
         100% Spc:CondgType = 'DirectlyConditioned' space

     2 : ThrmlZn:Type = 'Unconditioned' but comprised of
         100% Spc:CondgType = 'IndirectlyConditioned' space" 
  INPUTCLASS
    NotInput
  DEFAULT 
    if( IsCond )
    then 1
    else if( Type = "Unconditioned" .AND. IndirectCondArea = FlrArea )
    then 2
    else 0
    endif endif
  ANNUAL
    if( IsCond )
    then 1
    else if( Type = "Unconditioned" .AND. IndirectCondArea = FlrArea )
    then 2
    else 0
    endif endif
ENDRULE



// ********** HVAC System Name References **************************************
// First, define the proposed terminal unit that serves the ThrmlZn (if applicable)
// Status of ThermalZone assignment to TerminalUnits
RULE ThrmlZn:TrmlUnitRefStatus
  DESCRIPTION
    "Enumeration that indicates status of the ThermalZone with respect its 
     assignment to the TrmlUnit:ZnServedRef property."
  HELP
    "Used to control list of available ThermalZones that can be assigned to 
     TrmlUnit:ZnServedRef property.

     Conditioned = The zone is not referenced via TrmlUnit:ZnServedRef, but it 
     is a valid, possible reference. The enumeration is titled 'Conditioned' to 
     facilitate the correct UI object creation phrase in combo box.  

     InValidAssigned = The TrmlUnitRefStatus is Invalid for one or more reasons, such as:

     - The zone is referenced via TrmlUnit:ZnServedRef by more than one TerminalUnit.

     - The zone is served by an AirSys, but is not referenced via TrmlUnit:ZnServedRef

     - The zone cannot be referenced by TrmlUnit:ZnServedRef.  This is the case 
       if ThrmlZn:Type = Unconditioned or PlenumZone."
  INPUTCLASS
    NotInput
  OPTION
    Conditioned
    ConditionedAssigned
    Unconditioned
    UnconditionedAssigned
    InvalidAssigned
  DEFAULT
    if( IsCond )
    then
      if( IfValidAnd( NumTrmlUnitRefs > 0 ) )
      then "ConditionedAssigned"
      else "Conditioned"
      endif
    else 
    if( Type = "Unconditioned" )
    then 
      if( IfValidAnd( NumTrmlUnitRefs > 0 ) )
      then "UnconditionedAssigned"
      else "Unconditioned"
      endif
    else if( IfValidAnd( NumTrmlUnitRefs > 0 ) )
    then "InvalidAssigned"
    else UNDEFINED
    endif endif endif
  CHECKSIM
    if( ( TrmlUnitRefStatus = "ConditionedAssigned" .OR. 
          TrmlUnitRefStatus = "UnconditionedAssigned" )
        .AND.
        NumTrmlUnitRefs > 1 ) 
    then
      PostError( "ThermalZone '%s' is referenced by %g TerminalUnits. The 
                 TerminalUnit with the largest primary airflow is '%s'. Revise
                 the model so each ThermalZone is served only one TerminalUnit.", 
                 Name, NumTrmlUnitRefs, TrmlUnitRef )
    else 
    if( ( LocalCompAssigned(PriAirCondgSysRef) = ComponentType("AirSys") .OR.
          LocalCompAssigned(VentSysRef) = ComponentType("AirSys") ) .AND.
        ( TrmlUnitRefStatus = "Conditioned" .OR. TrmlUnitRefStatus = "Unconditioned" ) )
    then
      if( VentSysRef:IsExhSys )
      then UNCHANGED // Exhaust systems don't need TrmlUnits
      else
      PostError( "ThermalZone '%s' is served by an AirSys, but is not referenced
                 by a TerminalUnit. Revise model to include a TerminalUnit that
                 references this ThermalZone.", 
                 Name )
      endif
    else if( TrmlUnitRefStatus = "InvalidAssigned" .AND.
        ( IsCond .OR. Type = "Unconditioned" ) .AND.
        LocalCompAssigned(PriAirCondgSysRef) != ComponentType("AirSys") .AND.
        LocalCompAssigned(VentSysRef) != ComponentType("AirSys") ) 
    then
      PostError( "ThermalZone '%s' is referenced by %g TerminalUnit(s), but the 
                 PrimaryAirConditioningSystem or VentilationSystem of the zone
                 is not an AirSystem. Revise model AirSystem and/or TerminalUnit
                 references to be consistent.", 
                 Name, NumTrmlUnitRefs )

    else if( TrmlUnitRefStatus = "InvalidAssigned" ) 
    then
      PostError( "ThermalZone '%s' is referenced by %g TerminalUnit(s), but is
                 Type = 'Plenum'. This is currently not supported.",
                 Name, NumTrmlUnitRefs )   
    else UNCHANGED
    endif endif endif endif
  SIZING
    UNDEFINED
ENDRULE
RULE ThrmlZn:TrmlUnitRef
  DESCRIPTION
    "The name of the TerminalUnit that serves the zone."
  INPUTCLASS
    NotInput
  DEFAULT
    MaxRevRefComp( TrmlUnit:ZnServedRef, TrmlUnit:Cnt )
//SIZING
// Sizing rules in BaselineHVACSystems.rule
  ANNUAL
    z:TrmlUnitRef
ENDRULE
RULE NEW ThrmlZn:PropZnSysCnt
  DATATYPE
    Integer
  LONGFORM
    ProposedZoneSystemCount
  DESCRIPTION
    "The number of proposed TerminalUnits or ZoneSystems that serve the zone."
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
// TO DO: Revisit rule to confirm this works in all cases
    if( CreateHVAC = 1 )
    then
      // This is partial compliance NewEnvelope, and HVAC systems are created,
      // one per TrmlUnit or ZnSys per ThermalZone
      1
    else if( LocalCompAssigned( TrmlUnitRef ) )
    then 
      // Number of proposed zone systems is the HVACZonesWithMultiplier
      // divided by the number of TerminalUnits serving the zone, including
      // system multipliers
      HVACZnCntWithMult
      ; Max( HVACZnCntWithMult / TrmlUnitRef:Cnt * TrmlUnitRef:SysCnt, 1 )
    else if( LocalCompAssigned( PriAirCondgSysRef ) = ComponentType( "ZnSys" ) )
      then
      // Number of proposed zone systems is the HVACZonesWithMultiplier
      // divided by the number of ZoneSystems serving the zone, including
      // system multipliers
      HVACZnCntWithMult
      ;Max( HVACZnCntWithMult / PriAirCondgSysRef:Cnt, 1 )
    else 0
    endif endif endif
  SIZING_BASELINE
    zp:PropZnSysCnt
  ANNUAL
    z:PropZnSysCnt
ENDRULE


// Primary Air Conditioning (Heating/Cooling) System
RULE ThrmlZn:PriAirCondgSysRef
  DESCRIPTION
    "The name of the air or zone system that is the principal source of heating
     and/or cooling for the ThermalZone."
  HELP
    "AirSystems or ZoneSystems are both valid object assignments for this 
     reference property. However, only one unique AirSystem can be assigned to 
     PrimAirCondgSystemRef and VentSysRef properties."
  INPUTCLASS 
    CondRequired
  DEFAULT
    if( LocalCompAssigned( TrmlUnitRef ) )
    then 
    // If applicable, default to the Parent AirSys of the TrmlUnit with the 
    // largest PriAirFlowMax that refernces the zone
      if( LocalCompAssigned( TrmlUnitRef:ParentAirSysRef ) )
      then TrmlUnitRef:ParentAirSysRef:Name
      else UNDEFINED
      endif
    else UNDEFINED
    endif
  CHECKSIM
    if( IsCond .AND. 
        LocalCompAssigned( PriAirCondgSysRef ) = 0 .AND.
        Proj:CreateHVAC = 0 )
    then
      PostError("ThermalZone '%s' is Conditioned, but does not have an HVAC system
                 assigned to PrimaryAirConditioningSystemReference. Assign a system
                 or revise to Unconditioned/Plenum", Name )
;    else 
;    if( Type = "Unconditioned" .AND. 
;        LocalCompAssigned( PriAirCondgSysRef ) > 0 )
;    then
;      PostError("ThermalZone '%s' is Unconditioned, but has an HVAC system
;                 assigned to PrimaryAirConditioningSystemReference. This is
;                 not supported.", Name )
    else UNCHANGED
    endif ; endif
  SIZING_PROPOSED
    if( Type = "Unconditioned" .OR. Type = "Plenum" .OR. Proj:IsNoMech .OR. 
        ( Proj:IsNoAddMech .AND. IfValidAnd( IsExistingHVAC <= 0 ) ) )
    then // Partial envelope for whole building or partial envelope for addition
         // and the system is not existing
      UNDEFINED
    else u:PriAirCondgSysRef
    endif
//SIZING_BASELINE
// Sizing rules in BaselineHVACSystems.rule
  ANNUAL
    z:PriAirCondgSysRef    
ENDRULE
// Ventilation System
RULE ThrmlZn:VentSysRef
  DESCRIPTION
    "The name of the air or zone system that provides ventilation air to the 
     ThermalZone.  This is by default the same system as the primary air 
     conditioning system."
  HELP
    "AirSystems or ZoneSystems are both valid object assignments for this 
     reference property. By default, the ventialtion system for the zone is defined
     to be the primary heating/cooling system.  If the ventilation system is
     different system is different than the heating/cooling system, such as in the
     case of using a dedicated outdoor air system (DOAS), the VentSysRef must be 
     the assigned AirSystem, and the PrimAirCondgRef must be a ZoneSystem."    
  INPUTCLASS 
    CondRequired
// See Spc-Ventilation.rule for rule ordering purposes
  CHECKCODE
    if( IsCond .AND.
        VentSrc = "Forced" .AND. 
        LocalCompAssigned( VentSysRef ) = 0 .AND.
        Proj:CreateHVAC = 0 )
    then
      PostError("A the VentilationSystem for Conditioned ThermalZone '%s' is not 
                 defined.", Name)
    else UNCHANGED
    endif
  CHECKSIM
    if( LocalCompAssigned( PriAirCondgSysRef ) = ComponentType( "AirSys" ) .AND.
        LocalCompAssigned( VentSysRef ) = ComponentType( "AirSys" ) .AND.
        IfValidAnd( VentSysRef:IsExhSys = 0 ) )
    then 
      if( VentSysRef:Name != PriAirCondgSysRef:Name )
      then
         PostError("The VentilationSystem and PrimaryAirConditioningSystem of
                    ThermalZone '%s' are separate AirSystems. Only one AirSystem
                    can be referenced by a ThermalZone.", Name)
      else UNCHANGED
      endif
    else
    if( LocalCompAssigned( PriAirCondgSysRef ) = ComponentType( "ZnSys" ) .AND.
        LocalCompAssigned( VentSysRef ) = ComponentType( "ZnSys" ) .AND. 
        IfValidAnd( VentSysRef:IsExhSys = 0 ) )
    then
      if( VentSysRef:Name != PriAirCondgSysRef:Name )
      then
         PostError("The VentilationSystem and PrimaryAirConditioningSystem of
                    ThermalZone '%s' are separate ZoneSystems. Currently,
                    only one ZoneSystem can be referenced by a ThermalZone.", Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif endif
  SIZING_PROPOSED
    if( Type = "Plenum" .OR. Proj:IsNoMech .OR. 
        ( Proj:IsNoAddMech .AND. IfValidAnd( IsExistingHVAC <= 0 ) ) )
    then // Partial envelope for whole building or partial envelope for addition
         // and the system is not existing
      UNDEFINED
    else if( VentSrc = "Forced" )
    then u:VentSysRef
    else UNDEFINED
    endif endif
; SIZING_BASELINE
// Sizing rules in BaselineHVACSystems.rule
  ANNUAL 
    z:VentSysRef
ENDRULE
// Secondary Air Conditioning System (zonal system only)
RULE ThrmlZn:SecAirCondgSysRef
  DESCRIPTION
    "The name of the air or zone system that is the secondary source of heating
     and/or cooling for the ThermalZone."
  HELP
    "ZoneSystems are the only valid object assignments for this reference property."
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    u:SecAirCondgSysRef
; SIZING
// Not used in baseline
  ANNUAL
    z:SecAirCondgSysRef
ENDRULE



// ********** Plenum Zone References *******************************************
// Moved to HVACSecondary-AirSegment.rule for ordering purposes


// ------------ HVAC zone count and thermal zone multiplier --------------------
RULE NEW ThrmlZn:NumSpcs
  DATATYPE
    Integer
  LONGFORM
    NumberSpaces
  DESCRIPTION
    "The number of spaces that comprise the ThermalZone."  
  HELP
   "ThermalZones shall contain no more than ten different space functions, 
    which shall only be combined if the spaces have similar space conditioning 
    requirements."
  REFERENCE 
    NACM Section 2.3.3
  INPUTCLASS
    NotInput
  DEFAULT
    CountRefs( Spc:ThrmlZnRef ) 
  CHECKSIM
    if( NumSpcs < 1 )
    then
      PostError("ThermalZone '%s' has no Spaces that reference it.", Name)
    else UNCHANGED
    endif
ENDRULE
RULE ThrmlZn:HVACZnCnt
  DESCRIPTION
    "The number of building HVACZones represented by the modeled ThermalZone."  
  HELP
    "An HVAC zone is a physical space within the building that has its own thermostat
     and system for maintaining thermal comfort. HVAC zones are identified
     on the HVAC plans. HVAC zones should not be split between ThermalZones, 
     but a ThermalZone may include more than one HVAC zone. 

     This property should be > 1 only if individual HVAC zones have been combined 
     into a single ThermalZone for modeling purposes. An example is a block of
     multifamily dwelling units with similar orientation and the same HVAC 
     systems serving each unit combined into a single ThermalZone. In this
     case, the HVACZoneCount and the AirSystem's TerminalUnit:Count or 
     ZoneSystem:Count property should be consistent with eachother, and the
     capacities entered for systems should be for one unit. 

     The following SDD modeling rules for HVACZoneCount and combining into a 
     single ThermalZone must be followed:
 
     a) HVACZones are adjacent to eachother and have similar exterior orientation.

     b) Similar to combining Spaces into a ThermalZone, the combined HVACZones 
       do not span multiple Stories."
  REFERENCE 
    NACM Section 2.2.1
  INPUTCLASS
    Default
  REPORTPRECISION
    0
  MINIMUM
    0
  COMMONMAXIMUM
    10
  DEFAULT 
    if( IsCond )
    then 1
    else 0
    endif
  CHECKSIM
    if( Type = "Conditioned" .AND. HVACZnCnt < 1 )
    then 
      PostError("ThermalZone '%s' has an HVACZoneCount of < 1 even though it is
                 a conditioned zone.", Name)
    else UNCHANGED
    endif
  SIZING
    u:HVACZnCnt
ENDRULE
RULE ThrmlZn:Mult
  DESCRIPTION
    "A multiplier on ThermalZone inputs."  
  HELP
    "This property is used to simuluate multiples of a single ThermalZone. The
     following modeling rules for Multipliers must be followed: 

     a) All spaces that are combined into a ThermalZone must have the same Multiplier

     b) Spaces that are combined into a ThermalZone cannot span multiple Stories"  
  REFERENCE 
    NACM Section 2.3.1
    NACM Section 5.3
  INPUTCLASS
    NotInput
  REPORTPRECISION
    0
  DEFAULT
    if( IfValidAnd( MaxRevRef( Spc:ThrmlZnRef, Spc:Mult ) > 0 ) ) 
    then MaxRevRef( Spc:ThrmlZnRef, Spc:Mult )
    else 1
    endif
  CHECKSIM
    if( NumSpcs > 1 .AND.
        Mult != ValidOr( MinRevRef( Spc:ThrmlZnRef, Spc:Mult ), 1 ) )
    then
      PostError("The spaces combined into ThermalZone '%s' must have the same
                 multiplier.", Name)
    else UNCHANGED
    endif
  SIZING
    MaxRevRef( Spc:ThrmlZnRef, Spc:Mult )
  ANNUAL
    z:Mult
ENDRULE

RULE NEW ThrmlZn:HVACZnCntWithMult
  DATATYPE
    Integer
  LONGFORM
    HVACZoneCountWithMult
  DESCRIPTION
    "The number of HVAC zones represented in the model."
  INPUTCLASS
    NotInput
  DEFAULT
    HVACZnCnt * Mult
  SIZING
    u:HVACZnCntWithMult
  ANNUAL
    z:HVACZnCntWithMult   
ENDRULE

RULE NEW ThrmlZn:CondHVACZnCntWithMult
  DATATYPE
    Integer
  LONGFORM
    ConditionedHVACZoneCountWithMult
  DESCRIPTION
    "The number of conditioned HVAC zones with multiplier."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IsCond )
    then HVACZnCnt * Mult
    else UNDEFINED
    endif
  SIZING
    u:CondHVACZnCntWithMult
  ANNUAL
    z:CondHVACZnCntWithMult   
ENDRULE

// **********  Floor Area ******************************************************
RULE ThrmlZn:FlrArea
  DESCRIPTION
    "The gross floor area of a ThermalZone."  
  HELP
    "The gross floor area of a ThermalZone (before multiplier is applied); 
     including walls and minor spaces for mechanical or electrical services 
     such as chases that are not assigned to other ThermalZones.  
     Larger mechanical spaces and electrical rooms should not be combined."  
  REFERENCE 
    NACM Section 5.3.1
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  REPORTPRECISION
    0
  DEFAULT
    if( Type = "Plenum" ) 
    then 0
    else SumRevRef( Spc:ThrmlZnRef, Spc:FlrArea )
    endif
  SIZING
    u:FlrArea
  ANNUAL
    z:FlrArea
ENDRULE

RULE NEW ThrmlZn:FlrAreaWithMult
  DATATYPE
    Float
  LONGFORM
    FloorAreaWithMultiplier
  DESCRIPTION
    "The gross floor area of a ThermalZone, with zone multiplier."  
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  DEFAULT
    FlrArea * Mult
  SIZING
    u:FlrAreaWithMult
  ANNUAL
    z:FlrAreaWithMult
ENDRULE

// Conditioned floor area
RULE NEW ThrmlZn:CondFlrArea
  DATATYPE
    Float
  LONGFORM
    ConditionedFloorArea
  DESCRIPTION
    "The gross conditioned floor area of a ThermalZone."  
  REFERENCE 
    NACM Section 5.3.1
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  DEFAULT
    if( IsCond )
    then FlrArea
    else 0
    endif  
  SIZING
    u:CondFlrArea
  ANNUAL
    z:CondFlrArea
ENDRULE

RULE NEW ThrmlZn:CondFlrAreaWithMult
  DATATYPE
    Float
  LONGFORM
    ConditionedFloorAreaWithMultiplier
  DESCRIPTION
    "The gross conditioned floor area of a ThermalZone, with zone multiplier."  
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  DEFAULT
    CondFlrArea * Mult
  SIZING
    u:CondFlrAreaWithMult
  ANNUAL
    z:CondFlrAreaWithMult
ENDRULE

// Volume
RULE NEW ThrmlZn:Vol
  DATATYPE
    Float
  LONGFORM
    Volume
  DESCRIPTION
    "The gross volume of a ThermalZone."  
  INPUTCLASS
    NotInput
  UNITS 
    ft3
  DEFAULT
    SumRevRef( Spc:ThrmlZnRef, Spc:Vol )
  SIZING
    SumRevRef( Spc:ThrmlZnRef, Spc:Vol )
  ANNUAL
    z:Vol
ENDRULE

RULE NEW ThrmlZn:VolWithMult
  DATATYPE
    Float
  LONGFORM
    VolumeWithMuliplier
  DESCRIPTION
    "The gross volume of a ThermalZone, with zone multiplier."   
  INPUTCLASS
    NotInput
  UNITS 
    ft3
  DEFAULT
    Vol * Mult
  SIZING
    Vol * Mult
  ANNUAL
    z:VolWithMult
ENDRULE

// Volume - to be passed into simulation engine
RULE ThrmlZn:VolSim
  DESCRIPTION
    "The gross volume of a ThermalZone (to be passed into simulation)."  
  INPUTCLASS
    NotInput
  UNITS 
    ft3
  REPORTPRECISION
    0
  DEFAULT
    if (Proj:IsDetailedGeometry)
    then UNDEFINED
    else Vol
    endif
  SIZING
    if (Proj:IsDetailedGeometry)
    then UNDEFINED
    else z:Vol
    endif
  ANNUAL
    z:VolSim
ENDRULE


// Establish occupancy class of thermal zones based on Spc:OccClass
// Conditioned floor area
// ------------ Calculate ThrmlZn floor area -----------------------------------
// Residential
RULE NEW ThrmlZn:ResCondFlrArea
  DATATYPE
    Float
  LONGFORM
    ResidentialFloorArea
  DESCRIPTION
    "The total ThrmlZn residential (conditioned) floor area." 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2  
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:ResCondFlrArea )
  SIZING
    u:ResCondFlrArea
  ANNUAL
    z:ResCondFlrArea
ENDRULE

// Nonresidential
RULE NEW ThrmlZn:NonResCondFlrArea
  DATATYPE
    Float
  LONGFORM
    NonresidentialFloorArea
  DESCRIPTION
    "The total ThermalZone nonresidential (conditioned) floor area." 
  INPUTCLASS
    NotInput
  MINIMUM 
    0
  UNITS 
    ft2    
  DEFAULT 
    SumRevRef( Spc:ThrmlZnRef, Spc:NonResCondFlrArea )
  SIZING
    u:NonResCondFlrArea
  ANNUAL
    z:NonResCondFlrArea
ENDRULE

RULE ThrmlZn:OccClass
  DESCRIPTION
    "The occupancy classification of the ThermalZone" 
  INPUTCLASS
    NotInput
  OPTION
    Nonresidential
    Residential
  DEFAULT
    if( ResCondFlrArea > 0 )
    then "Residential"
    else "Nonresidential"
    endif  
  CHECKCODE
    if( NonResCondFlrArea > 0 .AND.
        ResCondFlrArea > 0 )
    then PostError( "ThermalZone '%s' includes spaces of residential and nonresidential 
                    occupancy classifications; this is not permitted.", Name )
    else UNCHANGED
    endif 
  SIZING
    u:OccClass
  ANNUAL
    z:OccClass
ENDRULE

RULE NEW ThrmlZn:IsRes
  DATATYPE
    integer
  LONGFORM
    IsResidential
  DESCRIPTION
    "An integer that indicates if the space is residential." 
  INPUTCLASS
    NotInput
  DEFAULT
    if( OccClass = "Residential" )
    then 1
    else 0
    endif
ENDRULE

// ********** Zone 'Enclosed' Status ******************************************
RULE NEW ThrmlZn:NotEnclosedZn
  RULESETS
    S901G ECBC
  DATATYPE
    Integer
  LONGFORM
    NotEnclosedZone
  DESCRIPTION
    "A flag that indicates whether the zone is 'NotEnclosed' for determining
     baseline envelope and system requirements." 
  INPUTCLASS
    NotInput
  DEFAULT
    MaxRevRef( Spc:ThrmlZnRef, Spc:NotEnclosed )
  CHECKCODE
    if( MinRevRef( Spc:ThrmlZnRef, Spc:NotEnclosed ) != NotEnclosedZn )
    then 
      PostError("ThermalZone '%s' is comprised of enclosed/unenclosed space
                 functions. This is not allowed.", Name)
    else UNCHANGED
    endif
  SIZING
    u:NotEnclosedZn
ENDRULE

RULE NEW TrmlUnit:NotEnclosedZn
  RULESETS
    S901G ECBC
  DATATYPE
    Integer
  LONGFORM
    NotEnclosedZone
  DESCRIPTION
    "A flag that indicates whether the zone served by the Terminal is 'NotEnclosed'" 
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( ZnServedRef ) )
    then ZnServedRef:NotEnclosedZn
    else 0
    endif
  SIZING
    if( LocalCompAssigned( ZnServedRef ) )
    then ZnServedRef:NotEnclosedZn
    else 0
    endif
ENDRULE


// ---------- Identify which ThermalZones are control/slave zones -------------
// A flag that indicates if the TrmlUnit is Type = Uncontrolled
RULE NEW TrmlUnit:IsUncontrolled
  DATATYPE
    Integer
  LONGFORM
    IsUncontrolled
  INPUTCLASS
    NotInput
  SIZING
    if( Type = "Uncontrolled" )
    then 1
    else 0
    endif   
ENDRULE

// Identify if the ThrmlZn is the CtrlZn for the PriAirCondgSys that serves it.
RULE NEW ThrmlZn:IsCtrlZn
  DATATYPE
    Integer
  LONGFORM
    IsControlZone
  DESCRIPTION
    "Boolean that specifies if a ThermalZone is a control zone"  
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IsCond .AND. 
        ( Proj:IsNoMech .OR. ( Proj:IsNoAddMech .AND. IfValidAnd( IsExistingHVAC <= 0 ) ) ) )
    then // Partial envelope for whole building or partial envelope for addition
         // and the system is not existing, all conditioned zones are assumed control zones
      1 
    else
    if( IsCond .AND. 
       ( LocalCompAssigned( PriAirCondgSysRef ) .OR. 
         LocalCompAssigned( VentSysRef ) .OR. 
         LocalCompAssigned( SecAirCondgSysRef ) ) )
    then // The zone is conditioned and is served by a proposed HVAC system
      if( IsRes )
      then // All baseline residential ThermalZones are assumed to be a CtrlZn,
           // even if proposed design has slave zones
        1
      else if( SumRevRef( TrmlUnit:ZnServedRef, TrmlUnit:IsUncontrolled ) = 0 )
      then // If true, the terminal unit is not Type = Uncontrolled, rather it is a 
           // VAV or other terminal unit controlled by a zone thermostat
        1
      else if( LocalCompAssigned( PriAirCondgSysRef ) )
      then
        if( PriAirCondgSysRef:CtrlZnRef = Name .OR. 
            LocalCompAssigned( PriAirCondgSysRef ) = ComponentType ( "ZnSys" ) )
        then // The current zone is control zone for the PrimAirCondgSys, 
             // or, the PrimAirCondgSys is a ZnSys
           1
        else // Zone is a slave zone of a nonresidential system
          -1
        endif
      else 0
      endif endif endif
    else 0
    endif endif
  SIZING_BASELINE
    zp:IsCtrlZn 
  ANNUAL
    z:IsCtrlZn      
ENDRULE
// Transfer the value to Space
RULE NEW Spc:IsCtrlZn
  DATATYPE
    Integer
  LONGFORM
    IsControlZone
  DESCRIPTION
    "Boolean that specifies if the space's ThermalZone is a control zone"  
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( LocalCompAssigned( ThrmlZnRef ) )
    then ThrmlZnRef:IsCtrlZn
    else 0
    endif
  SIZING_BASELINE
    zp:IsCtrlZn 
  ANNUAL
    z:IsCtrlZn      
ENDRULE

// Specify the name of the ThrmlZn that is the CtrlZn for all zones served by a 
// proposed system.  This ensures that slave zones of single-zone systems are 
// maintained in the proposed and baseline designs.
RULE NEW ThrmlZn:SlaveCtrlZnRef
  DATATYPE
    ThrmlZn
  LONGFORM
    SlaveControlZoneReference
  DESCRIPTION
    "For single-zone systems with slave zones, this property indicates the name 
     of the ThermalZone that is the control zone for the proposed single-zone 
     system."
  HELP
    "If the proposed design is single-zone, and the baseline design is as well,
     slave zone status is preserved in the baseline design."
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IsCtrlZn = -1 )
    then PriAirCondgSysRef:CtrlZnRef
    else UNDEFINED
    endif
  SIZING_BASELINE
    zp:SlaveCtrlZnRef
  ANNUAL
    z:SlaveCtrlZnRef 
ENDRULE


// Specify zone/spaces that are served by systems with cooling capacity
RULE NEW ThrmlZn:HasClg
  DATATYPE
    Integer
  LONGFORM
    HasCooling
  DESCRIPTION
    "A flag that indicates if a ThermalZone is served by a system with cooling
     capacity."
  INPUTCLASS 
    NotInput
  DEFAULT  
    if( IfValidAnd( PriAirCondgSysRef:ClgCap > 0 ) .OR. 
        IfValidAnd( VentSysRef:ClgCap > 0 ) ) 
    then 1
    else 0
    endif          
  SIZING_PROPOSED  
    u:HasClg
ENDRULE

RULE NEW Spc:HasClg
  DATATYPE
    Integer
  LONGFORM
    HasCooling
  DESCRIPTION
    "A flag that indicates if a space is served by a system with cooling
     capacity."
  INPUTCLASS 
    NotInput 
  DEFAULT  
    if( ThrmlZnRef:HasClg > 0 )
    then 1
    else 0
    endif          
  SIZING_PROPOSED
    u:HasClg
ENDRULE

// Specify zone/spaces that are served by systems with heating capacity
RULE NEW ThrmlZn:HasHtg
  DATATYPE
    Integer
  LONGFORM
    HasHeating
  DESCRIPTION
    "A flag that indicates if a ThermalZone is served by a system with cooling
     capacity."
  INPUTCLASS 
    NotInput      
  DEFAULT 
    if( IfValidAnd( PriAirCondgSysRef:HtgCap > 0 ) .OR. 
        IfValidAnd( VentSysRef:HtgCap > 0 ) ) 
    then 1
    else 0
    endif       
  SIZING_PROPOSED
    u:HasHtg
ENDRULE

RULE NEW Spc:HasHtg
  DATATYPE
    Integer
  LONGFORM
    HasHeating
  DESCRIPTION
    "A flag that indicates if a space is served by a system with cooling
     capacity."
  INPUTCLASS 
    NotInput
  DEFAULT  
    if( IfValidAnd( ThrmlZnRef:HasHtg > 0 ) )
    then 1
    else 0
    endif             
  SIZING_PROPOSED
    u:HasHtg
ENDRULE


// QC rules for ThermalZone

// Number of building stories 
RULE NEW ThrmlZn:NumStory
  DATATYPE
    Integer
  LONGFORM
    NumberBuildingStory
  DESCRIPTION
    "The number of unique Story parents for spaces that reference a ThrmlZn."
  HELP
    "Spaces combined into a ThermalZone must all be children of the same Story."
  INPUTCLASS 
    NotInput
  DEFAULT
    CountUniqueParentRefs( Spc:ThrmlZnRef )
  CHECKCODE
    if( NumStory > 1)
    then 
      PostError( "ThermalZone '%s' is comprised of spaces that span different 
                 BuildingStory objects.  This is currently not allowed.", Name )
    else UNCHANGED
    endif   
  SIZING
    u:NumStory
  ANNUAL
    z:NumStory            
ENDRULE
// The building story of the ThrmlZn
RULE NEW ThrmlZn:SpcWithMaxAreaRef
  DATATYPE
    Spc
  LONGFORM
    SpaceWithMaximumArea
  DESCRIPTION
    "The name of the Space with the largest area references the ThrmlZn."
  INPUTCLASS 
    NotInput
  DEFAULT
    MaxRevRefComp( Spc:ThrmlZnRef, Spc:Area )
ENDRULE

// The building story of the ThrmlZn
RULE NEW ThrmlZn:StoryNameRef
  DATATYPE
    Story
  LONGFORM
    BuildingStoryNameReference
  DESCRIPTION
    "The name of the parent Story of the largest Space (by FlrArea) that references
     the ThermalZone."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( LocalCompAssigned( SpcWithMaxAreaRef ) )
    then SpcWithMaxAreaRef:ParentStoryRef
    else UNDEFINED
    endif      
ENDRULE


//Number of TerminalUnits that reference a ThermalZone
RULE NEW ThrmlZn:NumTrmlUnitRefs
  DATATYPE
    Integer
  LONGFORM
    NumberTerminalUnitReferences
  DESCRIPTION
    "The number of references to the ThermalZone via TrmlUnit:ZnServedRef property."
  INPUTCLASS
    NotInput 
  HELP
    "The number should not be > 1."
  DEFAULT
    CountRefs(TrmlUnit:ZnServedRef)   
  SIZING
    UNDEFINED
  ANNUAL
    CountRefs( TrmlUnit:ZnServedRef )
ENDRULE    
// Status of ThermalZone assignments to ZoneSystems
RULE NEW ZnSys:NumPriSysRefs
  DATATYPE
    Integer
  LONGFORM
    NumberPrimarySystemReferences
  DESCRIPTION
    "The number of references to the ZnSys via ThrmlZn:PriAirCondgSysRef property."
  HELP
    "The number should not be > 1."
  INPUTCLASS
    NotInput 
  DEFAULT
    CountRefs( ThrmlZn:PriAirCondgSysRef )
  SIZING
    UNDEFINED
  ANNUAL
    CountRefs( ThrmlZn:PriAirCondgSysRef )
ENDRULE
RULE NEW ZnSys:NumSecSysRefs
  DATATYPE
    Integer
  LONGFORM
    NumberSecondarySystemReferences
  DESCRIPTION
    "The number of references to the ZnSys via ThrmlZn:SecAirCondgSysRef property."
  HELP
    "The number should not be > 1."
  INPUTCLASS
    NotInput 
  DEFAULT
    CountRefs( ThrmlZn:SecAirCondgSysRef )
  SIZING
    UNDEFINED
  ANNUAL
    CountRefs( ThrmlZn:SecAirCondgSysRef )
ENDRULE
RULE NEW ZnSys:NumVentSysRefs
  DATATYPE
    Integer
  LONGFORM
    NumberVentilationSystemReferences
  DESCRIPTION
    "The number of references to the AirSys via ThrmlZn:VentSysRef property." 
  INPUTCLASS
    NotInput 
  DEFAULT
    CountRefs( ThrmlZn:VentSysRef )
  SIZING
    UNDEFINED
  ANNUAL
    CountRefs( ThrmlZn:VentSysRef )
ENDRULE
RULE ZnSys:SysRefStatus
  DESCRIPTION
    "Enumeration that indicates status of the ZnSys with respect its 
     assignment to the ThrmlZn:Pri/SecAirCondgSysRef properties."
  HELP
    "Used to control list of available ZnSys that can be assigned to the 
     ThrmlZn:Pri/SecAirCondgSysRef property."
  INPUTCLASS
    NotInput
  OPTION
    HVAC
    Invalid
  DEFAULT
    if( NumPriSysRefs + NumSecSysRefs > 1 )
    then "Invalid"
    else "HVAC"
    endif
  CHECKSIM
    if( SysRefStatus = "Invalid" ) 
    then
      PostError( "ZoneSystem '%s' is referenced by %g ThermalZones. Revise
                 the model so each ZoneSystem is assigned to no more than one
                 ThermalZone.", Name, NumPriSysRefs+NumSecSysRefs )
    else UNCHANGED
    endif
  SIZING
    UNDEFINED
  ANNUAL
    z:SysRefStatus
ENDRULE

// Status of ThermalZone assignments to AirSystems
RULE NEW AirSys:NumPriSysRefs
  DATATYPE
    Integer
  LONGFORM
    NumberPrimarySystemReferences
  DESCRIPTION
    "The number of references to the AirSys via ThrmlZn:PriAirCondgSysRef property."  
  INPUTCLASS
    NotInput 
  DEFAULT
    CountRefs( ThrmlZn:PriAirCondgSysRef )
  SIZING
    UNDEFINED
  ANNUAL
    CountRefs( ThrmlZn:PriAirCondgSysRef )
ENDRULE
RULE NEW AirSys:NumVentSysRefs
  DATATYPE
    Integer
  LONGFORM
    NumberVentilationSystemReferences
  DESCRIPTION
    "The number of references to the AirSys via ThrmlZn:VentSysRef property."  
  INPUTCLASS
    NotInput 
  DEFAULT
    CountRefs( ThrmlZn:VentSysRef )
  SIZING
    UNDEFINED
  ANNUAL
    CountRefs( ThrmlZn:VentSysRef )
ENDRULE
RULE AirSys:SysRefStatus
  DESCRIPTION
    "Enumeration that indicates status of the AirSys with respect its 
     assignment to the ThrmlZn:Pri/SecAirCondgSysRef and VentSystRef properties."
  HELP
    "Used to control list of available AirSys that can be assigned to the 
     ThrmlZn:Pri/SecAirCondgSysRef and VentSysRef properties."
  INPUTCLASS
    NotInput
  OPTION
    HVAC
    Invalid
  DEFAULT
    "HVAC"     
  SIZING
    UNDEFINED
  ANNUAL
    z:SysRefStatus
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW ThrmlZn:ClgUMLHLimitSpcMax
  RULESETS
    T24N
  DATATYPE
    Integer
  LONGFORM
    CoolingUnmetLoadHourLimitSpaceMaximum
  DESCRIPTION
    "The maximum UMLH limit value from the spaces assigned to the zone."
  HELP
    ""
  INPUTCLASS
    NotInput
  DEFAULT
    MaxRevRef( Spc:ThrmlZnRef, Spc:ClgUMLHLimit )
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW ThrmlZn:HtgUMLHLimitSpcMax
  RULESETS
    T24N
  DATATYPE
    Integer
  LONGFORM
    HeatingUnmetLoadHourLimitSpaceMaximum
  DESCRIPTION
    "The maximum UMLH limit value from the spaces assigned to the zone."
  HELP
    ""
  INPUTCLASS
    NotInput
  DEFAULT
    MaxRevRef( Spc:ThrmlZnRef, Spc:HtgUMLHLimit )
ENDRULE


// -----------------------------------------------------------------------------
RULE ThrmlZn:ClgUMLHLimit
  RULESETS
    T24N
  DESCRIPTION
    "The limit on Unmet Load Hours in cooling for the zone, 
     based on the minimum value from the spaces in the zone."
  HELP
    ""
  INPUTCLASS
    NotInput
  DEFAULT
    MinRevRef( Spc:ThrmlZnRef, Spc:ClgUMLHLimit )
  CHECKCODE
    if( ClgUMLHLimit != ClgUMLHLimitSpcMax ) then
      PostWarning("The spaces assigned to thermal zone '%s' have cooling unmet load
                   hour limits ranging from %g to %g.  All spaces in the 
                   zone will be held to the minimum UMLH limit.", Name, 
                   ClgUMLHLimit, ClgUMLHLimitSpcMax)
    else UNCHANGED
    endif
  ANNUAL
    u:ClgUMLHLimit
ENDRULE


// -----------------------------------------------------------------------------
RULE ThrmlZn:HtgUMLHLimit
  RULESETS
    T24N
  DESCRIPTION
    "The limit on Unmet Load Hours in heating for the zone, 
     based on the minimum value from the spaces in the zone."
  HELP
    ""
  INPUTCLASS
    NotInput
  DEFAULT
    MinRevRef( Spc:ThrmlZnRef, Spc:HtgUMLHLimit )
  CHECKCODE
    if( HtgUMLHLimit != HtgUMLHLimitSpcMax ) then
      PostWarning("The spaces assigned to thermal zone '%s' have heating unmet load
                   hour limits ranging from %g to %g.  All spaces in the 
                   zone will be held to the minimum UMLH limit.", Name, 
                   HtgUMLHLimit, HtgUMLHLimitSpcMax)
    else UNCHANGED
    endif
  ANNUAL
    u:HtgUMLHLimit
ENDRULE


// -------- Calculating Operable Window Area for Interlocks at Zone  --------------
RULE NEW ThrmlZn:ExtOperableWinArea
  DATATYPE
    Float
  LONGFORM
    ExteriorOperableWindowArea
  DESCRIPTION
    "Area of all operable windows on the exterior wall in a conditioned 
     thermal zone."  
  HELP
    ""  
  INPUTCLASS
    NotInput   
  DEFAULT   
    SumRevRef( Spc:ThrmlZnRef, Spc:ExtOperableWinArea )
ENDRULE


// -------- Calculating Operable Window Area for Interlocks at Zone  --------------
RULE NEW ThrmlZn:ExtNewOperableWinArea
  DATATYPE
    Float
  LONGFORM
    ExteriorNewOperableWindowArea
  DESCRIPTION
    "Area of all new operable windows on the exterior wall in a conditioned 
     thermal zone."  
  HELP
    ""  
  INPUTCLASS
    NotInput   
  DEFAULT   
    SumRevRef( Spc:ThrmlZnRef, Spc:ExtNewOperableWinArea )
ENDRULE


// -------- Heating Cooling Interlock - Used for screen control ------------------
RULE NEW ThrmlZn:OperableWinInterlockReq
  RULESETS
    T24N
  LONGFORM
    OperableWindowInterlockRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( IsAltOnly )
    then 0
    else if( IsAddOrAlt .AND. IsAlt )
    then
      if( Proj:StdsYr = 2016 .AND. IfValidAnd(ThrmlZn:Type = "Conditioned") .AND.
          IfValidAnd(ExtNewOperableWinArea > 0) .AND.  
          ThrmlZn:IsNewHVAC = 1 )
      then 1
      else 0     
      endif
    else if( IsNewEnv .OR. IsAddEnv )
    then
      if( Proj:StdsYr = 2016 .AND. IfValidAnd(ThrmlZn:Type = "Conditioned") .AND.
          IfValidAnd(ExtNewOperableWinArea > 0) )
      then 1
      else 0     
      endif
    else if( IsNewMech .OR. IsAddMech )
    then
      if( Proj:StdsYr = 2016 .AND. IfValidAnd(ThrmlZn:Type = "Conditioned") .AND.
          IfValidAnd(ExtOperableWinArea > 0) )
      then 1
      else 0     
      endif
    else 0
    endif endif endif endif
ENDRULE


// -------------- Heating Cooling Interlock Checkbox----------------------------
RULE ThrmlZn:OperableWinHaveInterlock
  DESCRIPTION
    "A flag to indicate that all operable windows interlock with heating and 
     cooling systems."
  HELP
    ""
  INPUTCLASS
    CondRequired
  DEFAULT : T24N_2013
    UNDEFINED
  DEFAULT : T24N_2016
    0  
  ANNUAL_BASELINE
    UNDEFINED
  ANNUAL_PROPOSED
    u:OperableWinHaveInterlock
ENDRULE


// -------------- Heating Cooling Interlock Checkbox--------------
RULE ThrmlZn:OperableWinInterlock
  DESCRIPTION
    "A flag to indicate that not all new operable windows interlock with 
     heating and cooling systems and the penalty of additional OA flow will 
     be applied."
  HELP
    ""
  INPUTCLASS
    CondRequired
  DEFAULT : T24N_2013
    UNDEFINED
  DEFAULT : T24N_2016
    0
  ANNUAL_BASELINE
    UNDEFINED
  ANNUAL_PROPOSED : T24N_2013
    UNDEFINED
  ANNUAL_PROPOSED : T24N_2016
    if( IfValidAnd(OperableWinInterlockReq = 0 ) )
    then UNDEFINED
    else if( OperableWinHaveInterlock = 1 )
    then 0
    else 1
    endif endif
ENDRULE

// -------------- Operable Window Penalty for no Interlock  - High OA Limit ----
RULE ThrmlZn:OperableWinOALimHi
  DESCRIPTION
    "The high temperature limit, below which the outdoor air penalty will 
     operate in zones which have operable windows without interlocks."
  INPUTCLASS
    Prescribed
  ANNUAL_BASELINE
    UNDEFINED
  ANNUAL_PROPOSED : T24N_2013
    UNDEFINED
  ANNUAL_PROPOSED : T24N_2016
    if( IfValidAnd(OperableWinInterlockReq = 0 ) )
    then UNDEFINED
    else if( OperableWinHaveInterlock = 1 )
    then UNDEFINED
    else 90
    endif endif
ENDRULE


// -------------- Operable Window Penalty for no Interlock  - High OA Limit ----
RULE ThrmlZn:OperableWinOALimLo
  DESCRIPTION
    "The high temperature limit, below which the outdoor air penalty will 
     operate in zones which have operable windows without interlocks."
  INPUTCLASS
    Prescribed
  ANNUAL_BASELINE
    UNDEFINED
  ANNUAL_PROPOSED : T24N_2013
    UNDEFINED
  ANNUAL_PROPOSED : T24N_2016
    if( IfValidAnd(OperableWinInterlockReq = 0 ) )
    then UNDEFINED
    else if( OperableWinHaveInterlock = 1 )
    then UNDEFINED
    else 50
    endif endif
ENDRULE



