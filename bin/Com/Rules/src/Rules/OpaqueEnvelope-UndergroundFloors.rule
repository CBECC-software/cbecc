// OpaqueEnvelope - UndergroundFloors
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------

// Placeholder rules to assign C & F-Factors to UndgrFlr/UndgrWall for initial testing translators




// -------------- Underground Floor Name --------------------
// Input restriction summary: 
//      None
// Baseline rule summary: 
//      If provided, same for all transformations.
//
RULE UndgrFlr:Name
  DESCRIPTION
    "A unique name that identifies the floor touching the ground."  
  HELP
    "A unique name or code that identifies the floor and ties it to the construction documents submitted for energy code review. It is not mandatory to name surfaces."  
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    Required
  // No transformations are needed since already copied initially.
ENDRULE


// -------------- Underground Floor Status -----------------------------
RULE UndgrFlr:Status
  DESCRIPTION
    "This sets the Underground Floor construction status to New."  
  HELP
    ""
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    Required
  DEFAULT
    Parent(EnvStatus)
  CHECKCODE
    if( Proj:IsNewEnv ) then
      if( Status != "New" ) then
        PostWarning( "Slab on or below grade '%s':  Status '%s' is incompatible 
                      with Compliance Type '%s'.  Status will be treated as
                      'New' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsExistingEnv ) then
      if( Status != "Existing" ) then
        PostWarning( "Slab on or below grade '%s':  Status '%s' is incompatible 
                      with Compliance Type '%s'.  Status will be treated as
                      'Existing' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsAdd ) then
      if( Status = "Altered" ) then
        PostWarning( "Slab on or below grade '%s':  Status '%s' is incompatible
                      with Compliance Type '%s'.  Status will be treated as
                      'New' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else if( Proj:IsAltOnly ) then
      if( Status = "New" ) then
        PostWarning( "Slab on or below grade '%s':  Status '%s' is incompatible
                      with Compliance Type '%s'.  Status will be treated as
                      'Altered' for simulation.", Name, Status, Proj:CompType )
      else UNCHANGED
      endif
    else UNCHANGED
    endif endif endif endif
  SIZING
    if( Proj:IsNewEnv ) then "New"
    else if( Proj:IsExistingEnv ) then "Existing"
    else if( Proj:IsAdd .AND. u:Status = "Altered" ) then "New"
    else if( Proj:IsAltOnly .AND. u:Status = "New" ) then "Altered"
    else u:Status
    endif endif endif endif
  ANNUAL
    z:Status
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW UndgrFlr:IsNew
  DATATYPE 
    Integer
  LONGFORM
    IsNew
  DESCRIPTION
    "Flag to identify whether the status of the surface is New"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 1
    else if( Proj:IsExistingEnv ) then 0
    else if( Proj:IsAdd .AND. u:Status = "Altered" ) then 1
    else if( Proj:CompType = "ExistingAlteration" ) then 0
    else if( u:Status = "New") then 1
    else 0
    endif endif endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW UndgrFlr:IsAltered
  DATATYPE 
    Integer
  LONGFORM
    IsAltered
  DESCRIPTION
    "Flag to identify whether the status of the surface is Altered"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 0
    else if( Proj:IsExistingEnv ) then 0
    else if( Proj:IsAdd ) then 0
    else if( Proj:CompType = "ExistingAlteration" .AND. u:Status = "New" ) then 1
    else if( u:Status = "Altered" ) then 1
    else 0
    endif endif endif endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW UndgrFlr:IsExisting
  DATATYPE 
    Integer
  LONGFORM
    IsExisting
  DESCRIPTION
    "Flag to identify whether the status of the surface is Existing"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if( Proj:IsNewEnv ) then 0
    else if( Proj:IsExistingEnv ) then 1
    else if( u:Status = "Existing" ) then 1
    else 0
    endif endif endif
ENDRULE


// -------------- Determine the name of the underground floor construction ---------
RULE UndgrFlr:ConsAssmRef
  DESCRIPTION
    "Construction assembly reference (construction name) for an Underground Floor."  
  HELP
    "A reference to a construction assembly. "  
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    Required
  CHECKSIM
    if( LocalCompAssigned(u:ConsAssmRef) < 1 )
    then
      PostError("An underground floor construction has not been assigned to surface '%s'.",Name)
    else UNCHANGED
    endif
  SIZING_PROPOSED
     u:ConsAssmRef
  SIZING_BASELINE : S901G ECBC
    if( Status = "Existing" )
    then u:ConsAssmRef
    else
      if( Spc:NotEnclosed = 1 )
      then zp:ConsAssmRef
      else
        if( Spc:Semiheated = 1 )
        then RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.73")
        else
          if( Spc:OccClass = "Nonresidential" )
  	  then
	    if( Proj:CliZnNum < 60 ) 
	    then RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.73")
	    else
	      if( Proj:CliZnNum < 70 )
	      then RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.54")
	      else RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.52")
	      endif
            endif
	  else
	    if( Spc:OccClass = "Residential" )
	    then
	      if( Proj:CliZnNum < 40 )
	      then RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.73")
	      else
	        if( Proj:CliZnNum < 60 )
	        then RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.54") 
	        else
	          if( Proj:CliZnNum < 80 )
	          then RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.52")
	          else RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF0.51")
	          endif
	        endif
	      endif
            else UNDEFINED
	    endif
	  endif
        endif
      endif
    endif
  SIZING_BASELINE : T24N
    if( Status = "Existing" )
    then u:ConsAssmRef
    else RuleLibrary(ConsAssm,"SlabOnOrBelowGradeF073")
    endif
  ANNUAL_PROPOSED
    zp:ConsAssmRef
  ANNUAL_BASELINE 
    zb:ConsAssmRef
ENDRULE

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// ------- Calculate area by Status - UndgrFlr
RULE NEW UndgrFlr:AreaNew
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "New" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -----------------------------------------------------------------------------
RULE NEW UndgrFlr:AreaAltered
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Altered" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -----------------------------------------------------------------------------
RULE NEW UndgrFlr:AreaExisting
  DESCRIPTION
    "The surface area by status."
  UNITS
    ft2
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Existing" ) then
      Area
    else
      UNCHANGED
    endif
ENDRULE    

// -------------- Underground Floor Reference CHECKSIM ----------------------
//RULE NEW UndgrFlr:ConsAssmRefCheck
//  DESCRIPTION
//    "Checks if all underground floors have a underground floor construction 
//     assignment."  
//  HELP
//    ""
//  INPUTCLASS
//    Optional
//  CHECKSIM
//    if( LocalCompAssigned(u:ConsAssmRef) < 1 )
//    then
//      PostError("An underground floor construction has not been assigned to 
//                 surface '%s'.",Name)
//    else UNCHANGED
//    endif
//ENDRULE


// -------------- Underground Floor Type -----------------------------
RULE NEW UndgrFlr:SlabType
  DATATYPE
    Enumeration
  DESCRIPTION
     "This is the underground floor slab type."  
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    NotInput
  OPTION
    - specify -
    HeatedSlabOnGrade
    HeatedSlabBelowGrade
    UnheatedSlabOnGrade
    UnheatedSlabBelowGrade
  DEFAULT
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:ConsAssmRef:SlabType
    endif
  CHECKSIM
    if( LocalCompAssigned(u:ConsAssmRef) > 0 )
    then
      if( u:ConsAssmRef:SlabType = "- specify -" )
      then
        PostError("The underground floor Slab Type has not been specified 
	                 for the Construction Assembly assigned to surface '%s'.",
	                 Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:ConsAssmRef:SlabType
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:ConsAssmRef:SlabType
      else
        if(     zp:SlabType = "HeatedSlabOnGrade"
           .OR. zp:SlabType = "UnheatedSlabOnGrade" )
        then "UnheatedSlabOnGrade"
        else
          if(     zp:SlabType = "HeatedSlabBelowGrade"
             .OR. zp:SlabType = "UnheatedSlabBelowGrade" )
          then "UnheatedSlabBelowGrade"
	  else UNDEFINED
          endif
        endif
      endif
    endif
  ANNUAL_PROPOSED
    zp:SlabType
  ANNUAL_BASELINE
    zb:SlabType
ENDRULE


//// -------------- Underground Heated Slabs Boolean -----------------------------
RULE NEW UndgrFlr:SlabTypeBoolean
  DATATYPE
    Integer
  DESCRIPTION
     "This determines if the slab below grade is heated or not."  
  INPUTCLASS
     NotInput
  DEFAULT
    if( u:UndgrFlr:SlabType = "HeatedSlabBelowGrade" )
    then 1
    else 0
    endif
ENDRULE


//// -------------- Underground Heated Slabs Count -----------------------------
RULE NEW Proj:Bldg:Story:Spc:SlabTypeCount
  DATATYPE
    Integer
  DESCRIPTION
     "This determines if the slab below grade is heated or not."  
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren(UndgrFlr:SlabTypeBoolean)
ENDRULE



// -------------- Underground Floor Heated or Unheated -----------------------------
RULE NEW UndgrFlr:HtdOrUnhtd
  DATATYPE
    Enumeration
  DESCRIPTION
     "This determined if the floor slab is heated or unheated."  
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    NotInput
  OPTION
    HeatedSlab
    UnheatedSlab
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else 
//
        if(     zp:SlabType = "HeatedSlabOnGrade"
           .OR. zp:SlabType = "HeatedSlabBelowGrade" )
        then "HeatedSlab"
        else 
	  if(     zp:SlabType = "UnheatedSlabOnGrade"
             .OR. zp:SlabType = "UnheatedSlabBelowGrade" )
          then "UnheatedSlab"
          else UNDEFINED
          endif
	endif	
//       
    endif   
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then
        if(     zb:SlabType = "HeatedSlabOnGrade"
           .OR. zb:SlabType = "HeatedSlabBelowGrade" )
        then "HeatedSlab"
        else 
	  if(     zb:SlabType = "UnheatedSlabOnGrade"
             .OR. zb:SlabType = "UnheatedSlabBelowGrade" )
          then "UnheatedSlab"
          else UNDEFINED
          endif
	endif
      else "UnheatedSlab"
      endif
    endif
  ANNUAL_PROPOSED
    zp:HtdOrUnhtd
  ANNUAL_BASELINE
    zb:HtdOrUnhtd
ENDRULE


// -------------- Underground Floor Insulation Orientation --------------------
RULE NEW UndgrFlr:SlabInsOrientation
  DATATYPE
    Enumeration
  DESCRIPTION
     "This determines the underground floor insulation orientation."  
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    NotInput
  OPTION
    None
    12inHorizontal
    24inHorizontal
    36inHorizontal
    48inHorizontal
    12inVertical
    24inVertical
    36inVertical
    48inVertical
    HorizontalAndVertical
    FullyInsulatedSlab
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:ConsAssmRef:SlabInsOrientation
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:ConsAssmRef:SlabInsOrientation
      else "None"
      endif
    endif
  ANNUAL_PROPOSED
    zp:SlabInsOrientation
  ANNUAL_BASELINE
    zb:SlabInsOrientation
ENDRULE


// -------------- Underground Floor Insulation RValue --------------------
RULE NEW UndgrFlr:SlabInsThrmlR
  DATATYPE
    Enumeration
  DESCRIPTION
     "This determines the amount of insulation for the floor."  
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    NotInput
  OPTION
    R0
    R5
    R7_5
    R10
    R15
    R20
    R25
    R30
    R35
    R40
    R45
    R50
    R55
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else u:ConsAssmRef:SlabInsThrmlR
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then u:ConsAssmRef:SlabInsThrmlR
      else "R0"
      endif
    endif
  ANNUAL_PROPOSED
    zp:SlabInsThrmlR
  ANNUAL_BASELINE
    zb:SlabInsThrmlR
ENDRULE


// -------------- Underground Floor FFactor Lookup --------------------
RULE NEW UndgrFlr:FFactor
  DATATYPE
    Float
  DESCRIPTION
     "This determines the floor f-factor based on the slab details."
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else 
      if( zp:HtdOrUnhtd = "HeatedSlab" )
      then HeatedSlabFFactor:FFactor("SlabInsOrientation",SlabInsOrientation, "HtdOrUnhtd",HtdOrUnhtd, "SlabInsThrmlR",SlabInsThrmlR) // this lookup should result in 0.730
      else
        if( zp:HtdOrUnhtd = "UnheatedSlab" )
        then UnheatedSlabFFactor:FFactor("SlabInsOrientation",SlabInsOrientation, "HtdOrUnhtd",HtdOrUnhtd, "SlabInsThrmlR",SlabInsThrmlR) // this lookup should result in 0.730
        else UNDEFINED
        endif
      endif
    endif
  SIZING_BASELINE
    if( LocalStatus(u:Name) < 1 )
    then UNDEFINED
    else
      if( Status = "Existing" )
      then zp:FFactor
      else UnheatedSlabFFactor:FFactor("SlabInsOrientation",SlabInsOrientation, "HtdOrUnhtd",HtdOrUnhtd, "SlabInsThrmlR",SlabInsThrmlR) // this lookup should result in 0.730
      endif
    endif
  ANNUAL_PROPOSED
    zp:FFactor
  ANNUAL_BASELINE
    zb:FFactor
ENDRULE


// -------------- Underground Floor FFactor Calculated --------------------
RULE NEW UndgrFlr:OverallFFactor
  DATATYPE
    Float
  DESCRIPTION
    "The overall computed f-factor"  
  INPUTCLASS
    NotInput
  DEFAULT
    u:ConsAssmRef:FFactor
  SIZING_PROPOSED
    zp:ConsAssmRef:FFactor
  SIZING_BASELINE
    zb:ConsAssmRef:FFactor
  ANNUAL_PROPOSED   
    ap:ConsAssmRef:FFactor
  ANNUAL_BASELINE  
    ab:ConsAssmRef:FFactor
ENDRULE


// -------------- Underground Floor Compliance Check --------------------
RULE NEW UndgrFlr:MandatoryInsComp
  RULESETS
    T24N
  DATATYPE
    String
  LONGFORM
    MandatoryInsulationCompliance
  DESCRIPTION
    "Does comply with the requirements of Section 120.7 Mandatory
     Insulation Requirements "
  HELP
    ""
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    NotInput
  CHECKCODE
    if( LocalCompAssigned(u:ConsAssmRef) > 0 )
    then
      if( u:Status = "Existing" )
      then UNCHANGED
      else 
        if( ConsAssmRef:CompatibleSurfType = "UndergroundFloor" )
        then
          if(       ConsAssmRef:SlabType = "HeatedSlabBelowGrade"
             .OR. u:ConsAssmRef:SlabType = "HeatedSlabOnGrade" )
          then
	        if(     ConsAssmRef:SlabInsOrientation = "12inVertical"
	           .OR. ConsAssmRef:SlabInsOrientation = "24inVertical"
	           .OR. ConsAssmRef:SlabInsOrientation = "36inVertical"
	           .OR. ConsAssmRef:SlabInsOrientation = "48inVertical"
	           .OR. ConsAssmRef:SlabInsOrientation = "HorizontalAndVertical" )
	        then
	          if( Proj:CliZn = "ClimateZone16" )
	          then
	            if( OverallFFactor > 0.900444 )
	            then
	              PostError("Heated slab FFactor exceeds 0.900 violating 
	                         Section 120.7")
                    else UNCHANGED
	            endif
                  else
                    if( OverallFFactor > 0.990444 )
	            then
	              PostError("Heated slab FFactor exceeds 0.990 violating 
	                         Section 120.7")
                   else UNCHANGED
	           endif
                 endif
               else
                 if(     ConsAssmRef:SlabInsOrientation = "12inHorizontal"
	            .OR. ConsAssmRef:SlabInsOrientation = "24inHorizontal"
	            .OR. ConsAssmRef:SlabInsOrientation = "36inHorizontal"
	            .OR. ConsAssmRef:SlabInsOrientation = "48inHorizontal"
	            .OR. ConsAssmRef:SlabInsOrientation = "FullyInsulatedSlab" )
                 then
                   if( Proj:CliZn = "ClimateZone16" )
	           then
	             if( OverallFFactor > 1.170444 )
	             then
	               PostError("Heated slab FFactor exceeds 1.170 violating 
	                          Section 120.7")
                     else UNCHANGED
	             endif
                   else
                     if( OverallFFactor > 1.200444 )
	             then
	               PostError("Heated slab FFactor exceeds 1.200 violating 
	                          Section 120.7")
                     else UNCHANGED
	             endif
                   endif
                 else
                   if( ConsAssmRef:SlabInsOrientation = "None" )
	           then
                     PostError("Heated slabs, on or below grade, require both 
                                an Insulation Orientation and Insulation 
                                R-Value.")
                   else UNCHANGED
                   endif
                 endif
               endif
             else UNCHANGED
             endif
          else UNCHANGED
       endif
      endif
  else UNCHANGED
  endif
ENDRULE




// ------------ Calculate Max Perimeter Exposed for 2D Slabs ------------
RULE NEW Spc:MaxPerimExposed
 DATATYPE
   Float
 LONGFORM
   MaximumPerimeterExposed
 DESCRIPTION
   "This is used to calculate a default maximum perimeter exposed for 2D slabs 
    on grade."
 INPUTCLASS
   NotInput
 DEFAULT
   if( Proj:IsDetailedGeometry < 1 )
   then( Int( SumChildren(ExtWall:Area) / Story:FlrToCeilingHgt ))
   else UNDEFINED
   endif
ENDRULE




// Placeholder rules to assign UndgrFlr:PerimExposed and UndgrWall:Height for 
// initial testing of translators
// -------------- Underground Floor Perimeter Exposed ----------------
RULE UndgrFlr:PerimExposed
  DESCRIPTION
    "The perimeter length of an underground floor surface that is within 2 feet
     (24 inches) of grade that is exposed to unconditioned or exterior 
     conditions."
  HELP
    "Used in conjuction with F-Factor to simulate the thermal performance of 
     horizontal surfaces in contact with the earth."
  REFERENCE 
    ACM-5.5.9 Slab Floors in Contact with Ground
  INPUTCLASS
    Default
  MINIMUM
    0.0 
  REPORTPRECISION
    0
  DEFAULT
// NEW DEFAULT CONDITION - THIS WORKS FOR BELOW GRADE SLAB WITH VERY LOW FFACTORS
    if ( Proj:IsDetailedGeometry < 1 .AND.
        ( UndgrFlr:SlabType = "HeatedSlabOnGrade" .OR.
	  UndgrFlr:SlabType = "UnheatedSlabOnGrade" ) )
    then Spc:MaxPerimExposed
    else if ( LocalCompAssigned(ConsAssmRef) )
    then Parent( ExtPerim )
    else UNDEFINED
    endif endif
  CHECKCODE
    if( Proj:IsDetailedGeometry < 1 )
    then
      if( u:PerimExposed > (Int((UndgrFlr:Area * 2) + 2)) )
      then
        PostError("The exposed perimeter of slab surface '%s' is greater than 
                   the maximum value.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
// ORIGINAL DEFAULT CONDITIONS
//    if ( LocalCompAssigned(ConsAssmRef) )
//    then
//      if ( ConsAssmRef:SlabType = "HeatedSlabOnGrade"
//          .OR. ConsAssmRef:SlabType = "UnheatedSlabOnGrade" )
//      then Parent(ExtPerim)
//      else 1.0 // This is the minimum found to not cause simulation errors
//      endif
//    else UNDEFINED
//    endif
  SIZING
    u:PerimExposed
  ANNUAL
    z:PerimExposed
ENDRULE


//
// This function will call a number from the below table
// HeatedSlabFFactor:FFactor("SlabInsOrientation",ap:SlabInsOrientation, "HeatedOrUnheated",ap:HeatedOrUnheated, "SlabInsThrmlR",ap:SlabInsThrmlR)
//
TABLE HeatedSlabFFactor
    SlabInsOrientation    HtdOrUnhtd  FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor
    SlabInsThrmlR=                    R0      R5      R7_5    R10     R15     R20     R25     R30     R35     R40     R45     R50     R55                    
    None                  HeatedSlab  1.350   NA      NA      NA      NA      NA      NA      NA      NA      NA      NA      NA      NA
    12inHorizontal        HeatedSlab  1.350   1.310   1.310   1.300   1.300   NA      NA      NA      NA      NA      NA      NA      NA
    24inHorizontal        HeatedSlab  1.350   1.280   1.270   1.260   1.250   NA      NA      NA      NA      NA      NA      NA      NA
    36inHorizontal        HeatedSlab  1.350   1.240   1.210   1.200   1.180   NA      NA      NA      NA      NA      NA      NA      NA 
    48inHorizontal        HeatedSlab  1.350   1.200   1.170   1.130   1.110   NA      NA      NA      NA      NA      NA      NA      NA
    12inVertical          HeatedSlab  1.350   1.060   1.020   1.000   0.980   0.968   0.964   0.961   NA      NA      NA      NA      NA
    24inVertical          HeatedSlab  1.350   0.990   0.950   0.900   0.860   0.843   0.832   0.827   NA      NA      NA      NA      NA
    36inVertical          HeatedSlab  1.350   0.950   0.890   0.840   0.790   0.762   0.747   0.740   NA      NA      NA      NA      NA
    48inVertical          HeatedSlab  1.350   0.910   0.850   0.780   0.720   0.688   0.671   0.659   NA      NA      NA      NA      NA
    HorizontalAndVertical HeatedSlab  1.350   0.990   0.950   0.900   0.860   0.843   0.832   0.827   NA      NA      NA      NA      NA
    FullyInsulatedSlab    HeatedSlab  1.350   0.740   0.640   0.550   0.440   0.373   0.326   0.296   0.273   0.255   0.239   0.227   0.217
ENDTABLE


//
// This function will call a number from the below table
// UnheatedSlabFFactor:FFactor("SlabInsOrientation",ap:SlabInsOrientation, "HeatedOrUnheated",ap:HeatedOrUnheated, "SlabInsThrmlR",ap:SlabInsThrmlR)
//
TABLE UnheatedSlabFFactor
    SlabInsOrientation    HtdOrUnhtd    FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor FFactor
    SlabInsThrmlR=                      R0      R5      R7_5    R10     R15     R20     R25     R30     R35     R40     R45     R50     R55                    
    None                  UnheatedSlab  0.730   NA      NA      NA      NA      NA      NA      NA      NA      NA      NA      NA      NA
    12inHorizontal        UnheatedSlab  0.730   0.720   0.710   0.710   0.710   NA      NA      NA      NA      NA      NA      NA      NA
    24inHorizontal        UnheatedSlab  0.730   0.700   0.700   0.700   0.690   NA      NA      NA      NA      NA      NA      NA      NA
    36inHorizontal        UnheatedSlab  0.730   0.680   0.670   0.660   0.660   NA      NA      NA      NA      NA      NA      NA      NA 
    48inHorizontal        UnheatedSlab  0.730   0.670   0.650   0.640   0.630   NA      NA      NA      NA      NA      NA      NA      NA
    12inVertical          UnheatedSlab  0.730   0.610   0.600   0.580   0.570   0.567   0.565   0.564   NA      NA      NA      NA      NA
    24inVertical          UnheatedSlab  0.730   0.580   0.560   0.540   0.520   0.510   0.505   0.502   NA      NA      NA      NA      NA
    36inVertical          UnheatedSlab  0.730   0.560   0.530   0.510   0.480   0.472   0.464   0.460   NA      NA      NA      NA      NA
    48inVertical          UnheatedSlab  0.730   0.540   0.510   0.480   0.450   0.434   0.424   0.419   NA      NA      NA      NA      NA
    HorizontalAndVertical UnheatedSlab  0.730   0.580   0.560   0.540   0.520   0.510   0.505   0.502   NA      NA      NA      NA      NA
    FullyInsulatedSlab    UnheatedSlab  0.730   0.460   0.410   0.360   0.300   0.261   0.233   0.213   0.198   0.186   0.176   0.168   0.161
ENDTABLE
