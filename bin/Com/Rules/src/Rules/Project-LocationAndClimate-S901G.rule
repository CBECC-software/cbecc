// Project - Location and Climate
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALifORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN if
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------



// Message used to communicate to user zip code lookup status in UI
RULE NEW Proj:ZipCodeMsg
  DATATYPE
    String
  INPUTCLASS
    NotInput       
  DEFAULT
    if( IfValidAnd( ZipCode >= 1000 ) .AND. IfValidAnd( ZipCode <= 99999 ) )
    then
      if( WeatherFileData_S901G:WthrStationNum( "ZipCode", u:ZipCode ) < 1 )
      then "Zip not found – try entering nearby zip code"
      else " "
      endif
    else "Enter zip code to default climate zone and weather file"
    endif
ENDRULE


// ********** Weather Station **************************************************
RULE Proj:WeatherStationNum
  DESCRIPTION
    "California weather station number."
  INPUTCLASS
    Optional
  DEFAULT 
    if( LocalStatus( WeatherStation ) > 4 ) 
    then // If weather station is user-defined, then station # is based on that
        WeatherFileClimateZone_S901G:WthrStationNum( "WthrFile", u:WeatherStation )
    else if( LocalStatus( ZipCode ) = 0 )
    then // Weather station number set to 0 if ZipCode not valid
      0
    else // ZipCode is valid, set station # based on that
      WeatherFileData_S901G:WthrStationNum( "ZipCode", u:ZipCode )
    endif endif
  CHECKCODE
    if( WeatherStationNum > 0 )
    then UNCHANGED 
    else PostError( "Invalid weather station number (%.0f)", WeatherStationNum )
    endif
  SIZING  
    u:WeatherStationNum
  ANNUAL
    u:WeatherStationNum
ENDRULE

RULE Proj:WeatherStation
  DESCRIPTION
    "California weather station."
  INPUTCLASS
    Required
  DEFAULT 
    if( WeatherStationNum < 1 )
    then "- select -"
    else WeatherFileClimateZone_S901G:WthrFile( "WthrStationNum", u:WeatherStationNum )
    endif
  CHECKCODE
    if( WeatherStation != "- select -" .AND. WeatherStation != "*" ) 
    then UNCHANGED
    else PostError( "Invalid weather station (%s)", WeatherStation )
    endif
  SIZING  
    u:WeatherStation
  ANNUAL
    u:WeatherStation
ENDRULE


// ********** Climate Zone *****************************************
RULE Proj:CliZn
  DESCRIPTION
    "Climate zone."
  INPUTCLASS
    Required    
  DEFAULT 
    if( LocalStatus( ZipCode ) = 0 .OR. IfValidAnd( ZipCode > 100 )==0 )
    then // Weather station number set to 0 if ZipCode not valid
      "- select -"
    else // ZipCode is valid, set CliZn based on that
      WeatherFileData_S901G:CliZn( "ZipCode", u:ZipCode )
    endif
  SIZING  
    u:CliZn
  ANNUAL
    u:CliZn
ENDRULE

RULE Proj:CliZnNum
  DESCRIPTION
    "Integer value of climate zone."
  INPUTCLASS
    Required    
  DEFAULT 
    switch( CliZn )
      case  "1A" :  11
      case  "2A" :  21
      case  "2B" :  22
      case  "3A" :  31
      case  "3B" :  32
      case  "3C" :  33
      case  "4A" :  41
      case  "4B" :  42
      case  "4C" :  43
      case  "5A" :  51
      case  "5B" :  52
      case  "6A" :  61
      case  "6B" :  62
      case  "7"  :  70
      case  "8"  :  80
      default    :   0
    endswitch
  CHECKCODE
    if( CliZnNum >= 1 .OR. CliZnNum <= 80 ) 
    then UNCHANGED
    else PostError("Invalid climate zone number (%.0f)", CliZnNum)
    endif
  SIZING  
    u:CliZnNum
  ANNUAL
    u:CliZnNum
ENDRULE

RULE NEW Proj:CliZnNumOnly
  DATATYPE
    Integer
  LONGFORM
    ClimateZoneNumberOnly 
  DESCRIPTION
    "The Number portion of the climate zone designation.  i.e. Climate Zone 4A 
     would have CliZnNumOnly = 4"
  INPUTCLASS 
    NotInput  
  DEFAULT
    (CliZnNum-Mod( CliZnNum,10 ) ) / 10
  SIZING
    u:CliZnNumOnly
  ANNUAL
    u:CliZnNumOnly
ENDRULE


; SAC 9/3/14 - added CliZnCounty rule block to re-classify as NotInput for 90.1 analysis
RULE Proj:CliZnCounty
  DESCRIPTION
    "Climate zone county."
  INPUTCLASS
    NotInput    
ENDRULE


// ********** Latitude and Longitude *******************************************
RULE Proj:Lat
  DESCRIPTION
    "Building latitude."
  INPUTCLASS
    Prescribed
  MINIMUM
    -90
  MAXIMUM
     90
// not used for 90.1 analysis
ENDRULE

RULE Proj:Long
  DESCRIPTION
    "Building longitude."
  INPUTCLASS
    Prescribed
  MINIMUM
    -180
  MAXIMUM
     180
// not used for 90.1 analysis
ENDRULE

RULE Proj:Elevation
  DESCRIPTION
    "Building elevation."
  INPUTCLASS
    Prescribed
  MINIMUM
    -300
  MAXIMUM
    8899
// not used for 90.1 analysis
ENDRULE

// -----------------------------------------------------------------------------
// ********** OA Cleaning Required?
RULE Proj:OACleaningReqd
  DESCRIPTION
    "Flag if cleaning of OA required by Std. 62.1, section 6.2.1.  This
     triggers exceptions to economizer requirements."
  INPUTCLASS 
    Optional
  DEFAULT
    0
  SIZING
    u:OACleaningReqd
  ANNUAL
    z:OACleaningReqd
ENDRULE

// ********** Weather File *****************************************************
// Properties & rules to handle weather file naming and download options
RULE NEW Proj:WeatherFileAppend
  DATATYPE
    String
  LONGFORM
    WeatherFileAppend  
  DESCRIPTION
    "Text to append to weather station ID in defining weather and DDY files to
     use in analysis"
  INPUTCLASS 
    NotInput  
  DEFAULT
    "_TMY3"
  SIZING
    u:WeatherFileAppend
  ANNUAL
    z:WeatherFileAppend
ENDRULE

RULE Proj:WeatherFileDownloadURL
  DESCRIPTION
    "URL of weather file to download for use in the simulation (if file not found
     in simulation weather directory)"
  INPUTCLASS
    Optional
  DEFAULT
    WeatherFileClimateZone_S901G:LocationURL( "WthrStationNum", u:WeatherStationNum )
  SIZING
    u:WeatherFileDownloadURL
  ANNUAL
    z:WeatherFileDownloadURL
ENDRULE

// Properties & rules to check and report EPW & DDY file inconsistencies
RULE NEW Proj:WthrFileEPWHash
  DATATYPE
    String
  LONGFORM
    WeatherFileEPWHash  
  DESCRIPTION
    "Hash of simulation weather (EPW) file"
  INPUTCLASS 
    NotInput  
; no transform expression to SET this - set via source code prior to CHECKCODE
  CHECKCODE
    if( WeatherStationNum < 1 .OR. LocalStatus( WeatherStation ) < 1 )
      then 
        PostError( "TMY3 weather station not identified (Proj:WeatherStation)." )
    else UNCHANGED
    endif
// hash check 901. weather data ??
//    else if( LocalStatus( WthrFileEPWHash ) > 0 )
//    then
//      if( WthrFileEPWHash != WeatherFileClimateZone_S901G:EPWHash( "WthrStationNum", u:WeatherStationNum ))
//      then
//      PostError( "Simulation weather file (%s - EPW) doesn't pass consistency 
//                  check.  Re-installation of program software may resolve the
//                  problem.", WeatherStation )
//      else UNCHANGED
//      endif
//    else UNCHANGED
//    endif endif
ENDRULE

RULE NEW Proj:WthrFileDDYHash
  DATATYPE
    String
  LONGFORM
    WeatherFileDDYHash  
  DESCRIPTION
    "Hash of simulation design day (DDY) file"
  INPUTCLASS 
    NotInput  
; no transform expression to SET this - set via source code prior to CHECKCODE
// hash check 901. weather data ??
//  CHECKCODE
//    if( WeatherStationNum < 1 .OR. LocalStatus( WeatherStation ) < 1 )
//      then // will have been caught in prior rule
//        UNCHANGED  
//    else if( LocalStatus( WthrFileDDYHash ) > 0 )
//    then
//      if( WthrFileDDYHash != WeatherFileClimateZone_S901G:DDYHash( "WthrStationNum", u:WeatherStationNum ))
//      then 
//        PostError( "Simulation design day file (%s - DDY) doesn't pass consistency 
//                    check.  Re-installation of program software may resolve the
//                    problem.", WeatherStation )
//      else UNCHANGED
//      endif
//    else UNCHANGED
//    endif endif
ENDRULE

// --------------------  File Hash Checking & Security Keys  -------------------
//  Proj:FileHashToCheck    - no rule logic - set via source code
//  Proj:FileHashID         - no rule logic - set via source code

RULE Proj:FileHashStatus
  FILEHASHES
    if( LocalStatus( FileHashToCheck ) < 1 .OR. LocalStatus( FileHashID ) < 1) 
    then  1
    else if( strlen( FileHashToCheck ) < 64) 
    then  2
    else if( CAComFileHashes:HaveHash1( "HashID", FileHashID ) > 0.5 .AND.
             CAComFileHashes:HaveHash2( "HashID", FileHashID ) > 0.5 )
    then
      if( FileHashToCheck == CAComFileHashes:Hash1( "HashID", FileHashID ) .OR.
          FileHashToCheck == CAComFileHashes:Hash2( "HashID", FileHashID ) ) 
      then 0
      else 3
      endif
    else if( CAComFileHashes:HaveHash1( "HashID", FileHashID ) > 0.5 )
    then
      if( FileHashToCheck == CAComFileHashes:Hash1( "HashID", FileHashID ) )
      then 0 
      else 3
      endif
    else if( CAComFileHashes:HaveHash2( "HashID", FileHashID ) > 0.5 )
      then
      if( FileHashToCheck == CAComFileHashes:Hash2( "HashID", FileHashID ) ) 
      then 0
      else 3
      endif
    else 0
    endif endif endif endif endif
ENDRULE


RULE Proj:RptPrvKey[1]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 1 )
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 1 ) 
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPrvKey[2]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 2 ) 
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 2 )  
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPrvKey[3]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 3 ) 
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 3 )
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPrvKey[4]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 4 ) 
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 4 )  
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPrvKey[5]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 5 ) 
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 5 )  
    else UNDEFINED  
    endif
ENDRULE
RULE Proj:RptPrvKey[6]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 6 ) 
    then  CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 6 )  
    else  UNDEFINED  
    endif
ENDRULE
RULE Proj:RptPrvKey[7]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 7 )
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 7 )
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPrvKey[8]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Prv" ) >= 8 )
    then CAComKeys:KeyText( "KeyType", "Prv", "KeyRec", 8 )
    else UNDEFINED
    endif
ENDRULE

RULE Proj:RptPubKey[1]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Pub" ) >= 1 )
    then CAComKeys:KeyText( "KeyType", "Pub", "KeyRec", 1 )
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPubKey[2]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Pub" ) >= 2 )
    then CAComKeys:KeyText( "KeyType", "Pub", "KeyRec", 2 )
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPubKey[3]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Pub" ) >= 3 )
    then CAComKeys:KeyText( "KeyType", "Pub", "KeyRec", 3 )
    else UNDEFINED
    endif
ENDRULE
RULE Proj:RptPubKey[4]
  SECURITYKEYS
    if( CAComKeys:NumRecs( "KeyType", "Pub" ) >= 4 )
    then CAComKeys:KeyText( "KeyType", "Pub", "KeyRec", 4 )
    else UNDEFINED
    endif
ENDRULE


//
// ----------- Water Heater Water Main Temperature Schedule Reference ---------
// 
RULE Proj:WtrMnTempSchRef
  DESCRIPTION
    "This is the monthly average temperature of the water main based on the
     projects Climate Zone (1 - 16) within California."
  HELP
    ""
  REFERENCE
    ACM-5.9.1
  INPUTCLASS
    NotInput
  SIZING
    if( LocalStatus(u:Name) > 0 )
    then
    switch( CliZn )
      case  "1A" :  (RuleLibrary(Schedule,"WaterMainCZ1A"))
      case  "2A" :  (RuleLibrary(Schedule,"WaterMainCZ2A"))
      case  "2B" :  (RuleLibrary(Schedule,"WaterMainCZ2B"))
      case  "3A" :  (RuleLibrary(Schedule,"WaterMainCZ3A"))
      case  "3B" :  (RuleLibrary(Schedule,"WaterMainCZ3B"))
      case  "3C" :  (RuleLibrary(Schedule,"WaterMainCZ3C"))
      case  "4A" :  (RuleLibrary(Schedule,"WaterMainCZ4A"))
      case  "4B" :  (RuleLibrary(Schedule,"WaterMainCZ4B"))
      case  "4C" :  (RuleLibrary(Schedule,"WaterMainCZ4C"))
      case  "5A" :  (RuleLibrary(Schedule,"WaterMainCZ5A"))
      case  "5B" :  (RuleLibrary(Schedule,"WaterMainCZ5B"))
      case  "6A" :  (RuleLibrary(Schedule,"WaterMainCZ6A"))
      case  "6B" :  (RuleLibrary(Schedule,"WaterMainCZ6B"))
      case  "7"  :  (RuleLibrary(Schedule,"WaterMainCZ7"))
      case  "8"  :  (RuleLibrary(Schedule,"WaterMainCZ8"))
      default    :  (RuleLibrary(Schedule,"WaterMainCZ8"))
    endswitch
    else UNDEFINED
    endif
  ANNUAL
    z:WtrMnTempSchRef
ENDRULE


// -------------- Project Design Wet-Bulb Temperature --------------------------   - SAC 9/3/14 - moved from HVACPrimary-SystemControls.rule to consolidate calls to location-related look-up tables
RULE NEW Proj:DsgnWBT
  DATATYPE
    Float
  LONGFORM
    DesignWetBulbTemperature
  DESCRIPTION
    "The project design wet-bulb temperature."
  HELP
    "The design wet-bulb temperature for the project as listed in the
    design day weather file.  This is actually the mean coincident wet-bulb
    from the annual cooling design dry-bulb day."
  INPUTCLASS
    NotInput
  MINIMUM
    32
  COMMONMINIMUM
    40
  COMMONMAXIMUM
    110
  MAXIMUM
    212
  UNITS
    F
  DEFAULT
    if( WeatherStationNum < 1 )
    then 71
    else WeatherFileClimateZone_S901G:DsgnWB( "WthrStationNum", u:WeatherStationNum )
    endif
  SIZING
    u:DsgnWBT
  ANNUAL
    z:DsgnWBT
ENDRULE
