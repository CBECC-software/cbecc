// Reporting - Ventilation and Exhaust
//
// -------------------------------------------------------------------------
//  Copyright (c) 2015, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  




 // ********** BuildingStory Reporting **********
RULE NEW Story:VentExhRpt
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport
  INPUTCLASS 
    NotInput
  REPORT
    if( ComponentIndex() = 1 )
    then
      if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
      then WriteToFile( "BuildingStory\n,,Floor Area (including multipliers),,,,,Ventilation (Design),,,Ventilation (For Balance),,,,,,Comm. Kitchen,,Parking Garage,,Laboratory\nName,Multiplier,Total,Cond. NRes,Cond. Res,Total Cond.,Number,Total,Code Min.,Exhaust,Total,Code Min.,Exhaust,CodeVent Mult,ExhVent Mult,ExhVent Mult Limit,Vent,Exhaust,Vent,Exhaust,Vent,Exhaust\n,,(ft2),(ft2),(ft2),(ft2),(people),(cfm),(cfm),(cfm),(cfm),(cfm),(cfm),,,,(cfm),(cfm),(cfm),(cfm),(cfm),(cfm)\n" )
      else UNCHANGED  
      endif
    else UNCHANGED
    endif
ENDRULE 
RULE NEW Story:VentExhRpt_Name
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Name
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%c%s%c,%g,%.1f,%.1f,%.1f,%.1f,%.1f", 34, Name, 34, Mult, TotFlrAreaWithMult, NonResCondFlrAreaWithMult, ResCondFlrAreaWithMult, TotCondFlrAreaWithMult, OccNumSimWithMult )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW Story:VentExhRpt_Part1
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Part1
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%.0f,%.0f,%.0f,%.0f,%.0f,%.0f,%.3f,%.3f,%.3f", VentFlow, CodeVentFlow, ExhFlow, VentFlowForBal, CodeVentFlowForBal, ExhFlowForBal, CodeVentMult, ExhVentMult, ExhVentMultLim )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW Story:VentExhRpt_Part2
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Part2
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%.0f,%.0f,%.0f,%.0f,%.0f,%.0f,%.0f,%.0f", GenVentFlow, GenExhFlow, CommKitVentFlow, CommKitExhFlow, PrkgGarVentFlow, PrkgGarExhFlow, LabVentFlow, LabExhFlow )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW Story:VentExhRpt
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then WriteToFile( "%s,%s,%s\n", VentExhRpt_Name, VentExhRpt_Part1, VentExhRpt_Part2 )
    else UNCHANGED  
    endif
ENDRULE 

// ********** Space Reporting **********
RULE NEW Spc:VentExhRpt
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport
  INPUTCLASS 
    NotInput
  REPORT
    if( ComponentIndex() = 1 )
    then
      if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
      then WriteToFile( "\nSpace\n,,,,,,,Occupancy,,,Ventilation,,,,Design Inputs,,,,,Minimum Req.,,,,,Adjustments,,Simulated,,Exhaust,,,ForBalance\nName,Story Name,Condg Type,Space Function,Thermal Zone,Floor Area,Multiplier,Dsgn,Min,Number,Spec. Method,Control,Zone Eff (Ez),SysEff (Ev),Per Area,Per Occupant,Per Volume,Per Space,Calculated Flow (incl Mult and Ez),Per Area,Per Occupant,Per Volume,Calculated Flow (incl Mult and Ez),TARGET Flow (incl Mult and Ez),CodeVent Mult,ExhVent Mult,,,Calculated Flow,Lab Exh Type,Max Kitchen,Ventilation,Exhaust\n,,,,,(ft2),,(ppl/1000ft2),(ppl/1000ft2),(people),,,,,(cfm/ft2),(cfm/person),(ACH),(cfm/person),(cfm),(cfm/ft2),(cfm/person),(ACH),(cfm),(cfm),,,(cfm/ft2),(cfm/person),(cfm),,(cfm),(cfm),(cfm)\n" )
      else UNCHANGED  
      endif
    else UNCHANGED
    endif
ENDRULE 
RULE NEW Spc:VentExhRpt_Name
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Name
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%c%s%c,%.1f,%g,%.1f,%.1f,%.1f", 34, Name, 34, 34, Story:Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, ThrmlZnRef:Name, 34, FlrArea, Mult, ValidOr( OccDens, 0 ), MinOccDens, OccNumSim )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW Spc:VentExhRpt_Part1
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Part1
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then
      if( IfValidAnd( VentStd = "Other" ) )
      then Format( "%c%s%c,%c%s%c,%.3f,%.3f,%.3f,%.2f,%.3f,%.0f,%.0f,%.3f,%.2f,%.3f,%.0f,%.0f,%.3f,%.3f,%.3f,%.2f", 34, VentSpecMthd, 34, 34, VentCtrlMthd, 34, VentAirDistEff, VentSysEff, VentPerArea, VentPerPerson, VentACH, VentPerSpc, VentFlow, CodeOtherVentPerArea, CodeOtherVentPerPerson,  CodeOtherVentACH, CodeOtherVentFlow, CodeVentFlowTarget, CodeVentMult, ExhVentMult, ValidOr(ThrmlZnRef:VentPerAreaSim, 0), ValidOr(ThrmlZnRef:VentPerPersonSim, 0) )
      else Format( "%c%s%c,%c%s%c,%.3f,%.3f,%.3f,%.2f,%.3f,%.0f,%.0f,%.3f,%.2f,%.3f,%.0f,%.0f,%.3f,%.3f,%.3f,%.2f", 34, VentSpecMthd, 34, 34, VentCtrlMthd, 34, VentAirDistEff, VentSysEff, VentPerArea, VentPerPerson, VentACH, VentPerSpc, VentFlow, CodeVentPerArea, CodeVentPerPerson,  CodeVentACH, CodeVentFlow, CodeVentFlowTarget, CodeVentMult, ExhVentMult, ValidOr(ThrmlZnRef:VentPerAreaSim, 0), ValidOr(ThrmlZnRef:VentPerPersonSim, 0) )
      endif
    else UNCHANGED  
    endif
ENDRULE
RULE NEW Spc:VentExhRpt_Part2
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Part2
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%.0f,%c%s%c,%.0f,%.0f,%.0f", ValidOr( ExhFlow, 0 ) , 34, LabExhRtType, 34, MaxTotKitExhHoodFlow, VentFlowForBal, ExhFlowForBal )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW Spc:VentExhRpt
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then WriteToFile( "%s,%s,%s\n", VentExhRpt_Name, VentExhRpt_Part1, VentExhRpt_Part2 )
    else UNCHANGED  
    endif
ENDRULE 

// ********** ThermalZone Reporting **********
RULE NEW ThrmlZn:VentExhRpt
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport
  INPUTCLASS 
    NotInput
  REPORT
    if( ComponentIndex() = 1 )
    then
      if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
      then WriteToFile( "\nThermalZone\n,,,,,,,Occupancy,,,Ventilation,,,,,,Simulated,,Exhaust,,,,\nName,Story Name,Type,Pri HVAC System,Ventilation System,Floor Area,Multiplier,Dsgn,Min,Number,Spec. Method,Control,Zone Eff (Ez),SysEff (Ev),Design,Minimum Req.,,,Calculated Flow,ExhSysRef,ExhOperMode,ExhCtrlMthd,ExhBalancedSchRef\n,,,,,(ft2),,(ppl/1000ft2),(ppl/1000ft2),(people),,,,,(cfm),(cfm),(cfm/ft2),(cfm/person),(cfm)\n" )
      else UNCHANGED  
      endif
    else UNCHANGED
    endif
ENDRULE 
RULE NEW ThrmlZn:VentExhRpt_Name
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Name
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%c%s%c,%.1f,%g,%.1f,%.1f,%.1f", 34, Name, 34, 34, ThrmlZn:StoryNameRef, 34, 34, Type, 34, 34, PriAirCondgSysRef, 34, 34, VentSysRef, 34, FlrArea, Mult, OccDens, MinOccDens, OccNumSim )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW ThrmlZn:VentExhRpt_Part1
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Part1
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then Format( "%c%s%c,%c%s%c,%.3f,%.3f,%.0f,%.0f,%.3f,%.2f", 34, VentSpecMthd, 34, 34, VentCtrlMthd, 34, VentAirDistEff, VentSysEff, VentFlow, CodeVentFlow, ValidOr( VentPerAreaSim, 0 ), ValidOr( VentPerPersonSim, 0 ) )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW ThrmlZn:VentExhRpt_Part2
  DATATYPE
    String
  LONGFORM
    VentilationExhaustReport_Part2
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" .AND. ExhFlow > 0 )
    then Format( "%.0f,%c%s%c,%c%s%c,%c%s%c,%c%s%c", ExhFlow, 34, ExhSysRef, 34, 34, ExhOperMode, 34, 34, ExhCtrlMthd, 34, 34, ExhBalancedSchRef, 34 )
    else UNCHANGED  
    endif
ENDRULE
RULE NEW ThrmlZn:VentExhRpt
  REPORT
    if( Proj:RuleReportType = "ModelRpt_VentilationExhaust" )
    then
      if( LocalStatus( VentExhRpt_Part2 ) = 0 )
      then WriteToFile( "%s,%s\n", VentExhRpt_Name, VentExhRpt_Part1 )
      else WriteToFile( "%s,%s,%s\n", VentExhRpt_Name, VentExhRpt_Part1, VentExhRpt_Part2 )
      endif
    else UNCHANGED  
    endif
ENDRULE 

