// HVAC Secondary Systems - Fans - Exhaust
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2014, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------


//  This rule file addresses the following building descriptors:


// Default PwrIdx for exhaust fans for AutoEffInput rules
RULE Fan:PwrIdx 
  DEFAULT
    if( Proj:AutoEffInput = 1 )
    then // For PROPOSED AutoEfficiency input only
      if( ParentComponentType() = "ZnSys" )
      then
        if( ZnSys:IsResExhSys )
        then 0.58 // Residential exhaust system
        else UNCHANGED
        endif
      else if( AirSys:IsResExhSys )
      then 0.58 // Residential exhaust system
      else UNCHANGED
      endif endif
    else UNCHANGED
    endif
ENDRULE


// Populate ThermalZone exhuast fan properties based on proposed exhuast system
// inputs or define zone exhaust for baseline

// Zone exhaust fan efficiency
RULE NEW ThrmlZn:ExhFanFlowEff
  DATATYPE
    Float
  LONGFORM
    ExhaustFanFlowEff
  DESCRIPTION
    "The efficiency of the fan at design conditions."  
  HELP
    "This efficiency term includes belt/drive losses, but does not include 
     motor losses."
  INPUTCLASS
    NotInput   
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then // Use baseline assumptions
      if( LabArea > 0 )
      then 0.62
      else if( CommKitArea > 0 )
      then 0.5
      else 0.6 // Standard assumption for other systems
      endif endif
    else UNDEFINED // FlowEff defined at system components
    endif
  ANNUAL
    z:ExhFanFlowEff 
ENDRULE
// Zone exhaust fan total static pressure
RULE ThrmlZn:ExhTotStaticPress
  DESCRIPTION
    "The total static pressure drop across the exhaust fan at design conditions."  
  INPUTCLASS 
    NotInput
  UNITS
    inchesH2O
  DEFAULT
   if( IfValidAnd( ExhSysPwrIdx > 0 ) .AND.
       IfValidAnd( ExhTotEff > 0 ) )
    then ExhSysPwrIdx * ExhTotEff / 0.1175 
    else UNDEFINED
    endif  
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then // Use baseline assumptions
      if( LabArea > 0 )
      then // Lab system, based on # of stories
        if( Bldg:AboveGrdStoryCnt > 6 )
        then 4.5
        else 4
        endif
      else if( CommKitArea > 0 )
      then // Commerical kitchen system
        2.5
      else if( PrkgGarArea > 0 .AND. VentSrc = "Forced" )
      then // Parking garage system, 0.35 W/cfm, assume TotEff is 0.54
        0.35 * 0.54 / 0.1175
      else if( IsRes .AND. VentSrc = "Forced" )
      then // Residential space, 0.58 W/cfm, assume TotEff is 0.54
        0.58 * 0.54 / 0.1175
      else // Non-process exahust, use proposed or 1.0" if not defined
        ValidOr( u:ExhTotStaticPress, 1.0 ) 
      endif endif endif endif
    else u:ExhTotStaticPress
    endif
  ANNUAL
    if( ExhFlow > 0 .AND. PrkgGarArea > 0 .AND. ExhCtrlMthd = "COControl" )
    then z:ExhTotStaticPress * 0.125
    else z:ExhTotStaticPress
    endif
ENDRULE
// Zone exhaust fan motor BHP
RULE NEW ThrmlZn:ExhFanMtrBHP
  DATATYPE
    Float
  LONGFORM
    ExhaustFanMotorBrakeHorsePower
  DESCRIPTION
    "The design motor shaft brake horsepower of the exhaust fan."  
  HELP
    "The motor brake horse power is the power at the motor shaft, including fan
     and drive efficiencies." 
  INPUTCLASS
    NotInput 
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then // Use baseline assumptions
      ExhFlow * ExhTotStaticPress * ( 0.1175 / 745.6 ) / ExhFanFlowEff  
    else UNDEFINED // Exhaust system MtrBHP defined at system components
    endif
  ANNUAL
    z:ExhFanMtrBHP
ENDRULE
// Zone exhaust fan motor HP
RULE NEW ThrmlZn:ExhFanMtrHP
  DATATYPE
    Float
  LONGFORM
    ExhaustFanMotorHorsePower
  DESCRIPTION
    "The motor nameplate horsepower of the exhaust fan."
  INPUTCLASS
    NotInput  
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then // Use baseline assumptions
      StdElecMtrSize:MotorHPValue("InputMotorHP", ExhFanMtrBHP) 
    else UNDEFINED // Exhaust system MtrBHP defined at system components
    endif
  ANNUAL
    z:ExhFanMtrHP
ENDRULE
// Zone exhaust fan motor performance index, for determining motor efficiency
// Only used for system process exhaust spaces 
RULE NEW ThrmlZn:ExhFanMtrPerfIdx
  DATATYPE
    Integer
  LONGFORM
    ExhaustFanMotorPerformanceIndex
  DESCRIPTION
    "The index of motor size according to a list of standard sizes."
  INPUTCLASS
    NotInput
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then // Use baseline assumptions
      StdElecMtrSize:MotorHPIndex("InputMotorHP", ExhFanMtrHP)
    else UNDEFINED // Exhaust system MtrBHP defined at system components
    endif
  ANNUAL
    z:ExhFanMtrPerfIdx
ENDRULE
// Zone exhaust fan motor efficiency
RULE NEW ThrmlZn:ExhFanMtrEff
  DATATYPE
    Float
  LONGFORM
    ExhaustFanMotorEfficiency
  DESCRIPTION
    "Indicates how well the motor converts electrical power into mechanical power
     and is defined as output power divided by input power expressed as a ratio."
  INPUTCLASS
    NotInput
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then // Use baseline assumptions
      if( ( LabArea + PrkgGarArea + CommKitArea ) > 0 )
      then // Is a covered process exhaust system
        StdElecMtrPerf:MotorEfficiency("MotorHPIndex", ExhFanMtrPerfIdx) 
      else // Use default assumption for simulating general exhaust, 60% fan, 90% motor
        0.90  
      endif
    else UNDEFINED // Exhaust system MtrBHP defined at system components
    endif 
  ANNUAL
    z:ExhFanMtrEff
ENDRULE
// Zone exhaust fan total efficiency
RULE ThrmlZn:ExhTotEff
  DESCRIPTION
    "The total efficiency of the fan. It is the product of the flow (fan) and 
     motor efficiency, for simulation."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( ExhFlow > 0 )
    then 0.54 // Default assumption for simulation, 60% fan, 90% motor
    else UNDEFINED
    endif 
  SIZING
    if( BaseSysNum > 0 .AND. IsNewExh != 0 .AND. ExhFlow > 0 )
    then ExhFanFlowEff * ExhFanMtrEff
    else u:ExhTotEff
    endif
  ANNUAL
    z:ExhTotEff
ENDRULE
// Total zone exhaust fan power
RULE NEW ThrmlZn:ExhSysPwr
  DATATYPE
    Float
  LONGFORM
    ExhaustSystemPower
  INPUTCLASS
    NotInput
  UNITS
    kW
  DEFAULT
    if( LocalCompAssigned( ExhSysRef ) = ComponentType( "AirSys" ) )
    then // Is an AirSys, and may have supply and exhaust fans for total exhaust system
      ValidOr( ExhSysRef:SupFanPwr, 0 ) + ValidOr( ExhSysRef:ExhFanPwr, 0 )
    else if( LocalCompAssigned( ExhSysRef ) = ComponentType( "ZnSys" ) )
    then // Is a ZnSys
      ValidOr( ExhSysRef:FanPwr, 0 )
    else 0
    endif endif
  CHECKSIM
    if( ExhFlow > 0 .AND. LocalCompAssigned( ExhSysRef ) .AND. ExhSysPwr = 0 )
    then // Zone exhaust flow is > 0 cfm but there is no exhuast fan power
      PostError("ThermalZone '%s' has a design exhaust flow > 0, but the
                 system fan power of exhaust system '%s' is 0.",
                 Name, ExhSysRef:Name)
    else UNCHANGED
    endif
  ANNUAL
    if( ExhFlow > 0 .AND. 
        IfValidAnd( ExhTotEff > 0 ) .AND.
        IfValidAnd( ExhTotStaticPress > 0 ) )
    then ExhFlow * ExhTotStaticPress * 0.1175 / ExhTotEff / 1000
    else 0
    endif
ENDRULE
// Total zone exhaust fan power per flow
RULE NEW ThrmlZn:ExhSysPwrIdx
  DATATYPE
    Float
  LONGFORM
    ExhaustSystemPowerIndex
  DESCRIPTION
    "The exhaust fan power, in Watts, per unit of flow, in CFM"  
  INPUTCLASS
    NotInput
  UNITS
    W/cfm
  DEFAULT
    if( IfValidAnd( ExhSysFlow > 0 ) )
    then ExhSysPwr * 1000 / ExhSysFlow
    else UNDEFINED
    endif
  ANNUAL
    if( ExhFlow > 0 )
    then ExhSysPwr * 1000 / ExhFlow
    else UNDEFINED
    endif
ENDRULE


// ---------- Simulation Properties --------------------------------------------
RULE ThrmlZn:ExhFanName
  DESCRIPTION
    "The name of the zone exhaust fan, used for simulation. In E+, the name of
     the Fan:ZoneExhaust component."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( ExhFlow > 0 )
    then Format("%s PropExhFan", Name)
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( ExhFlow > 0 )
    then Format("%s PropExhFan", Name)
    else UNDEFINED
    endif 
  SIZING_BASELINE
    if( ExhFlow > 0 )
    then Format("%s BaseExhFan", Name)
    else UNDEFINED
    endif  
  ANNUAL
    z:ExhFanName
ENDRULE
RULE ThrmlZn:ExhFlowSim
  DESCRIPTION
    "The maximum air flow rate of the exhaust fan at design conditions, for simulation."    
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( ExhFlow > 0 )
    then ExhFlow * Mult
    else UNDEFINED
    endif
  SIZING
    if( ExhFlow > 0 )
    then ExhFlow * Mult
    else UNDEFINED
    endif
  ANNUAL
    z:ExhFlowSim 
ENDRULE



 