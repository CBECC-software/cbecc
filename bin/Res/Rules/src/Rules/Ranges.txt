;-------------------------------------------------------------------------
; Table of Building Database Minimum and Maximum Values
;-------------------------------------------------------------------------
; CEC Title-24 Residential 2013
; Compiled for the CEC by ...
; Modification History:
;    Aug 19, 2011 - Scott Criswell - skeleton ruleset setup
;-------------------------------------------------------------------------
;
; Table Format:
;    <bldg component name>:<parameter name>([<array index>]) <condition>
;          <value -or- <bldg component name>:<parameter name>([<array index>])>,
;          <cond2>, <ERROR/WARNING/MESSAGE>, <message>
;
;    <bldg component name> : name of building component which the parameter
;          describes.
;
;    <parameter name> : name of parameter for which datatype data is provided.
;
;    <array index> : only provided for building parameters which are
;          defined by an array of values.  The array index is either a 1-based
;          index into the array of values, or "ALL" implies the range check
;          data is to be applied to all elements in the array.
;
;    <condition> : Valid options include =, <=, >=, < and >.
;
;    <value> : Fixed value to check against.
;
;    <cond2> : Defines a condition which must evaluate to TRUE in order for this
;          range check to be performed.  <cond2> should be set to either "None"
;          or a collection of all the above variables.
;
;    <ERROR/WARNING/MESSAGE> : Valid keywords are ERROR, WARNING and
;          MESSAGE.  Ruleset defined ERRORs, WARNINGs and MESSAGEs are
;          presented to the user via dialog boxes and are also outputted
;          to the compliance project log.  ERRORs and WARNINGs are also
;          outputted to the compliance results files for review by users
;          and ruleset authorities.  ERRORs prevent the completion of the
;          compliance processing.
;
;    <message> : Brief explanation of this error, warning or message.
;
;    Note: Input is checked against these limits in the order provided
;          here, which means that ERRORs should come before WARNINGs
;
;-------------------------------------------------------------------------


;-------------------------------------------------------------------------
; Proj Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
; SAC 5/5/13 - removed since no way to allow user to enter 0 to (intentionally) remove credit already entered
;Proj:PVRatedPower     >=     2,             None,    ERROR, "Rated power of photovoltaic system must be >= 2 kWdc"
Proj:PVRatedPower     >=     0,             None,    ERROR, "Rated power of photovoltaic system cannot be < 0 kWdc"

Proj:DRtgLtgReduction >=     0,             None,    ERROR, "Design rating lighting percent reduction cannot be < 0 %"
Proj:DRtgLtgReduction <    100,             None,    ERROR, "Design rating lighting percent reduction cannot be >= 100 %"

Proj:ACH50            >=   0.5,             None,    ERROR, "ACH50 (air changes per hour @ 50 pascals (Pa) of pressure) must be >= 0.5."

; SAC 12/28/15 - replacement inputs for AdditionCFAFrac
Proj:AddAloneExistArea  >=   0,             None,    ERROR, "Existing home/project area (for addition alone analysis) cannot be < 0"
Proj:AddAloneAddedArea  >=   0,             None,    ERROR, "Addition area (excluding existing home/project area for addition alone analysis) cannot be < 0"

Proj:PVWDCSysSize[ALL]    >=  0,        None,    ERROR, "DC system size must be >= 0." 
Proj:PVWSysLosses[ALL]    >   0,        None,    ERROR, "PV system losses must be > 0%."  
Proj:PVWSysLosses[ALL]    < 100,        None,    ERROR, "PV system losses must be < 100%."  
Proj:PVWInverterEff[ALL]  >   0,        None,    ERROR, "Inverter efficiency must be > 0%."  
Proj:PVWInverterEff[ALL]  < 100,        None,    ERROR, "Inverter efficiency must be < 100%."  
Proj:PVWArrayTiltPitch[ALL] >=  0,      None,    ERROR, "PV array tilt (pitch) must be >= 0."  
Proj:PVWArrayTiltDeg[ALL]   >=  0,      None,    ERROR, "PV array tilt (degrees) must be >= 0."  
Proj:PVWArrayTiltDeg[ALL]   <= 90,      None,    ERROR, "PV array tilt (degrees) must be <= 90."  
Proj:PVWAzm[ALL]          >=  0,        None,    ERROR, "PV array azimuth must be >= 0deg."  
Proj:PVWAzm[ALL]          < 360,        None,    ERROR, "PV array azimuth must be < 360deg."  
Proj:PVWCoverRefrInd[ALL] >=  1,        None,    ERROR, "PV array cover glazing refractive index must be >= 1."
Proj:PVWCoverRefrInd[ALL] <   4,        None,    WARNING, "PV array cover glazing refractive index is typically < 4."
Proj:PVWTempCoeff[ALL]    >= -0.005     None,    WARNING, "PV array temperature coefficient is typically >= -0.005."
Proj:PVWTempCoeff[ALL]    <=  0.005     None,    WARNING, "PV array temperature coefficient is typically <= 0.005."

Proj:UnitCount[ALL]           >=  0,        None,    ERROR, "Dwelling unit count must be >= 0."
Proj:UnitNumBedrooms[ALL]     >=  0,        None,    ERROR, "Dwelling unit number of bedrooms must be >= 0."
Proj:UnitCondFlrArea_Liv[ALL] >=  0,        None,    ERROR, "Dwelling unit conditioned living area must be >= 0."
Proj:UnitCondFlrArea_Slp[ALL] >=  0,        None,    ERROR, "Dwelling unit conditioned sleeping area must be >= 0."
Proj:UnitCondFlrArea[ALL]     >=  0,        None,    ERROR, "Dwelling unit conditioned floor area must be >= 0."

; Proj:UnitIAQCFM[1]    >=   Proj:UnitMinIAQCFM[1] ,  Proj:UnitMinIAQCFM[1]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[2]    >=   Proj:UnitMinIAQCFM[2] ,  Proj:UnitMinIAQCFM[2]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[3]    >=   Proj:UnitMinIAQCFM[3] ,  Proj:UnitMinIAQCFM[3]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[4]    >=   Proj:UnitMinIAQCFM[4] ,  Proj:UnitMinIAQCFM[4]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[5]    >=   Proj:UnitMinIAQCFM[5] ,  Proj:UnitMinIAQCFM[5]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[6]    >=   Proj:UnitMinIAQCFM[6] ,  Proj:UnitMinIAQCFM[6]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[7]    >=   Proj:UnitMinIAQCFM[7] ,  Proj:UnitMinIAQCFM[7]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[8]    >=   Proj:UnitMinIAQCFM[8] ,  Proj:UnitMinIAQCFM[8]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[9]    >=   Proj:UnitMinIAQCFM[9] ,  Proj:UnitMinIAQCFM[9]  > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[10]   >=   Proj:UnitMinIAQCFM[10],  Proj:UnitMinIAQCFM[10] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[11]   >=   Proj:UnitMinIAQCFM[11],  Proj:UnitMinIAQCFM[11] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[12]   >=   Proj:UnitMinIAQCFM[12],  Proj:UnitMinIAQCFM[12] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[13]   >=   Proj:UnitMinIAQCFM[13],  Proj:UnitMinIAQCFM[13] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[14]   >=   Proj:UnitMinIAQCFM[14],  Proj:UnitMinIAQCFM[14] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[15]   >=   Proj:UnitMinIAQCFM[15],  Proj:UnitMinIAQCFM[15] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
; Proj:UnitIAQCFM[16]   >=   Proj:UnitMinIAQCFM[16],  Proj:UnitMinIAQCFM[16] > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."


;-------------------------------------------------------------------------
; DwellUnitType Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
DwellUnitType:NumHeatEquipTypes >= 1,		DwellUnitType:HVACSysType = 1,		ERROR,	"Number of unique heating unit types must be > 0 for HVACSysType = 'Other Heating and Cooling System'."
DwellUnitType:NumHeatEquipTypes >= 1,		DwellUnitType:HVACSysType = 3,		ERROR,	"Number of unique heating unit types must be > 0 for HVACSysType = 'Variable Outdoor Air Ventilation Central Heat/Cool System'."
DwellUnitType:NumHeatEquipTypes >= 0,		None,		ERROR,	"Number of unique heating unit types cannot be negative."
DwellUnitType:NumHeatEquipTypes <= 5,		None,		ERROR,	"Number of unique heating unit types must be <= 5."

DwellUnitType:NumHtPumpEquipTypes >= 1,	DwellUnitType:HVACSysType = 2,		ERROR,	"Number of unique heat pump unit types must be > 0 for HVACSysType = 'Heat Pump Heating and Cooling System'."
DwellUnitType:NumHtPumpEquipTypes >= 0,	None,		ERROR,	"Number of unique heat pump unit types cannot be negative."
DwellUnitType:NumHtPumpEquipTypes <= 5,	None,		ERROR,	"Number of unique heat pump unit types must be <= 5."

DwellUnitType:NumCoolEquipTypes >= 1,		DwellUnitType:HVACSysType = 1,		ERROR,	"Number of unique cooling unit types must be > 0 for HVACSysType = 'Other Heating and Cooling System'."
DwellUnitType:NumCoolEquipTypes >= 1,		DwellUnitType:HVACSysType = 3,		ERROR,	"Number of unique cooling unit types must be > 0 for HVACSysType = 'Variable Outdoor Air Ventilation Central Heat/Cool System'."
DwellUnitType:NumCoolEquipTypes >= 0,		None,		ERROR,	"Number of unique cooling unit types cannot be negative."
DwellUnitType:NumCoolEquipTypes <= 5,		None,		ERROR,	"Number of unique cooling unit types must be <= 5."

DwellUnitType:NumDHWSysTypes >= 1,			None,		ERROR,	"Number of unique DHW system types must be >= 1."  ; SAC 8/17/16 - switched from min of 0 to 1
DwellUnitType:NumDHWSysTypes <= 5,			None,		ERROR,	"Number of unique DHW system types must be <= 5."

DwellUnitType:DHWTankVolume  >= 1,        DwellUnitType:HtEqpUsedAsDHWHtr > 0,   ERROR,   "Air-to-water HP heater tank volume must be >= 1."		; SAC 6/16/16 - tic #661


;-------------------------------------------------------------------------
; DwellUnit Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------



;-------------------------------------------------------------------------
; Zone Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
Zone:NumStories       >=     1,   None,   ERROR, "Zone number of stories must be >= 1."
Zone:NumStories       <=     3,   None,   ERROR, "Zone number of stories must be <= 3."

Zone:CeilingHeight  >                   0,   None,                     ERROR, "Zone ceiling height must be > 0." 
Zone:FloorHeight    >  Zone:CeilingHeight,   Zone:CeilingHeight > 0,   ERROR, "Zone floor height must be > ceiling height." 


;-------------------------------------------------------------------------
; Attic Parameters
;-------------------------------------------------------------------------
;comp:param([idx])    cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
Attic:RoofRise         >=     0,   None,   ERROR, "Attic rise must be >= 0." 
Attic:RoofRise         <= 20.78,   None,   ERROR, "Attic roof rise must be <= 20.78 (= tilt of 60, above which the surface must be modeled as an exterior wall)."	; SAC 2/19/16
Attic:RoofSolReflect   >=     0,   None,   ERROR, "Attic roof solar reflectance must be >= 0." 
Attic:RoofSolReflect   <=     1,   None,   ERROR, "Attic roof solar reflectance must be <= 1." 
Attic:RoofEmiss        >=     0,   None,   ERROR, "Attic roof surface exterior long wave (thermal) emittance must be >= 0."
Attic:RoofEmiss        <=     1,   None,   ERROR, "Attic roof surface exterior long wave (thermal) emittance must be <= 1."


;-------------------------------------------------------------------------
; CrawlSpace Parameters
;-------------------------------------------------------------------------
;comp:param([idx])    cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
CrawlSpace:AvgWallHeight   >=   2,   None,   ERROR, "Crawl space height must be >= 2 ft."
CrawlSpace:Perimeter       >=  10,   None,   ERROR, "Crawl space perimeter must be >= 10 ft."


;-------------------------------------------------------------------------
; Mat(erial) Parameters
;-------------------------------------------------------------------------
;comp:param([idx])    cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
Mat:Thickness       >   0,    None,   ERROR, "Material thickness (inches) must be > 0."  
Mat:Density         >=  0,    None,   ERROR, "Material density must be >= 0."    
Mat:SpecHeat        >=  0,    None,   ERROR, "Material specific heat must be >= 0."   
Mat:Conductivity    >   0,    None,   ERROR, "Material conductivity must be > 0."  
Mat:ConductivityQII >   0,    None,   ERROR, "Material conductivity (QII) must be > 0."  
Mat:Resistance      >   0,    None,   ERROR, "Material resistance must be > 0." 
Mat:RValPerInch     >   0,    None,   ERROR, "Material R-value per inch must be > 0." 


;-------------------------------------------------------------------------
; ExtWall Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
	; SAC 5/24/12 - revised range check to ensure that (parent) net wall areas don't go negative (CBECCbug003 5/18/12)
ExtWall:Area  >   0,                      None,                       ERROR, "Exterior wall area must be > 0."
ExtWall:Area  >=  ExtWall:ChildAreaSum,   ExtWall:ChildAreaSum > 0,   ERROR, "Exterior wall area must be >= the sum of the areas of its child windows & doors."
ExtWall:Tilt  >   60,     None,   ERROR, "Exterior wall tilt must be > 60 (surfaces w/ tilts <= 60 should be described as cathedral ceilings)."		; SAC 2/19/16
ExtWall:Tilt  <  180,     None,   ERROR, "Exterior wall tilt must be < 180 (value of 180 used for floors)."
ExtWall:Absorptivity  >=     0,   None,   ERROR, "Exterior wall absorptivity must be >= 0."
ExtWall:Absorptivity  <=     1,   None,   ERROR, "Exterior wall absorptivity must be <= 1."
ExtWall:NetWallArea   >=     0,   None,   ERROR, "Net exterior wall area (wall area minus child window & door area) must be >= 0."

;-------------------------------------------------------------------------
; IntWall Parameters
;-------------------------------------------------------------------------
;comp:param([idx])   cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
IntWall:Area         >   0,   None,   ERROR, "Interior wall area must be greater than 0."
IntWall:Area  >=  IntWall:ChildAreaSum,   IntWall:ChildAreaSum > 0,   ERROR, "Interior wall area must be >= the sum of the areas of its child doors."
IntWall:NetWallArea  >=  0,   None,   ERROR, "Net interior wall area (wall area minus child door area) must be >= 0."

;-------------------------------------------------------------------------
; UndWall Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
UndWall:Area  >  0,   None,   ERROR, "Underground wall area must be greater than 0."

;-------------------------------------------------------------------------
; CathedralCeiling Parameters
;-------------------------------------------------------------------------
;comp:param([idx])            cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
CathedralCeiling:Area            >   0,   None,   ERROR, "Cathedral ceiling area must be greater than 0."
CathedralCeiling:RoofRise    >=      0,   None,   ERROR, "Cathedral ceiling roof rise must be >= 0."		; SAC 2/19/16
CathedralCeiling:RoofRise    <=  20.78,   None,   ERROR, "Cathedral ceiling roof rise must be <= 20.78 (= tilt of 60, above which the surface must be modeled as an exterior wall)."
CathedralCeiling:RoofSolReflect  >=  0,   None,   ERROR, "Cathedral ceiling solar reflectance must be >= 0." 
CathedralCeiling:RoofSolReflect  <=  1,   None,   ERROR, "Cathedral ceiling solar reflectance must be <= 1." 
CathedralCeiling:RoofEmiss       >=  0,   None,   ERROR, "Cathedral ceiling surface exterior long wave (thermal) emittance must be >= 0."
CathedralCeiling:RoofEmiss       <=  1,   None,   ERROR, "Cathedral ceiling surface exterior long wave (thermal) emittance must be <= 1."

;-------------------------------------------------------------------------
; CeilingBelowAttic Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
CeilingBelowAttic:Area  >  0,   None,   ERROR, "Ceiling (below attic) area must be greater than 0."

;-------------------------------------------------------------------------
; InteriorCeiling Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
InteriorCeiling:Area  >  0,   None,   ERROR, "Interior ceiling area must be greater than 0."

;-------------------------------------------------------------------------
; SlabFloor Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
SlabFloor:Area  >  0,   None,   ERROR, "Slab floor area must be greater than 0."

;-------------------------------------------------------------------------
; ExteriorFloor Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
ExteriorFloor:Area    >  0,                         None,   ERROR, "Exterior floor area must be greater than 0."
ExteriorFloor:FloorZ  >= ExteriorFloor:MinFloorZ,   None,   ERROR, "Exterior floor elevation must be greater than or equal to the bottom of the zone (or 0)."

;-------------------------------------------------------------------------
; FloorOverCrawl Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
FloorOverCrawl:Area    >  0,                          None,   ERROR, "Floor (over crawlspace) area must be greater than 0."
FloorOverCrawl:FloorZ  >= FloorOverCrawl:MinFloorZ,   None,   ERROR, "Floor (over crawlspace) elevation must be greater than or equal to the bottom of the zone (or 0)."

;-------------------------------------------------------------------------
; InteriorFloor Parameters
;-------------------------------------------------------------------------
;comp:param([idx])    cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
InteriorFloor:Area    >  0,                         None,   ERROR, "Interior floor area must be greater than 0."
InteriorFloor:FloorZ  >= InteriorFloor:MinFloorZ,   None,   ERROR, "Interior floor elevation must be greater than or equal to the bottom of the zone."

;-------------------------------------------------------------------------
; UndFloor Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
UndFloor:Area  >  0,   None,   ERROR, "Underground floor area must be greater than 0."


;-------------------------------------------------------------------------
; cseSURFACE Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
cseSURFACE:sfArea     >      0,   None,   ERROR, "Surface area must be > 0."
;cseSURFACE:sfTilt    
;cseSURFACE:sfAzm     
cseSURFACE:sfExAbs    >=     0,   None,   ERROR, "Surface exterior absorptivity must be >= 0."
cseSURFACE:sfExAbs    <=     1,   None,   ERROR, "Surface exterior absorptivity must be <= 1."


;-------------------------------------------------------------------------
; WindowType Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
WindowType:Height            >      0,   None,   ERROR, "WindowType height must be > 0."
WindowType:Width             >      0,   None,   ERROR, "WindowType width must be > 0."
WindowType:Area              >      0,   None,   ERROR, "WindowType area must be > 0."

WindowType:NFRCUfactor       >      0,   None,   ERROR, "WindowType NFRC U-factor must be > 0."
WindowType:NFRCSHGC          >      0,   None,   ERROR, "WindowType solar heat gain coefficient must be > 0."


;-------------------------------------------------------------------------
; Win Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
Win:Height            >      0,   None,   ERROR, "Window height must be > 0."
Win:Width             >      0,   None,   ERROR, "Window width must be > 0."
Win:Area              >      0,   None,   ERROR, "Window area must be > 0."
Win:Multiplier        >      0,   None,   ERROR, "Window multiplier must be > 0."

	; SAC 5/22/12 - added range checks to ensure that (parent) net wall areas don't go negative (CBECCbug003 5/18/12)
Win:Area        <=  Win:MaxArea,         Win:MaxArea       < 100000,   ERROR, "Window area must be smaller, as it is too large (window area x multiplier) to fit on its parent wall."
Win:Height      <=  Win:MaxHeight,       Win:MaxHeight     < 100000,   ERROR, "Window height must be smaller, as it is too large (window area x multiplier) to fit on its parent wall."
Win:Width       <=  Win:MaxWidth,        Win:MaxWidth      < 100000,   ERROR, "Window width must be smaller, as it is too large (window area x multiplier) to fit on its parent wall."
Win:Multiplier  <=  Win:MaxMultiplier,   Win:MaxMultiplier < 100000,   ERROR, "Window multiplier must be smaller, as it is too large (window area x multiplier) to fit on its parent wall."

Win:Multiplier        >      0,   None,   ERROR, "Window multiplier must be > 0."
Win:NFRCUfactor       >      0,   None,   ERROR, "Window NFRC U-factor must be > 0."
Win:NFRCSHGC          >      0,   None,   ERROR, "Window solar heat gain coefficient must be > 0."


;-------------------------------------------------------------------------
; Skylt Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
Skylt:Area              >      0,   None,   ERROR, "Skylight area must be > 0."

Skylt:Area        <=  Skylt:MaxArea,         Skylt:MaxArea       < 100000,   ERROR, "Skylight area must be smaller, as it is too large (skylight area x multiplier) to fit on its parent roof."
Skylt:Multiplier  <=  Skylt:MaxMultiplier,   Skylt:MaxMultiplier < 100000,   ERROR, "Skylight multiplier must be smaller, as it is too large (skylight area x multiplier) to fit on its parent roof."

Skylt:Multiplier        >      0,   None,   ERROR, "Skylight multiplier must be > 0."
Skylt:NFRCUfactor       >      0,   None,   ERROR, "Skylight NFRC U-factor must be > 0."
Skylt:NFRCSHGC          >      0,   None,   ERROR, "Skylight solar heat gain coefficient must be > 0."


;-------------------------------------------------------------------------
; cseWINDOW Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
cseWINDOW:wnHeight    >      0,   None,   ERROR, "Window height must be > 0."
cseWINDOW:wnWidth     >      0,   None,   ERROR, "Window width must be > 0."
cseWINDOW:wnArea      >      0,   None,   ERROR, "Window area must be > 0."
cseWINDOW:wnMult      >      0,   None,   ERROR, "Window multiplier must be > 0."
;cseWINDOW:wnFMult     
cseWINDOW:wnNGlz      >      0,   None,   ERROR, "Window number of glazing layers must be > 0."
cseWINDOW:wnUnfrc     >      0,   None,   ERROR, "Window NFRC U-factor must be > 0."
cseWINDOW:wnSHGC      >      0,   None,   ERROR, "Window solar heat gain coefficient must be > 0."
cseWINDOW:wnDirtLoss  >      0,   None,   ERROR, "Window dirt loss factor must be > 0."


;-------------------------------------------------------------------------
; Door Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
Door:Area             >      0,   None,   ERROR, "Door area must be > 0."    
Door:Ufactor          >      0,   None,   ERROR, "Door U-factor must be > 0."
Door:Ufactor          <   1.17,   None,   ERROR, "Door U-factor must be < 1.17."
	; SAC 5/24/12 - added range check to ensure that (parent) net wall areas don't go negative (CBECCbug003 5/18/12)
Door:Area  <=  Door:MaxArea,    Door:MaxArea < 100000,   ERROR, "Door area must be smaller, as it is too large to fit on its parent wall (given areas of all other windows/doors on wall)."


;-------------------------------------------------------------------------
; cseDOOR Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
cseDOOR:drArea        >      0,   None,   ERROR, "Door area must be > 0."
cseDOOR:drU           >      0,   None,   ERROR, "Door U-factor must be > 0."


;-------------------------------------------------------------------------
; HVACSys Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
HVACSys:NumHeatSystemTypes >=  1,	HVACSys:Type = 1,		ERROR,	"Number of unique heating unit types must be > 0 when HVACSys:Type = 'Other Heating and Cooling System'."
HVACSys:NumHeatSystemTypes >=  1,	HVACSys:Type = 3,		ERROR,	"Number of unique heating unit types must be > 0 when HVACSys:Type = 'Variable Outdoor Air Ventilation Central Heat/Cool System'."
HVACSys:NumHeatSystemTypes >=  0,	None,		ERROR,	"Number of unique heating unit types cannot be negative."
HVACSys:NumHeatSystemTypes <= 10,	None,		ERROR,	"Number of unique heating unit types must be <= 10."

HVACSys:NumCoolSystemTypes >=  1,	HVACSys:Type = 1,		ERROR,	"Number of unique cooling unit types must be > 0 when HVACSys:Type = 'Other Heating and Cooling System'."
HVACSys:NumCoolSystemTypes >=  1,	HVACSys:Type = 3,		ERROR,	"Number of unique cooling unit types must be > 0 when HVACSys:Type = 'Variable Outdoor Air Ventilation Central Heat/Cool System'."
HVACSys:NumCoolSystemTypes >=  0,	None,		ERROR,	"Number of unique cooling unit types cannot be negative."
HVACSys:NumCoolSystemTypes <= 10,	None,		ERROR,	"Number of unique cooling unit types must be <= 10."

HVACSys:NumHtPumpSystemTypes >=  1,	HVACSys:Type = 2,		ERROR,	"Number of unique heat pump unit types must be > 0 when HVACSys:Type = 'Heat Pump Heating and Cooling System'."
HVACSys:NumHtPumpSystemTypes >=  0,	None,		ERROR,	"Number of unique heat pump unit types cannot be negative."
HVACSys:NumHtPumpSystemTypes <= 10,	None,		ERROR,	"Number of unique heat pump unit types must be <= 10."

HVACSys:DHWTankVolume        >= 1,  HVACSys:CanBeDHWHtr > 0,   ERROR,   "Air-to-water HP heater tank volume must be >= 1."		; SAC 6/16/16 - tic #661


;-------------------------------------------------------------------------
; HVACHeat Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
HVACHeat:AFUE           >    0,		HVACHeat:DisplayAFUE > 0,		ERROR,	"Heat equipment AFUE must be > 0."
HVACHeat:AFUE           <= 100,		HVACHeat:DisplayAFUE > 0,		ERROR,	"Heat equipment AFUE must be <= 100."
HVACHeat:CHRecoveryEff  >    0,		None,		ERROR,	"Combined hydronic recovery efficiency must be > 0."


;-------------------------------------------------------------------------
; HVACHtPump Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
;HVACHtPump:CFMperTon   >=    150,		HVACHtPump:IsZonal > 0,		ERROR,	"CFM / ton must be >= 150 (for zonal systems)."
;HVACHtPump:CFMperTon   >=    350,		HVACHtPump:IsZonal < 1,		ERROR,	"CFM / ton must be >= 350 (for non-zonal systems)."
HVACHtPump:CFMperTon   >=    100,		None,								ERROR,	"CFM / ton must be >= 100."
HVACHtPump:CFMperTon   <=    600,		None,								ERROR,	"CFM / ton must be <= 600."

HVACHtPump:Cap47       >       0,      None,                      ERROR,	"Heat pump Cap47 must be > 0."
HVACHtPump:Cap17       >       0,      None,                      ERROR,	"Heat pump Cap17 must be > 0."

; SAC 1/8/16 - added code vintage-specific values for SEER & EER input range check warnings
; SAC 1/13/16 - removed check for heat pumps, since this requirement is NOT based on INSTALLED DATE (which is the focus of the CEC request to add it)
; HVACHtPump:SEER   >=  HVACHtPump:MinSEER_1501,	HVACHtPump:MinSEER_1501 > 0,	WARNING,		"Heat pumps installed after Jan 1, 2015, cannot have SEER below 14."


;-------------------------------------------------------------------------
; HVACCool Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
;HVACCool:CFMperTon   >=    150,		HVACCool:IsZonal > 0,		ERROR,	"CFM / ton must be >= 150 (for zonal systems)."    
;HVACCool:CFMperTon   >=    350,		HVACCool:IsZonal < 1,		ERROR,	"CFM / ton must be >= 350 (for non-zonal systems)."
HVACCool:CFMperTon   >=    100,		None,								ERROR,	"CFM / ton must be >= 100."
HVACCool:CFMperTon   <=    600,		None,								ERROR,	"CFM / ton must be <= 600."

; SAC 1/8/16 - added code vintage-specific values for SEER & EER input range check warnings
HVACCool:SEER   >=  HVACCool:MinSEER_Split1501,		HVACCool:MinSEER_Split1501 > 0,		WARNING,		"Split System air conditioners installed after Jan 1, 2015, cannot have SEER below 14."
HVACCool:SEER   >=  HVACCool:MinSEER_Pckg1501,		HVACCool:MinSEER_Pckg1501 > 0,		WARNING,		"Packaged air conditioners installed after Jan 1, 2015, cannot have SEER below 14."
HVACCool:EER    >=  HVACCool:MinEER_Split1501,		HVACCool:MinEER_Split1501 > 0,		WARNING,		"Split System air conditioners installed after Jan 1, 2015, cannot have EER below 12.2 for < 45 kBtuh capacity, and 11.7 for >= 45 kBtuh."
HVACCool:EER    >=  HVACCool:MinEER_Pckg1501,		HVACCool:MinEER_Pckg1501 > 0,			WARNING,		"Packaged air conditioners installed after Jan 1, 2015, cannot have EER below 11."


;-------------------------------------------------------------------------
; HVACDist Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
HVACDist:DuctLeakageVal  >=  0.1,    None,    ERROR,    "Duct leakage must be >= 0.1%."
HVACDist:DuctLeakageVal  <  90,    None,    ERROR,    "Duct leakage must be < 90%."
; HVACDist:DuctLeakageVal  <=  6,    None,    ERROR,    "Duct leakage must be <= 6%."


;-------------------------------------------------------------------------
; IAQFan Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
; IAQFan:IAQCFM       >=   IAQFan:MinIAQCFM,  IAQFan:MinIAQCFM > 0,   ERROR,   "Indoor Air Quality CFM must be equal or greater than the calculated minimum."
IAQFan:IAQCFM          >    0,  None,   ERROR,   "Indoor Air Quality CFM must be greater than 0." 
IAQFan:IAQRecovEffect  <  100,  None,   ERROR,   "Indoor Air Quality recovery effectiveness must be <= 100 %" 


;-------------------------------------------------------------------------
; ClVentFan Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
ClVentFan:WperCFMCool  >=  0,    Proj:EnableClVent > 0,    ERROR,   "Cooling ventilation fan power must be >= 0." 
ClVentFan:CoolingVent  >   0,    Proj:EnableClVent > 0,    ERROR,   "Cooling ventilation fan flow must be > 0." 


;-------------------------------------------------------------------------
; DHWSys Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
DHWSys:HeaterMult   >=  0,    None,    ERROR,    "DHW Heater multiplier must be >= 0."

; DHWSys:RecircPumpHP   >  0,   DHWSys:MFamDistType > 0,    ERROR,    "DHW recirculation pump horsepower must be > 0."    -- moved to Rules in order to include all necessary conditions of range check
; DHWSys:RecircPumpEff  >  0,   DHWSys:MFamDistType > 0,    ERROR,    "DHW recirculation pump efficiency must be > 0."
DHWSys:RecircPumpEff  <= 1,   DHWSys:MFamDistType > 0,    ERROR,    "DHW recirculation pump efficiency must be <= 1."

DHWSys:NRecircLoops   >= 1,   DHWSys:CentralDHW > 0,      ERROR,    "Number of recirculation loops must be >= 1."

; DHWSys:RecircPipeLen[ALL]  >  0,   DHWSys:UseDefaultLoops < 0.5,    ERROR,    "DHW recirculation pipe length must be > 0."    -- moved to Rules in order to include all necessary conditions of range check
; DHWSys:RecircPipeDia[ALL]  >  0,   DHWSys:UseDefaultLoops < 0.5,    ERROR,    "DHW recirculation pipe diameter must be > 0."

; SAC 1/4/16 - added cap on solar fractions of 0.75 (tic 587) - SAC 1/5/16 - revised to < 1
DHWSys:SolFracAnn       >=  0,    DHWSys:SolFracType = 1,  ERROR,   "DHW system annual solar fraction must be >= 0."
DHWSys:SolFracAnn       <   1,    DHWSys:SolFracType = 1,  ERROR,   "DHW system annual solar fraction must be < 1."
DHWSys:SolFracMon[ALL]  >=  0,    DHWSys:SolFracType = 2,  ERROR,   "DHW system monthly solar fractions must all be >= 0."
DHWSys:SolFracMon[ALL]  <   1,    DHWSys:SolFracType = 2,  ERROR,   "DHW system monthly solar fractions must all be < 1."


;-------------------------------------------------------------------------
; DHWHeater Parameters
;-------------------------------------------------------------------------
;comp:param([idx])  cond  val-or-c:p([i]),  cond2,   type, message
;-------------------------------------------------------------------------
DHWHeater:RecovEff  >    0,    DHWHeater:HeaterElementType != 3,	ERROR,	"Water heater recovery efficiency must be > 0."
DHWHeater:RecovEff  >    2,    DHWHeater:RecovEffActive > 0,	 	ERROR,	"Water heater recovery efficiency (%) must be entered as a percent (> 2)."
DHWHeater:RecovEff  <= 100,    DHWHeater:CanBeCHWHeater > 0,       ERROR,	"Water heater recovery efficiency must be <= 100."
;DHWHeater:StandbyLossFrac > 0,  DHWHeater:TankType = 2,  ERROR,  "Water Heater Standby Loss must be > 0."
DHWHeater:StandbyLossFrac  > 0,  DHWHeater:TankType = 3,  ERROR,  "Water Heater Standby Loss must be > 0."
DHWHeater:EnergyFactor >= 2.0,  	DHWHeater:HPWHEFRange > 0,  ERROR,  "HPWH Energy Factor must be >= 2."
DHWHeater:EnergyFactor <= 3.5,  	DHWHeater:HPWHEFRange > 0,  ERROR,  "HPWH Energy Factor must be <= 3.5."
DHWHeater:TankVolume  >= 1,      DHWHeater:TankVolumeRange > 0,  ERROR,  "Water heater tank volume must be >= 1."		; SAC 6/16/16 - tic #661


