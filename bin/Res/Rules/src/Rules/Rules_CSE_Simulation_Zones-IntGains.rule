; -------------------------------------------------------------------------
; Rules pertaining to:   Setup Zone and Internal Gains objects for CSE Energy Simulation
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2014, California Energy Commission
; Copyright (c) 2012-2014, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------


;*************************************************************************
RULELIST "CSE_SimulationPrep_Zones_IntGains" 1 0 0 1
;*************************************************************************

; SAC 9/7/12 - removed old attic diode via GAIN w/ simpler version using IZXFER
;	"Blast Proj:BypassAtticMETER"			Proj:BypassAtticMETER	= {	if (LocalCompAssigned( BypassAtticMETER )) then  DeleteComp()  else  UNCHANGED  endif  }
;	"Blast Zone:BypassAtticGAIN"			Zone:BypassAtticGAIN		= {	if (LocalCompAssigned( BypassAtticGAIN  )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast Zone:CSE_ZONE"					Zone:CSE_ZONE				= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast Garage:CSE_ZONE"					Garage:CSE_ZONE			= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast Attic:CSE_ZONE"					Attic:CSE_ZONE				= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast CrawlSpace:CSE_ZONE"			CrawlSpace:CSE_ZONE		= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }


 ; CSE ZONE (conditioned/living zones) creation & defaulting
	"Create new Zone:CSE_ZONE"  				Zone:CSE_ZONE						= {	CreateComp( cseZONE, Local( Name ) + "-zn" )  }

	"Default Zone:CSE_ZONE:SourceZone"  	Zone:CSE_ZONE:SourceZone		= {	Local( Name 				)  }
	"Default Zone:CSE_ZONE:znModel"      	Zone:CSE_ZONE:znModel     	= {	if (LocalStatus( ZnModel       ) > 0) then  Local( ZnModel 		)  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znArea"       	Zone:CSE_ZONE:znArea      	= {	if (LocalStatus( FloorArea     ) > 0) then  Local( FloorArea 		)  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znVol"        	Zone:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume        ) > 0) then  Local( Volume 			)  else  UNDEFINED  endif  }
		; SAC 5/22/12 - CBECCbug002 from BW 5/18 re: znEaveZ set to Bottom rather than Bottom + CeilingHeight
		; SAC 9/12/12 - another update to this setting from Bruce --> ZoneBotZ + (FloortoFloor(zone)*(NumofStories(zone)-1)) + CeilingHeight
;	"Default Zone:CSE_ZONE:znEaveZ"     	Zone:CSE_ZONE:znEaveZ    	= {	if (LocalStatus( Bottom ) > 0 .AND. LocalStatus( CeilingHeight ) > 0) then  Bottom + CeilingHeight  else  UNDEFINED  endif  }
;	"Default Zone:CSE_ZONE:znEaveZ"     	Zone:CSE_ZONE:znEaveZ    	= {	Bottom + (FloorHeight * (NumStories - 1)) + CeilingHeight  }
	"Default Zone:CSE_ZONE:znEaveZ"     	Zone:CSE_ZONE:znEaveZ    	= {	if (LocalStatus( Top ) > 0 .AND. Top > 0) then  Top
																									else  Bottom + (FloorHeight * (NumStories - 1)) + CeilingHeight  endif  }
	"Prevent invalid Zone:CSE_ZONE:znEaveZ"  Zone:CSE_ZONE:znEaveZ    = {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }

	"Default Zone:CSE_ZONE:znCeilingHt"  	Zone:CSE_ZONE:znCeilingHt 	= {	if (LocalStatus( CeilingHeight ) > 0) then  Local( CeilingHeight )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znFloorZ"     	Zone:CSE_ZONE:znFloorZ     = {	if (LocalStatus( Bottom        ) > 0) then  Local( Bottom        )  else  UNDEFINED  endif  }  ; SAC 3/28/13
	"Default Zone:CSE_ZONE:znCAir"       	Zone:CSE_ZONE:znCAir      	= {	if (LocalStatus( ZnCAir        ) > 0) then  Local( ZnCAir 		  )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znAzm"        	Zone:CSE_ZONE:znAzm       	= {	if (LocalStatus( ZnAzm         ) > 0) then  Local( ZnAzm 		  )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znSC"         	Zone:CSE_ZONE:znSC        	= {	if (LocalStatus( ZnSC          ) > 0) then  Local( ZnSC 			  )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znSC_x"        	Zone:CSE_ZONE:znSC_x      	= {	if (Type == 10 .OR. LocalStatus( ZnSC ) > 0) then  UNDEFINED
																									else  Format( "select( $radDiff >1., %g, default %g )", 0.5, 0.8 )  endif  }
			; znModel = CZM -
		;	thermostat setpoints
	; SAC 7/2/15 - new rule and revisions to subsequent rules to enable include file-defined thermostat schedules
	"Set cseZONE:IncludeFile (replacing thermostat setpoint properties)"
				Zone:CSE_ZONE:IncludeFile	= {	if (UseTstatIncFile > 0.5) then  TstatIncludeFile  else  UNDEFINED  endif  }

; change setpoint schedules for design rating   mjb  RESNET 02/12/16
	"Reset Zone:CoolTDaySched for Design Rating model"
			Zone:CoolTDaySched		= {	if (Proj:DRtgRefRunID == 2014) then  RuleLibrary( SchDay, "RESNET SZ Cool Hrly" )
															else  UNCHANGED   endif  }
	"Reset Zone:HeatTDaySched for Design Rating model"
			Zone:HeatTDaySched		= {	if (Proj:DRtgRefRunID == 2014) then  RuleLibrary( SchDay, "RESNET SZ Heat Hrly" )
															else  UNCHANGED   endif  }

	; SAC 1/3/13 - updated t-stat schedules to include design sizing schedule data
	; SAC 5/13/13 - updated t-stat schedules to reference constant heating t-stat temperatures
	"Setup heating setpoint profile CSE export string (Zone:HeatTDaySched_CSE)"															
				Zone:HeatTDaySched_CSE	= {	if (UseTstatIncFile > 0.5) then  " "
														else if (ConstHtgSetpt > 0)
														then	Format( "select( $dsDay==1, 70, $dsDay==2, 60, ISSEASONCOOLING, %g, default %g) ", SummerHeatTemp, ConstHtgSetpt )
														else if (LocalCompAssigned( HeatTDaySched ))
												;	then  Format( "select( @weather.taDbAvg07 >60., %g, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)) ",
													then  Format( "select( $dsDay==1, 70, $dsDay==2, 60, ISSEASONCOOLING, %g, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)) ",
																SummerHeatTemp,
																LocalRef( HeatTDaySched:Hr[1]  ), LocalRef( HeatTDaySched:Hr[2]  ), LocalRef( HeatTDaySched:Hr[3]  ), LocalRef( HeatTDaySched:Hr[4]  ),
																LocalRef( HeatTDaySched:Hr[5]  ), LocalRef( HeatTDaySched:Hr[6]  ), LocalRef( HeatTDaySched:Hr[7]  ), LocalRef( HeatTDaySched:Hr[8]  ),
																LocalRef( HeatTDaySched:Hr[9]  ), LocalRef( HeatTDaySched:Hr[10] ), LocalRef( HeatTDaySched:Hr[11] ), LocalRef( HeatTDaySched:Hr[12] ),
																LocalRef( HeatTDaySched:Hr[13] ), LocalRef( HeatTDaySched:Hr[14] ), LocalRef( HeatTDaySched:Hr[15] ), LocalRef( HeatTDaySched:Hr[16] ),
																LocalRef( HeatTDaySched:Hr[17] ), LocalRef( HeatTDaySched:Hr[18] ), LocalRef( HeatTDaySched:Hr[19] ), LocalRef( HeatTDaySched:Hr[20] ),
																LocalRef( HeatTDaySched:Hr[21] ), LocalRef( HeatTDaySched:Hr[22] ), LocalRef( HeatTDaySched:Hr[23] ), LocalRef( HeatTDaySched:Hr[24] ) )
													else  " "  endif endif endif  }
	"Setup cooling setpoint profile CSE export string (Zone:CoolTDaySched_CSE)"
				Zone:CoolTDaySched_CSE	= {	if (UseTstatIncFile > 0.5) then  " "
														else if (LocalCompAssigned( CoolTDaySched ))
												;	then  Format( "select( @weather.taDbAvg07 >60., hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g), default %g)",
													then  Format( "select( $dsDay==1, 83, $dsDay==2, 78, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g))",
																LocalRef( CoolTDaySched:Hr[1]  ), LocalRef( CoolTDaySched:Hr[2]  ), LocalRef( CoolTDaySched:Hr[3]  ), LocalRef( CoolTDaySched:Hr[4]  ),
																LocalRef( CoolTDaySched:Hr[5]  ), LocalRef( CoolTDaySched:Hr[6]  ), LocalRef( CoolTDaySched:Hr[7]  ), LocalRef( CoolTDaySched:Hr[8]  ),
																LocalRef( CoolTDaySched:Hr[9]  ), LocalRef( CoolTDaySched:Hr[10] ), LocalRef( CoolTDaySched:Hr[11] ), LocalRef( CoolTDaySched:Hr[12] ),
																LocalRef( CoolTDaySched:Hr[13] ), LocalRef( CoolTDaySched:Hr[14] ), LocalRef( CoolTDaySched:Hr[15] ), LocalRef( CoolTDaySched:Hr[16] ),
																LocalRef( CoolTDaySched:Hr[17] ), LocalRef( CoolTDaySched:Hr[18] ), LocalRef( CoolTDaySched:Hr[19] ), LocalRef( CoolTDaySched:Hr[20] ),
																LocalRef( CoolTDaySched:Hr[21] ), LocalRef( CoolTDaySched:Hr[22] ), LocalRef( CoolTDaySched:Hr[23] ), LocalRef( CoolTDaySched:Hr[24] ),
																Local(WinterCoolTemp) )
													else  " "  endif endif  }
		
; SAC 12/10/12 - revised to reference new HVACHeat:ConstHtgSetpt
	"Zone:CSE_ZONE:znTH"         	Zone:CSE_ZONE:znTH        	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																						else if (LocalStatus( ZnTH ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTH        )
																						else  UNDEFINED  endif endif  }
; SAC 5/13/13 - removed references to ConstHtgSetpt here - this now used in assembly of t-stat schedule...
;																						else if (ZnModel == 3 .AND. LocalCompAssigned( ActiveHVACSystem ))
;																						then	if (ActiveHVACSystem:HeatSystem:DisplayHPData > 0.5 .AND.
;																									 ActiveHVACSystem:HeatSystem:ConstHtgSetpt > 0)
;																								then	ActiveHVACSystem:HeatSystem:ConstHtgSetpt
;																								else  UNDEFINED  endif
;																						else  UNDEFINED  endif endif  }
; SAC 8/30/12 - modified to prevent output of thermostat setpoint expression if fixed setpoint (above) already defined (or if CSE zone model not = 'CZM')
	"Default Zone:CSE_ZONE:znTH_x"        	Zone:CSE_ZONE:znTH_x      	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if ( ZnModel != 3 .OR. LocalStatus( ZnTH ) > 0 .OR. LocalStatus( CSE_ZONE:znTH ) > 0) then  UNDEFINED
																									else  Local(HeatTDaySched_CSE)  endif endif }
	;"Default Zone:CSE_ZONE:znTH_x"        	Zone:CSE_ZONE:znTH_x      	= {	if (LocalStatus( ZnTH        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
	;																								else  switch( Local( Type ) )
	;																											case  2 :	; Living
	;																															"select( ISSEASONCOOLING, 60, default hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65) )"
	;																											case  3 :	; Sleeping
	;																															"select( ISSEASONCOOLING, 60, default hourval(65,65,65,65,65,65,65,68,65,65,65,65,65,65,65,65,65,65,65,65,65,68,68,65) )"
	;																											default :	"select( ISSEASONCOOLING, 60, default hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65) )"
	;																										endswitch endif  }


; //Thermostats and associated controls 
; //Heat Mode
; #redefine SZ_Heat_hr hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65)
; #redefine Liv_Heat_hr hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65)
; #redefine Slp_Heat_hr hourval(65,65,65,65,65,65,65,68,65,65,65,65,65,65,65,65,65,65,65,65,65,68,68,65)
; #redefine Winter_Vent 77
; #redefine Winter_Cool 78
; //Cool Mode
; #redefine SZ_Cool_hr hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,78)
; #redefine Liv_Cool_hr hourval(83,83,83,83,83,83,83,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,83)
; #redefine Slp_Cool_hr hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,83,83,83,83,83,83,83,83,78,78,78)
; #redefine Summer_Heat 60
; #redefine Sumr_Vent_Temp 68      // 
; 	
; //  Summer Winter mode switch based on 7 day average temp.  Winter<=60>Summer 
; #redefine Coolmode select( @weather.taDbAvg07 >60., 1,default 0)
; #redefine HeatSet select( @weather.taDbAvg07 >60., Summer_Heat, default SZ_Heat_hr )  
; #redefine CoolSet select( @weather.taDbAvg07 >60., SZ_Cool_hr, default Winter_Cool )
; #redefine Tdesired select( @weather.taDbAvg07 >60., Sumr_Vent_Temp, default Winter_Vent )
; // Window interior shade closure 
; #define SCnight 0.8    //  when the sun is down.  80%
; #define SCday 0.5      //  when the sun is up  50%  
; #define SCcool 0.5     //  when cooling was on previous hour.  50%? 
;
;				then  Format( "Max(0.0, 0.015 * %g * (@znRes[%c%s%c].prior.H.tAir - @znRes[%c%s%c].prior.H.tAir))", Local( ClgBlwAtticArea ), 34, LocalRef( CSE_ZONE:Name ), 34, 34, GlobalRef( Attic:CSE_ZONE:Name ), 34 )

; SAC 12/10/12 - revised to reference new HVACCool:ConstClgSetpt
	"Default Zone:CSE_ZONE:znTC"         	Zone:CSE_ZONE:znTC        	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if (LocalStatus( ZnTC        ) > 0 .AND. IfValidAnd( ZnModel == 3 )) then  Local( ZnTC        )
																									else if (IfValidAnd( ZnModel == 3 ) .AND. LocalCompAssigned( ActiveHVACSystem ))
																									then	if (IfValidAnd( ActiveHVACSystem:ConstClgSetpt > 0 ))
																											then	ActiveHVACSystem:ConstClgSetpt
																											else	UNDEFINED  endif
																									else	UNDEFINED  endif endif endif  }
; SAC 8/30/12 - modified to prevent output of thermostat setpoint expression if fixed setpoint (above) already defined (or if CSE zone model not = 'CZM')
	"Zone:CSE_ZONE:znTC_x"						Zone:CSE_ZONE:znTC_x      	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if ( ZnModel != 3 .OR. LocalStatus( ZnTC ) > 0 .OR. LocalStatus( CSE_ZONE:znTC ) > 0) then  UNDEFINED
																									else  Local(CoolTDaySched_CSE)  endif endif  }
	;"Default Zone:CSE_ZONE:znTC_x"        	Zone:CSE_ZONE:znTC_x      	= {	if (LocalStatus( ZnTC        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
	;																								else  switch( Local( Type ) )
	;																											case  2 :	; Living
	;																															"select( ISSEASONCOOLING, hourval(83,83,83,83,83,83,83,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,83), default 78 )"
	;																											case  3 :	; Sleeping
	;																															"select( ISSEASONCOOLING, hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,83,83,83,83,83,83,83,83,78,78,78), default 78 )"
	;																											default :	"select( ISSEASONCOOLING, hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,78), default 78 )"
	;																										endswitch endif  }
	"Default Zone:CSE_ZONE:znTD"         	Zone:CSE_ZONE:znTD        	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if (LocalStatus( ZnTD        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTD        )  else  UNDEFINED  endif endif  }
	; SAC 1/3/13 - updated t-stat schedules to include design sizing schedule data
	"Default Zone:CSE_ZONE:znTD_x"        	Zone:CSE_ZONE:znTD_x      	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if (LocalStatus( ZnTD        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
																									else  Format("select( $dsDay==1, 77, $dsDay==2, 99, ISSEASONCOOLING, %g, default %g )", Local(SummerVentTemp), Local(WinterVentTemp))  endif endif  }

	"Default Zone:CSE_ZONE:znQMxH"       	Zone:CSE_ZONE:znQMxH      	= {	if (LocalStatus( ZnQMxH      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxH      )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znQMxHRated"  	Zone:CSE_ZONE:znQMxHRated 	= {	if (LocalStatus( ZnQMxHRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxHRated )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znQMxC"       	Zone:CSE_ZONE:znQMxC      	= {	if (LocalStatus( ZnQMxC      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxC      )  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:znQMxCRated"  	Zone:CSE_ZONE:znQMxCRated 	= {	if (LocalStatus( ZnQMxCRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxCRated )  else  UNDEFINED  endif  }

			; Infiltration
	"Default Zone:CSE_ZONE:infAC"       	Zone:CSE_ZONE:infAC      		= {	if (LocalStatus( InfAC      ) > 0) then  Local( InfAC    		)  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:infELA"      	Zone:CSE_ZONE:infELA     		= {	if (LocalStatus( InfELA     ) > 0) then  Local( InfELA   		)  else  UNDEFINED  endif  }
	"Default Zone:CSE_ZONE:infShld"     	Zone:CSE_ZONE:infShld    		= {	if (LocalStatus( InfShld    ) > 0) then  Local( InfShld  		)  else  UNDEFINED  endif  }
; SAC 9/12/12 - removed per call & e-mail from Bruce today
;	"Default Zone:CSE_ZONE:infStories"  	Zone:CSE_ZONE:infStories 		= {	if (LocalStatus( NumStories ) > 0) then  Local( NumStories 		)  else  UNDEFINED  endif  }
			; Internal Gains
	"Set Zone:Gain[1]:Parent"			Zone:Gain[1]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[2]:Parent"			Zone:Gain[2]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[3]:Parent"			Zone:Gain[3]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[4]:Parent"			Zone:Gain[4]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[5]:Parent"			Zone:Gain[5]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[6]:Parent"			Zone:Gain[6]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[7]:Parent"			Zone:Gain[7]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[8]:Parent"			Zone:Gain[8]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[9]:Parent"			Zone:Gain[9]:Parent		= {	Local( CSE_ZONE )  }
	"Set Zone:Gain[10]:Parent"			Zone:Gain[10]:Parent		= {	Local( CSE_ZONE )  }


	"Set Proj:IntGain_MoMult_CSE"		Proj:IntGain_MoMult_CSE	= {
				if (Local( IntGain_MoMult[1] ) == 1 .AND. Local( IntGain_MoMult[2]  ) == 1 .AND. Local( IntGain_MoMult[3]  ) == 1 .AND. Local( IntGain_MoMult[4]  ) == 1 .AND.
					 Local( IntGain_MoMult[5] ) == 1 .AND. Local( IntGain_MoMult[6]  ) == 1 .AND. Local( IntGain_MoMult[7]  ) == 1 .AND. Local( IntGain_MoMult[8]  ) == 1 .AND.
					 Local( IntGain_MoMult[9] ) == 1 .AND. Local( IntGain_MoMult[10] ) == 1 .AND. Local( IntGain_MoMult[11] ) == 1 .AND. Local( IntGain_MoMult[12] ) == 1 )
				then	" "
				else  Format( "* \n     choose1($month, %g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)",
											Local( IntGain_MoMult[1] ), Local( IntGain_MoMult[2]  ), Local( IntGain_MoMult[3]  ), Local( IntGain_MoMult[4]  ),
											Local( IntGain_MoMult[5] ), Local( IntGain_MoMult[6]  ), Local( IntGain_MoMult[7]  ), Local( IntGain_MoMult[8]  ),
											Local( IntGain_MoMult[9] ), Local( IntGain_MoMult[10] ), Local( IntGain_MoMult[11] ), Local( IntGain_MoMult[12] ) )
				endif  } 


; SAC 4/14/16 - MOVED UP HERE above DHWSYS creation (to ensure proper DHWSYS temperature/object references wihtin DHW objects)
 ; CSE ZONE (Garage) creation & defaulting
	"Create new Garage:CSE_ZONE" 				Garage:CSE_ZONE					= {	if (Global( Proj:HasGarage ) < 0.1 .OR. Local( Area ) < 0.1 .OR. Local( Volume ) < 0.1) then  UNCHANGED
																										else  CreateComp( cseZONE, Local( Name ) + "-grg" )  endif  }
	"Default Garage:CSE_ZONE:SourceGarage"	Garage:CSE_ZONE:SourceGarage	= {	Local( Name 				)  }
	"Default Garage:CSE_ZONE:znModel"      Garage:CSE_ZONE:znModel     	= {	"UZX"  }
	"Default Garage:CSE_ZONE:znArea"       Garage:CSE_ZONE:znArea      	= {	if (LocalStatus( Area      ) > 0) then  Local( Area 		)  else  UNDEFINED  endif  }
	"Default Garage:CSE_ZONE:znVol"        Garage:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume    ) > 0) then  Local( Volume 	)  else  UNDEFINED  endif  }
  ; SAC 2/4/13 - added more rules to set additional properties needed to accurately model a garage
	"Default Garage:CSE_ZONE:znEaveZ"     	Garage:CSE_ZONE:znEaveZ    	= {	if (MaxAll( Zone:GrndFlrClgHeight ) > 3) then  Bottom + MaxAll( Zone:GrndFlrClgHeight )
																										else  Bottom + 9  endif  }
	"Prevent invalid Garage:...:znEaveZ"	Garage:CSE_ZONE:znEaveZ    	= {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }
	"Default Garage:CSE_ZONE:znFloorZ"     Garage:CSE_ZONE:znFloorZ      = {	if (LocalStatus( Bottom ) > 0) then  Local( Bottom )  else  UNDEFINED  endif  }  ; SAC 3/28/13

	"Default Garage:CSE_ZONE:znCAir"       Garage:CSE_ZONE:znCAir      	= {	0.01  }
			; Infiltration - ensure only AirNet modeling...
	"Default Garage:CSE_ZONE:infAC"       	Garage:CSE_ZONE:infAC      	= {	0  }
	"Default Garage:CSE_ZONE:infELA"      	Garage:CSE_ZONE:infELA     	= {	0  }


; SAC 4/14/16 - MOVED UP from below in order to have all CSE Zones present for DHWSYS interconnections
 ; CSE ZONE (Attic) creation & defaulting
	"Create new Attic:CSE_ZONE"  				Attic:CSE_ZONE						= {	if (FloorArea < 0.5) then  UNDEFINED		; SAC 9/13/13 - added logic to prevent simulation of attic zones w/ no area
																										else  CreateComp( cseZONE, Local( Name ) + "-atc" )  endif  }
	"Default Attic:CSE_ZONE:SourceAttic"  	Attic:CSE_ZONE:SourceAttic		= {	Local( Name 				)  }
	"Default Attic:CSE_ZONE:znModel"      	Attic:CSE_ZONE:znModel     	= {	"UZX"  }
	"Default Attic:CSE_ZONE:znArea"       	Attic:CSE_ZONE:znArea      	= {	if (LocalStatus( CeilArea      ) > 0) then  Local( CeilArea 		)  else  UNDEFINED  endif  }
	"Default Attic:CSE_ZONE:znVol"        	Attic:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume        ) > 0) then  Local( Volume 			)  else  UNDEFINED  endif  }


; SAC 4/14/16 - MOVED UP here from below in order for all CSE ZONEs to be present for DHWSYS interconnections
 ; CSE ZONE (CrawlSpace) creation & defaulting
	"Create new CrawlSpace:CSE_ZONE"  					CrawlSpace:CSE_ZONE							= {	if (LocalStatus( Area ) == 0 .OR. Local( Area ) < 0.5) then  UNCHANGED
																																else  CreateComp( cseZONE, Local( Name ) + "-crwl" )  endif  }
	"Set CrawlSpace:CSEZoneName"  						CrawlSpace:CSEZoneName						= {	if (LocalCompAssigned( CSE_ZONE ) == 0) then  UNDEFINED
																																else  LocalRef( CSE_ZONE:Name )  endif  }
	"Default CrawlSpace:CSE_ZONE:SourceCrawlSpace"  CrawlSpace:CSE_ZONE:SourceCrawlSpace	= {	Local( Name )  }
	"Default CrawlSpace:CSE_ZONE:znModel"      		CrawlSpace:CSE_ZONE:znModel     			= {	"UZX"  }
	"Default CrawlSpace:CSE_ZONE:znArea"       		CrawlSpace:CSE_ZONE:znArea      			= {	Area                  }
	"Default CrawlSpace:CSE_ZONE:znVol"        		CrawlSpace:CSE_ZONE:znVol       			= {	Area * AvgWallHeight  }
	"Default CrawlSpace:CSE_ZONE:znEaveZ"       		CrawlSpace:CSE_ZONE:znEaveZ     			= {	AvgWallHeight + 0.75  }

END
;*************************************************************************


;*************************************************************************
RULELIST "CSE_Set2016InternalGains" 1 0 0 1
	"Set Proj:CSE_DefineName[24]"		Proj:CSE_DefineName[24]	= { "Cook_WD" }
	"Set Proj:CSE_DefineName[25]"		Proj:CSE_DefineName[25]	= { "Cook_WEH" }
	"Set Proj:CSE_DefineName[26]"		Proj:CSE_DefineName[26]	= { "TV_WD" }
	"Set Proj:CSE_DefineName[27]"		Proj:CSE_DefineName[27]	= { "TV_WEH" }
	"Set Proj:CSE_DefineName[28]"		Proj:CSE_DefineName[28]	= { "STB_WD" }
	"Set Proj:CSE_DefineName[29]"		Proj:CSE_DefineName[29]	= { "STB_WEH" }
	"Set Proj:CSE_DefineName[30]"		Proj:CSE_DefineName[30]	= { "Comp_WD" }
	"Set Proj:CSE_DefineName[31]"		Proj:CSE_DefineName[31]	= { "Comp_WEH" }
	"Set Proj:CSE_DefineName[32]"		Proj:CSE_DefineName[32]	= { "RMEL_WD" }
	"Set Proj:CSE_DefineName[33]"		Proj:CSE_DefineName[33]	= { "RMEL_WEH" }
	"Set Proj:CSE_DefineName[34]"		Proj:CSE_DefineName[34]	= { "IntLight_WD" }
	"Set Proj:CSE_DefineName[35]"		Proj:CSE_DefineName[35]	= { "IntLight_WEH" }
	"Set Proj:CSE_DefineName[36]"		Proj:CSE_DefineName[36]	= { "ExtLight_WD" }
	"Set Proj:CSE_DefineName[37]"		Proj:CSE_DefineName[37]	= { "ExtLight_WEH" }
	"Set Proj:CSE_DefineName[38]"		Proj:CSE_DefineName[38]	= { "Cook_SM" }
	"Set Proj:CSE_DefineName[39]"		Proj:CSE_DefineName[39]	= { "TV_SM" }
	"Set Proj:CSE_DefineName[40]"		Proj:CSE_DefineName[40]	= { "STB_SM" }
	"Set Proj:CSE_DefineName[41]"		Proj:CSE_DefineName[41]	= { "Comp_SM" }
	"Set Proj:CSE_DefineName[42]"		Proj:CSE_DefineName[42]	= { "Other_SM" }
	"Set Proj:CSE_DefineName[43]"		Proj:CSE_DefineName[43]	= { "RefrConst_WD" }
	"Set Proj:CSE_DefineName[44]"		Proj:CSE_DefineName[44]	= { "RefrConst_WEH" }
	"Set Proj:CSE_DefineName[45]"		Proj:CSE_DefineName[45]	= { "RefrTemp_WD" }
	"Set Proj:CSE_DefineName[46]"		Proj:CSE_DefineName[46]	= { "RefrTemp_WEH" }
	"Set Proj:CSE_DefineName[47]"		Proj:CSE_DefineName[47]	= { UNDEFINED  }				; add next here 
	"Set Proj:CSE_DefineName[48]"		Proj:CSE_DefineName[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[49]"		Proj:CSE_DefineName[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[50]"		Proj:CSE_DefineName[50]	= { UNDEFINED  }

	"Set Proj:CSE_DefineType[24]"		Proj:CSE_DefineType[24]	= { 3 }	; 3 => string, no quotes
	"Set Proj:CSE_DefineType[25]"		Proj:CSE_DefineType[25]	= { 3 }
	"Set Proj:CSE_DefineType[26]"		Proj:CSE_DefineType[26]	= { 3 }
	"Set Proj:CSE_DefineType[27]"		Proj:CSE_DefineType[27]	= { 3 }
	"Set Proj:CSE_DefineType[28]"		Proj:CSE_DefineType[28]	= { 3 }
	"Set Proj:CSE_DefineType[29]"		Proj:CSE_DefineType[29]	= { 3 }
	"Set Proj:CSE_DefineType[30]"		Proj:CSE_DefineType[30]	= { 3 }
	"Set Proj:CSE_DefineType[31]"		Proj:CSE_DefineType[31]	= { 3 }
	"Set Proj:CSE_DefineType[32]"		Proj:CSE_DefineType[32]	= { 3 }
	"Set Proj:CSE_DefineType[33]"		Proj:CSE_DefineType[33]	= { 3 }
	"Set Proj:CSE_DefineType[34]"		Proj:CSE_DefineType[34]	= { 3 }
	"Set Proj:CSE_DefineType[35]"		Proj:CSE_DefineType[35]	= { 3 }
	"Set Proj:CSE_DefineType[36]"		Proj:CSE_DefineType[36]	= { 3 }
	"Set Proj:CSE_DefineType[37]"		Proj:CSE_DefineType[37]	= { 3 }
	"Set Proj:CSE_DefineType[38]"		Proj:CSE_DefineType[38]	= { 3 }
	"Set Proj:CSE_DefineType[39]"		Proj:CSE_DefineType[39]	= { 3 }
	"Set Proj:CSE_DefineType[40]"		Proj:CSE_DefineType[40]	= { 3 }
	"Set Proj:CSE_DefineType[41]"		Proj:CSE_DefineType[41]	= { 3 }
	"Set Proj:CSE_DefineType[42]"		Proj:CSE_DefineType[42]	= { 3 }
	"Set Proj:CSE_DefineType[43]"		Proj:CSE_DefineType[43]	= { 3 }
	"Set Proj:CSE_DefineType[44]"		Proj:CSE_DefineType[44]	= { 3 }
	"Set Proj:CSE_DefineType[45]"		Proj:CSE_DefineType[45]	= { 3 }
	"Set Proj:CSE_DefineType[46]"		Proj:CSE_DefineType[46]	= { 3 }
	"Set Proj:CSE_DefineType[47]"		Proj:CSE_DefineType[47]	= { UNDEFINED  }				; add next here
	"Set Proj:CSE_DefineType[48]"		Proj:CSE_DefineType[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[49]"		Proj:CSE_DefineType[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[50]"		Proj:CSE_DefineType[50]	= { UNDEFINED  }

	"Set Proj:CSE_DefineString[24]"	Proj:CSE_DefineString[24]	= {   "     hourval( .005,.004,.004,.004,.004,.014,.019,.025,.026,.022,.021,.029,.035,.032,.034,.052,.115,.193,.180,.098,.042,.020,.012,.010)" }
	"Set Proj:CSE_DefineString[25]"	Proj:CSE_DefineString[25]	= {    "    hourval( .005,.004,.003,.003,.003,.005,.010,.027,.048,.048,.046,.055,.063,.059,.062,.068,.091,.139,.129,.072,.032,.014,.009,.005)" }
	"Set Proj:CSE_DefineString[26]"	Proj:CSE_DefineString[26]	= { "       hourval( .035,.026,.023,.022,.021,.021,.025,.032,.038,.040,.038,.038,.041,.042,.042,.041,.044,.049,.056,.064,.070,.074,.067,.051)" }
	"Set Proj:CSE_DefineString[27]"	Proj:CSE_DefineString[27]	= {  "      hourval( .035,.027,.022,.021,.020,.020,.022,.029,.037,.043,.042,.039,.040,.042,.045,.048,.051,.052,.056,.061,.065,.069,.064,.050)" }
	"Set Proj:CSE_DefineString[28]"	Proj:CSE_DefineString[28]	= {  "      hourval( .040,.040,.040,.040,.040,.040,.040,.041,.040,.040,.040,.040,.040,.040,.041,.041,.042,.043,.044,.045,.046,.047,.045,.045)" }
	"Set Proj:CSE_DefineString[29]"	Proj:CSE_DefineString[29]	= {   "     hourval( .041,.041,.040,.041,.040,.040,.040,.040,.041,.042,.042,.041,.041,.041,.041,.042,.042,.043,.044,.044,.045,.045,.044,.039)" }
	"Set Proj:CSE_DefineString[30]"	Proj:CSE_DefineString[30]	= {   "     hourval( .036,.033,.032,.032,.031,.032,.034,.036,.039,.043,.045,.045,.046,.046,.046,.047,.048,.049,.049,.049,.049,.048,.044,.041)" }
	"Set Proj:CSE_DefineString[31]"	Proj:CSE_DefineString[31]	= {    "    hourval( .036,.034,.033,.033,.032,.033,.033,.035,.038,.042,.044,.045,.046,.047,.047,.048,.049,.049,.048,.048,.048,.047,.044,.041)" }
	"Set Proj:CSE_DefineString[32]"	Proj:CSE_DefineString[32]	= {   "     hourval( .037,.035,.034,.034,.032,.036,.042,.044,.037,.032,.033,.033,.032,.033,.035,.037,.044,.053,.058,.060,.062,.060,.052,.045)" }
	"Set Proj:CSE_DefineString[33]"	Proj:CSE_DefineString[33]	= {    "    hourval( .037,.035,.034,.034,.032,.036,.042,.044,.037,.032,.033,.033,.032,.033,.035,.037,.044,.053,.058,.060,.062,.060,.052,.045)" }
	"Set Proj:CSE_DefineString[34]"	Proj:CSE_DefineString[34]	= {       " hourval( .023,.019,.015,.017,.021,.031,.042,.041,.034,.029,.027,.025,.021,.021,.021,.026,.031,.044,.084,.117,.113,.096,.063,.039)" }
	"Set Proj:CSE_DefineString[35]"	Proj:CSE_DefineString[35]	= {        "hourval( .023,.019,.015,.017,.021,.031,.042,.041,.034,.029,.027,.025,.021,.021,.021,.026,.031,.044,.084,.117,.113,.096,.063,.039)" }
	"Set Proj:CSE_DefineString[36]"	Proj:CSE_DefineString[36]	= {       " hourval( .046,.046,.046,.046,.046,.037,.035,.034,.033,.028,.022,.015,.012,.011,.011,.012,.019,.037,.049,.065,.091,.105,.091,.063)" }
	"Set Proj:CSE_DefineString[37]"	Proj:CSE_DefineString[37]	= {        "hourval( .046,.046,.045,.045,.046,.045,.044,.041,.036,.030,.024,.016,.012,.011,.011,.012,.019,.038,.048,.060,.083,.098,.085,.059)" }
; SAC 4/21/16 - installed monthly multiplier fixes from BAW
;	"Set Proj:CSE_DefineString[38]"	Proj:CSE_DefineString[38]	= {   "  choose1( $month, 1.094,1.065,1.074,.889,.891,.935,.993,.919,.923,.92,1.128,1.055)" }
	"Set Proj:CSE_DefineString[38]"	Proj:CSE_DefineString[38]	= {   "  choose1( $month, 1.094,1.065,1.074,0.889,0.891,0.935,0.993,0.92,0.923,0.92,1.128,1.168)" }
	"Set Proj:CSE_DefineString[39]"	Proj:CSE_DefineString[39]	= { "    choose1( $month, 1.032,.991,.986,.99,.971,.971,1.002,1.013,1.008,1.008,1.02,1.008)" }
	"Set Proj:CSE_DefineString[40]"	Proj:CSE_DefineString[40]	= {  "   choose1( $month, 1.02,.84,.92,.98,.91,.94,1.05,1.06,1.06,1.14,1.03,1.050)" }
;	"Set Proj:CSE_DefineString[41]"	Proj:CSE_DefineString[41]	= {   "  choose1( $month, .98,.86,.89,1.11,1.14,.99,1.05,1.01,.96,.97,.99,1.040)" }
	"Set Proj:CSE_DefineString[41]"	Proj:CSE_DefineString[41]	= {   "  choose1( $month, 0.98,0.87,0.89,1.11,1.14,0.99,1.05,1.01,0.96,0.97,0.99,1.04)" }
;	"Set Proj:CSE_DefineString[42]"	Proj:CSE_DefineString[42]	= {    " choose1( $month, 1.19,1.11,1.02,.93,.84,.8,.82,.88,.98,1.07,1.16,1.21)" }
	"Set Proj:CSE_DefineString[42]"	Proj:CSE_DefineString[42]	= {    " choose1( $month,  1.19,1.11,1.02,.93,.84,.8,.82,.88,.98,1.07,1.16,1.2)" }
	"Set Proj:CSE_DefineString[43]"	Proj:CSE_DefineString[43]	= {  " hourval( -0.5436,-0.3646,-0.4044,-0.3871,-0.5341,-0.7521,-0.3747,0.0041,-0.1293,-0.4644,-0.4800,-0.4351,-0.2195,-0.3301,-0.0919,-0.1686,-0.4819,-0.4731,-0.2223,0.0604,-0.1466,-0.3214,-0.4113,-0.7701)" }
	"Set Proj:CSE_DefineString[44]"	Proj:CSE_DefineString[44]	= {   "hourval( -0.3467,-0.2779,-0.2844,-0.2954,-0.4680,-0.5127,-0.7110,-0.5662,0.0463,-0.2995,-0.2388,-0.2646,-0.2905,-0.2730,-0.3306,-0.0031,-0.4356,-0.2580,0.2384,0.1176,-0.0458,-0.0596,-0.5300,0.0197 )" }
	"Set Proj:CSE_DefineString[45]"	Proj:CSE_DefineString[45]	= { "  hourval( 0.0195,0.0167,0.0169,0.0165,0.0183,0.0218,0.0178,0.0136,0.0151,0.0189,0.0188,0.0183,0.0156,0.0169,0.0137,0.0149,0.0197,0.0208,0.0184,0.0144,0.0166,0.0184,0.0188,0.0229)" }
	"Set Proj:CSE_DefineString[46]"	Proj:CSE_DefineString[46]	= {  " hourval( 0.0171,0.0156,0.0155,0.0154,0.0175,0.0181,0.0212,0.0201,0.0130,0.0176,0.0165,0.0171,0.0177,0.0176,0.0182,0.0139,0.0197,0.0180,0.0121,0.0135,0.0154,0.0150,0.0205,0.0129)" }
	"Set Proj:CSE_DefineString[47]"	Proj:CSE_DefineString[47]	= { UNDEFINED  }				; add next here
	"Set Proj:CSE_DefineString[48]"	Proj:CSE_DefineString[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[49]"	Proj:CSE_DefineString[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[50]"	Proj:CSE_DefineString[50]	= { UNDEFINED  }
END

RULELIST "CSE_BlastInternalGains" 1 0 0 1
	"Set Proj:CSE_DefineName[24]"		Proj:CSE_DefineName[24]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[25]"		Proj:CSE_DefineName[25]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[26]"		Proj:CSE_DefineName[26]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[27]"		Proj:CSE_DefineName[27]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[28]"		Proj:CSE_DefineName[28]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[29]"		Proj:CSE_DefineName[29]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[30]"		Proj:CSE_DefineName[30]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[31]"		Proj:CSE_DefineName[31]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[32]"		Proj:CSE_DefineName[32]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[33]"		Proj:CSE_DefineName[33]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[34]"		Proj:CSE_DefineName[34]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[35]"		Proj:CSE_DefineName[35]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[36]"		Proj:CSE_DefineName[36]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[37]"		Proj:CSE_DefineName[37]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[38]"		Proj:CSE_DefineName[38]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[39]"		Proj:CSE_DefineName[39]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[40]"		Proj:CSE_DefineName[40]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[41]"		Proj:CSE_DefineName[41]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[42]"		Proj:CSE_DefineName[42]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[43]"		Proj:CSE_DefineName[43]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[44]"		Proj:CSE_DefineName[44]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[45]"		Proj:CSE_DefineName[45]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[46]"		Proj:CSE_DefineName[46]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[47]"		Proj:CSE_DefineName[47]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[48]"		Proj:CSE_DefineName[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[49]"		Proj:CSE_DefineName[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[50]"		Proj:CSE_DefineName[50]	= { UNDEFINED  }

	"Set Proj:CSE_DefineType[24]"		Proj:CSE_DefineType[24]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[25]"		Proj:CSE_DefineType[25]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[26]"		Proj:CSE_DefineType[26]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[27]"		Proj:CSE_DefineType[27]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[28]"		Proj:CSE_DefineType[28]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[29]"		Proj:CSE_DefineType[29]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[30]"		Proj:CSE_DefineType[30]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[31]"		Proj:CSE_DefineType[31]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[32]"		Proj:CSE_DefineType[32]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[33]"		Proj:CSE_DefineType[33]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[34]"		Proj:CSE_DefineType[34]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[35]"		Proj:CSE_DefineType[35]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[36]"		Proj:CSE_DefineType[36]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[37]"		Proj:CSE_DefineType[37]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[38]"		Proj:CSE_DefineType[38]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[39]"		Proj:CSE_DefineType[39]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[40]"		Proj:CSE_DefineType[40]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[41]"		Proj:CSE_DefineType[41]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[42]"		Proj:CSE_DefineType[42]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[43]"		Proj:CSE_DefineType[43]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[44]"		Proj:CSE_DefineType[44]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[45]"		Proj:CSE_DefineType[45]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[46]"		Proj:CSE_DefineType[46]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[47]"		Proj:CSE_DefineType[47]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[48]"		Proj:CSE_DefineType[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[49]"		Proj:CSE_DefineType[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[50]"		Proj:CSE_DefineType[50]	= { UNDEFINED  }

	"Set Proj:CSE_DefineString[24]"	Proj:CSE_DefineString[24]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[25]"	Proj:CSE_DefineString[25]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[26]"	Proj:CSE_DefineString[26]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[27]"	Proj:CSE_DefineString[27]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[28]"	Proj:CSE_DefineString[28]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[29]"	Proj:CSE_DefineString[29]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[30]"	Proj:CSE_DefineString[30]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[31]"	Proj:CSE_DefineString[31]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[32]"	Proj:CSE_DefineString[32]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[33]"	Proj:CSE_DefineString[33]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[34]"	Proj:CSE_DefineString[34]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[35]"	Proj:CSE_DefineString[35]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[36]"	Proj:CSE_DefineString[36]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[37]"	Proj:CSE_DefineString[37]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[38]"	Proj:CSE_DefineString[38]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[39]"	Proj:CSE_DefineString[39]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[40]"	Proj:CSE_DefineString[40]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[41]"	Proj:CSE_DefineString[41]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[42]"	Proj:CSE_DefineString[42]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[43]"	Proj:CSE_DefineString[43]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[44]"	Proj:CSE_DefineString[44]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[45]"	Proj:CSE_DefineString[45]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[46]"	Proj:CSE_DefineString[46]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[47]"	Proj:CSE_DefineString[47]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[48]"	Proj:CSE_DefineString[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[49]"	Proj:CSE_DefineString[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[50]"	Proj:CSE_DefineString[50]	= { UNDEFINED  }
END
;*************************************************************************


;*************************************************************************
RULELIST "CSE_SimulationPrep_Zones_IntGains_part2" 1 0 0 1
;*************************************************************************

	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Setup lighting profile CSE export string (Zone:LtgDaySched_CSE)"
				Zone:LtgDaySched_CSE	= {	if (LocalCompAssigned( LtgDaySched ))
												;	then  Format( "* \n		hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
													then  Format( "* \n		select( $dsDay==1, 0., default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( LtgDaySched:Hr[1]  ), LocalRef( LtgDaySched:Hr[2]  ), LocalRef( LtgDaySched:Hr[3]  ), LocalRef( LtgDaySched:Hr[4]  ),
																LocalRef( LtgDaySched:Hr[5]  ), LocalRef( LtgDaySched:Hr[6]  ), LocalRef( LtgDaySched:Hr[7]  ), LocalRef( LtgDaySched:Hr[8]  ),
																LocalRef( LtgDaySched:Hr[9]  ), LocalRef( LtgDaySched:Hr[10] ), LocalRef( LtgDaySched:Hr[11] ), LocalRef( LtgDaySched:Hr[12] ),
																LocalRef( LtgDaySched:Hr[13] ), LocalRef( LtgDaySched:Hr[14] ), LocalRef( LtgDaySched:Hr[15] ), LocalRef( LtgDaySched:Hr[16] ),
																LocalRef( LtgDaySched:Hr[17] ), LocalRef( LtgDaySched:Hr[18] ), LocalRef( LtgDaySched:Hr[19] ), LocalRef( LtgDaySched:Hr[20] ),
																LocalRef( LtgDaySched:Hr[21] ), LocalRef( LtgDaySched:Hr[22] ), LocalRef( LtgDaySched:Hr[23] ), LocalRef( LtgDaySched:Hr[24] ) )
													else  " "  endif  }

	; SAC 4/13/16 - revised ltg gains for T24-2016
	"Create new Zone:GainLights"				Zone:GainLights = {	if ((Proj:IntGainsMethod >  2013 .AND. IfValidAnd( Proj:AvgLtgGainPerCFA > 0 )==0) .OR.
																						 (Proj:IntGainsMethod <= 2013 .AND. IfValidAnd( Ltg_Gain > 0 )==0)) then UNCHANGED
																					else  CreateComp( cseGAIN, Local( Name ) + "-znLtg" )  endif  }
	"Set Zone:GainLights parent cseZONE"	Zone:GainLights:Parent = {  Local( CSE_ZONE )  }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainLights gnPower_x"		Zone:GainLights:gnPower_x = {
				if (Proj:IntGainsMethod <= 2013)
				then	Format("%g * %g %s %s)", (Local( Ltg_Gain ) * 3413), Local( CondFloorArea ), Local( LtgDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
				else	Format("%g * %g * select( $dsDay==1, 0., $ISWEHOL, IntLight_WEH, Default IntLight_WD) * Other_SM",  Proj:AvgLtgGainPerCFA, ValidOr( CondFloorArea, 0 ) )
				endif  }
	"Set Zone:GainLights:gnFrRad"			Zone:GainLights:gnFrRad		= {	if (Proj:IntGainsMethod <= 2013) then  0.4  else  0.2  endif   }
	"Set Zone:GainLights:gnEndUse"		Zone:GainLights:gnEndUse	= {	"Lit" }
	"Set Zone:GainLights:gnMeter"			Zone:GainLights:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																								else  UNDEFINED  endif  }
				;	People
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Setup people profile CSE export string (Zone:PplDaySched_CSE)"
				Zone:PplDaySched_CSE	= {	if (LocalCompAssigned( PplDaySched ))
												;	then  Format( "* \n		hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
													then  Format( "* \n		select( $dsDay==1, 0., default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( PplDaySched:Hr[1]  ), LocalRef( PplDaySched:Hr[2]  ), LocalRef( PplDaySched:Hr[3]  ), LocalRef( PplDaySched:Hr[4]  ),
																LocalRef( PplDaySched:Hr[5]  ), LocalRef( PplDaySched:Hr[6]  ), LocalRef( PplDaySched:Hr[7]  ), LocalRef( PplDaySched:Hr[8]  ),
																LocalRef( PplDaySched:Hr[9]  ), LocalRef( PplDaySched:Hr[10] ), LocalRef( PplDaySched:Hr[11] ), LocalRef( PplDaySched:Hr[12] ),
																LocalRef( PplDaySched:Hr[13] ), LocalRef( PplDaySched:Hr[14] ), LocalRef( PplDaySched:Hr[15] ), LocalRef( PplDaySched:Hr[16] ),
																LocalRef( PplDaySched:Hr[17] ), LocalRef( PplDaySched:Hr[18] ), LocalRef( PplDaySched:Hr[19] ), LocalRef( PplDaySched:Hr[20] ),
																LocalRef( PplDaySched:Hr[21] ), LocalRef( PplDaySched:Hr[22] ), LocalRef( PplDaySched:Hr[23] ), LocalRef( PplDaySched:Hr[24] ) )
													else  " "  endif  }

	"Create new Zone:GainPeople"  Zone:GainPeople = {
        if (Local( Ppl_GainPerCFA ) <= 0) then UNCHANGED
        else  CreateComp( cseGAIN, Local( Name ) + "-znPpl" )  endif  }
	"Set Zone:GainPeople parent cseZONE"	Zone:GainPeople:Parent = {  Local( CSE_ZONE )  }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainPeople gnPower_x"			Zone:GainPeople:gnPower_x = {
		Format("%g * %g %s %s)", Local( Ppl_GainPerCFA ), Local( CondFloorArea ), Local( PplDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) ) }
	"Set Zone:GainPeople:gnFrRad"			Zone:GainPeople:gnFrRad	= { 0.3 }
	"Set Zone:GainPeople:gnFrLat"			Zone:GainPeople:gnFrLat = { 0.427 }

	; Television gain - starting w/ T24-2016 - SAC 4/13/16
	"Create new Zone:GainTelevision"				Zone:GainTelevision = {	if (Proj:IntGainsMethod <= 2013 .OR. 
																								 (Proj:IsMultiFamily < 0.5 .AND. IfValidAnd( Proj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else  CreateComp( cseGAIN, Local( Name ) + "-znTV" )  endif  }
	"Set Zone:GainTelevision parent cseZONE"	Zone:GainTelevision:Parent = {  Local( CSE_ZONE )  }
	; SAC 4/22/16 - fix bug in TV, STB, Comp & MEL by replacing SumAll() with SumChildren() when setting gains for each individual Zone (tic #649)
	"Set Zone:GainTelevision gnPower_x"			Zone:GainTelevision:gnPower_x = {
				if (Proj:IsMultiFamily < 0.5)
				then	Format("((265 + (31.8 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, TV_WEH, Default TV_WD) * TV_SM", Proj:SimNumBedrooms, (CondFloorArea / Proj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, TV_WEH, Default TV_WD) * TV_SM", SumChildren( DwellUnit:TotalTVGain ) )  endif  }
	"Set Zone:GainTelevision:gnFrRad"			Zone:GainTelevision:gnFrRad	= {	0.4   }
	"Set Zone:GainTelevision:gnEndUse"			Zone:GainTelevision:gnEndUse	= {	"Rcp" }
	"Set Zone:GainTelevision:gnMeter"			Zone:GainTelevision:gnMeter	= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

	; Set top box gain - starting w/ T24-2016 - SAC 4/13/16
	"Create new Zone:GainSetTopBox"				Zone:GainSetTopBox = {	if (Proj:IntGainsMethod <= 2013 .OR. 
																								 (Proj:IsMultiFamily < 0.5 .AND. IfValidAnd( Proj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else  CreateComp( cseGAIN, Local( Name ) + "-znSTB" )  endif  }
	"Set Zone:GainSetTopBox parent cseZONE"	Zone:GainSetTopBox:Parent 		= {  Local( CSE_ZONE )  }
	"Set Zone:GainSetTopBox gnPower_x"			Zone:GainSetTopBox:gnPower_x	= {
				if (Proj:IsMultiFamily < 0.5)
				then	Format("((76 + (59.4 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, STB_WEH, Default STB_WD) * STB_SM", Proj:SimNumBedrooms, (CondFloorArea / Proj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, STB_WEH, Default STB_WD) * STB_SM", SumChildren( DwellUnit:TotalSTBGain ) )  endif }
	"Set Zone:GainSetTopBox:gnFrRad"				Zone:GainSetTopBox:gnFrRad		= {	0.2   }
	"Set Zone:GainSetTopBox:gnEndUse"			Zone:GainSetTopBox:gnEndUse	= {	"Rcp" }
	"Set Zone:GainSetTopBox:gnMeter"				Zone:GainSetTopBox:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

	; Computer gain - starting w/ T24-2016 - SAC 4/13/16
	"Create new Zone:GainComputer"				Zone:GainComputer = {	if (Proj:IntGainsMethod <= 2013 .OR. 
																								 (Proj:IsMultiFamily < 0.5 .AND. IfValidAnd( Proj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else  CreateComp( cseGAIN, Local( Name ) + "-znComp" )  endif  }
	"Set Zone:GainComputer parent cseZONE"		Zone:GainComputer:Parent 		= {  Local( CSE_ZONE )  }
	"Set Zone:GainComputer gnPower_x"			Zone:GainComputer:gnPower_x	= {
				if (Proj:IsMultiFamily < 0.5)
				then	Format("((79 + (55.4 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, Comp_WEH, Default Comp_WD) * Comp_SM", Proj:SimNumBedrooms, (CondFloorArea / Proj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, Comp_WEH, Default Comp_WD) * Comp_SM", SumChildren( DwellUnit:TotalCompGain ) )  endif }
	"Set Zone:GainComputer:gnFrRad"				Zone:GainComputer:gnFrRad		= {	0.2   }
	"Set Zone:GainComputer:gnEndUse"				Zone:GainComputer:gnEndUse		= {	"Rcp" }
	"Set Zone:GainComputer:gnMeter"				Zone:GainComputer:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

			;	Misc. internal gains
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Setup equipment profile CSE export string (Zone:EqpDaySched_CSE)"
				Zone:EqpDaySched_CSE	= {	if (LocalCompAssigned( EqpDaySched ))
													then  Format( "* \n		select( $dsDay==1, 0., default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( EqpDaySched:Hr[1]  ), LocalRef( EqpDaySched:Hr[2]  ), LocalRef(EqpDaySched:Hr[3]  ), LocalRef( EqpDaySched:Hr[4]  ),
																LocalRef( EqpDaySched:Hr[5]  ), LocalRef( EqpDaySched:Hr[6]  ), LocalRef(EqpDaySched:Hr[7]  ), LocalRef( EqpDaySched:Hr[8]  ),
																LocalRef( EqpDaySched:Hr[9]  ), LocalRef( EqpDaySched:Hr[10] ), LocalRef(EqpDaySched:Hr[11] ), LocalRef( EqpDaySched:Hr[12] ),
																LocalRef( EqpDaySched:Hr[13] ), LocalRef( EqpDaySched:Hr[14] ), LocalRef(EqpDaySched:Hr[15] ), LocalRef( EqpDaySched:Hr[16] ),
																LocalRef( EqpDaySched:Hr[17] ), LocalRef( EqpDaySched:Hr[18] ), LocalRef(EqpDaySched:Hr[19] ), LocalRef( EqpDaySched:Hr[20] ),
																LocalRef( EqpDaySched:Hr[21] ), LocalRef( EqpDaySched:Hr[22] ), LocalRef(EqpDaySched:Hr[23] ), LocalRef( EqpDaySched:Hr[24] ) )
													else  " "  endif  }

	"Create new Zone:GainMisc"					Zone:GainMisc			= {	if ((Proj:IntGainsMethod <= 2013 .AND. Local( Msc_GainPerCFA ) <= 0) .OR.
																								 (Proj:IntGainsMethod >  2013 .AND. Proj:IsMultiFamily < 0.5 .AND. IfValidAnd( Proj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else if (Proj:IntGainsMethod <= 2013)
																							then	CreateComp( cseGAIN, Local( Name ) + "-znMsc" )
																							else	CreateComp( cseGAIN, Local( Name ) + "-znMEL" )  endif endif }
	"Set Zone:GainMisc parent cseZONE"		Zone:GainMisc:Parent = {  Local( CSE_ZONE )  }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainMisc gnPower_x"				Zone:GainMisc:gnPower_x = {
				if (Proj:IntGainsMethod <= 2013)
				then	Format("%g * %g %s %s)", (Local( Msc_GainPerCFA ) * 3413), Local( CondFloorArea ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
				else if (Proj:IsMultiFamily < 0.5)
				then	Format("((570 + (198.9 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, RMEL_WEH, Default RMEL_WD) * Other_SM", Proj:SimNumBedrooms, (CondFloorArea / Proj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, RMEL_WEH, Default RMEL_WD) * Other_SM", SumChildren( DwellUnit:TotalMscElecGain ) )  endif endif  }
	"Set Zone:GainMisc:gnFrRad"				Zone:GainMisc:gnFrRad	= {	0.3   }
	"Set Zone:GainMisc:gnFrLat"				Zone:GainMisc:gnFrLat	= {	0.03  }
	"Set Zone:GainMisc:gnEndUse"				Zone:GainMisc:gnEndUse	= {	"Rcp" }
	"Set Zone:GainMisc:gnMeter"				Zone:GainMisc:gnMeter	= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																								else  UNDEFINED  endif  }

; add new Gain to adjust internal gains to match RESNET  mjb   11/18/15
	"Create new Zone:GainRESNET"  Zone:GainRESNET = {
        if (Local( Ltg_Gain ) <= 0 .OR. Proj:DRtgRefRunID != 2014) then UNDEFINED
        else  CreateComp( cseGAIN, Local( Name ) + "-znRESNET" )  endif  }
	"Set Zone:GainRESNET parent cseZONE"	Zone:GainRESNET:Parent = {  Local( CSE_ZONE )  }		
	"Set Zone:GainRESNET gnPower_x"			Zone:GainRESNET:gnPower_x = {
					Format("%g * %g %s %s)", -4.833, Local( CondFloorArea ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) ) }
	"Set Zone:GainRESNET:gnFrLat"				Zone:GainRESNET:gnFrLat	= { 0.1 }
;	"Set Zone:GainRESNET:gnEndUse"			Zone:GainRESNET:gnEndUse = { "RESNET" }

; SAC 5/11/16 - now handled via DwellUnitDHW object
;	"Set DwellUnit:GainCtrlDHWSYS"		DwellUnit:GainCtrlDHWSYS		= {			; SAC 4/15/16 - T24-2016 gains
;				if (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily < 0.5) then  UNDEFINED		; won't be needed to setup DHW-linked Gains
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 1 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[1] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[1]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 2 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[2] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[2]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 3 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[3] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[3]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 4 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[4] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[4]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 5 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[5] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[5]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 1 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[1] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[1]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[1]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 2 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[2] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[2]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[2]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 3 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[3] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[3]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[3]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 4 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[4] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[4]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[4]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 5 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[5] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[5]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[5]:cseDHWSYSRef
;				else	UNDEFINED		; ERROR
;				endif endif endif endif endif endif endif endif endif endif endif  }

   "Set Zone:GainCtrlDHWSYS[1]"      Zone:GainCtrlDHWSYS[1]      = {         ; SAC 4/15/16 - T24-2016 gains
            if (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily > 0.5) then  UNDEFINED      ; won't be needed to setup DHW-linked Gains
            else if (DHWSys1Status == 3 .AND. LocalCompAssigned(    DHWSys1 ) > 0 .AND. LocalCompAssigned(    DHWSys1:cseDHWSYSRef ) > 0) then     DHWSys1:cseDHWSYSRef
            else if (DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0 .AND. LocalCompAssigned( AltDHWSys1:cseDHWSYSRef ) > 0) then  AltDHWSys1:cseDHWSYSRef
            else if (DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0 .AND. LocalCompAssigned(  exDHWSys1:cseDHWSYSRef ) > 0) then   exDHWSys1:cseDHWSYSRef
            else if (DHWSys2Status == 3 .AND. LocalCompAssigned(    DHWSys2 ) > 0 .AND. LocalCompAssigned(    DHWSys2:cseDHWSYSRef ) > 0) then     DHWSys2:cseDHWSYSRef
            else if (DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2 ) > 0 .AND. LocalCompAssigned( AltDHWSys2:cseDHWSYSRef ) > 0) then  AltDHWSys2:cseDHWSYSRef
            else if (DHWSys2Status == 1 .AND. LocalCompAssigned(  exDHWSys2 ) > 0 .AND. LocalCompAssigned(  exDHWSys2:cseDHWSYSRef ) > 0) then   exDHWSys2:cseDHWSYSRef
            else   UNDEFINED      ; ERROR
            endif endif endif endif endif endif endif  }
   "Set Zone:GainCtrlDHWSYS[2]"      Zone:GainCtrlDHWSYS[2]      = {         ; SAC 4/15/16 - T24-2016 gains  ; SAC 7/26/16 - tic #711
            if (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily > 0.5 .OR. LocalCompAssigned( GainCtrlDHWSYS[1] )==0) then  UNDEFINED      ; won't be needed to setup DHW-linked Gains
            else if ( (DHWSys1Status == 3 .AND. LocalCompAssigned(    DHWSys1 ) > 0 .AND. LocalCompAssigned(    DHWSys1:cseDHWSYSRef ) > 0) .OR.
                      (DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0 .AND. LocalCompAssigned( AltDHWSys1:cseDHWSYSRef ) > 0) .OR.
                      (DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0 .AND. LocalCompAssigned(  exDHWSys1:cseDHWSYSRef ) > 0) )
            then  ; we have gain #1 set based on DHWSys #1 - set second gain based on DHWSys #2
                       if (DHWSys2Status == 3 .AND. LocalCompAssigned(    DHWSys2 ) > 0 .AND. LocalCompAssigned(    DHWSys2:cseDHWSYSRef ) > 0) then     DHWSys2:cseDHWSYSRef
                  else if (DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2 ) > 0 .AND. LocalCompAssigned( AltDHWSys2:cseDHWSYSRef ) > 0) then  AltDHWSys2:cseDHWSYSRef
                  else if (DHWSys2Status == 1 .AND. LocalCompAssigned(  exDHWSys2 ) > 0 .AND. LocalCompAssigned(  exDHWSys2:cseDHWSYSRef ) > 0) then   exDHWSys2:cseDHWSYSRef
                  else   UNDEFINED  endif endif endif
            else   UNDEFINED
            endif endif  }

			;	Appliances
;	"Create Zone:GainRefrig if requested"	Zone:Action		= { if ( Global(Proj:Appl_HaveRefrig[1]) == 1) then
	"Create Zone:GainRefrig if requested"	Zone:Action		= {	if (Appl_RefrigGain > 0) then  EvalRulelist( "CreateGainRefrig", 1 )
																					else UNCHANGED endif }

   ; SAC 4/14/16 - revised for T24-2016 gains - Dishwasher done by DwellUnit for 2016 multifamily
   "Create Zone:GainDish if requested"       Zone:Action          = {   if (Appl_DishGain > 0 .AND. (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily < 0.5)) then
                                                                           EvalRulelist( "CreateGainDish_Zone", 1 )
                                                                        else UNCHANGED endif }
   ; SAC 7/26/16 - added to ensure multiple dishwasher gains, one for each DHWSys for single family models (tic #711)
   "Create Zone:GainDish-2 if requested"     Zone:Action          = {   if (Appl_DishGain > 0 .AND. Proj:IntGainsMethod > 2013 .AND. Proj:IsMultiFamily < 0.5 .AND.
                                                                            LocalCompAssigned( GainCtrlDHWSYS[2] )) then
                                                                           EvalRulelist( "CreateGainDish_Zone_2", 1 )
                                                                        else UNCHANGED endif }
	"Create DwellUnitDHW:GainDish if needed"	DwellUnitDHW:Action	= {	if (IfValidAnd( DwellUnitTypeRef:HaveDish > 0 ) .AND. Proj:IntGainsMethod > 2013) then
																									EvalRulelist( "CreateGainDish_DwellUnitDHW", 1 )
																								else UNCHANGED endif }

	"Create Zone:GainCooking if requested"		Zone:Action		= {	if (Appl_CookGain[1] > 0 .OR. Appl_CookGain[2] > 0 .OR. Appl_CookGain[3] > 0) then
																							EvalRulelist( "CreateGainCooking", 1 )
																						else UNCHANGED endif }

	; SAC 4/14/16 - revised for T24-2016 gains - ClothesWasher done by DwellUnit for 2016 multifamily
   "Create Zone:GainWasher if requested"         Zone:Action            = {   if (Appl_WasherGain > 0 .AND. (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily < 0.5)) then
                                                                                 EvalRulelist( "CreateGainWasher_Zone", 1 )
                                                                              else UNCHANGED endif }
   ; SAC 7/26/16 - added to ensure multiple washer gains, one for each DHWSys for single family models (tic #711)
   "Create Zone:GainWasher-2 if requested"       Zone:Action            = {   if (Appl_WasherGain > 0 .AND. Proj:IntGainsMethod > 2013 .AND. Proj:IsMultiFamily < 0.5 .AND.
                                                                                  LocalCompAssigned( GainCtrlDHWSYS[2] )) then
                                                                                 EvalRulelist( "CreateGainWasher_Zone_2", 1 )
                                                                              else UNCHANGED endif }
	; SAC 4/22/16 - added logic to ensure WasherZoneRef valid before creating washer gain for each DwellUnit
	"Create DwellUnitDHW:GainWasher if requested"	DwellUnitDHW:Action	= {	if (IfValidAnd( DwellUnitTypeRef:HaveWasher > 0 ) .AND. Proj:IntGainsMethod > 2013 .AND.
																											 ParentCompAssigned( WasherZoneRef )) then
																											EvalRulelist( "CreateGainWasher_DwellUnitDHW", 1 )
																										else UNCHANGED endif }

   ; SAC 4/14/16 - revised for T24-2016 gains - ClothesDryer done by DwellUnit for 2016 multifamily
   "Create Zone:GainDryer if requested"         Zone:Action          = {   if ( (Appl_DryerGain[1] > 0 .OR. Appl_DryerGain[2] > 0 .OR. Appl_DryerGain[3] > 0) .AND.
                                                                                (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily < 0.5)) then
                                                                              EvalRulelist( "CreateGainDryer_Zone", 1 )
                                                                           else UNCHANGED endif }
   ; SAC 7/26/16 - added to ensure multiple set of dryer gains, one for each DHWSys for single family models (tic #711)
   "Create Zone:GainDryer-2 if requested"       Zone:Action          = {   if ( (Appl_DryerGain[1] > 0 .OR. Appl_DryerGain[2] > 0 .OR. Appl_DryerGain[3] > 0) .AND.
                                                                                Proj:IntGainsMethod > 2013 .AND. Proj:IsMultiFamily < 0.5 .AND.
                                                                                LocalCompAssigned( GainCtrlDHWSYS[2] )) then
                                                                               EvalRulelist( "CreateGainDryer_Zone_2", 1 )
                                                                           else UNCHANGED endif }
   ; SAC 4/22/16 - added logic to ensure DryerZoneRef valid before creating dryer gain for each DwellUnit
   "Create DwellUnitDHW:GainDryer if requested"   DwellUnitDHW:Action   = {   if (IfValidAnd( DwellUnitTypeRef:HaveDryer > 0 ) .AND. Proj:IntGainsMethod > 2013 .AND.
                                                                               ParentCompAssigned( DryerZoneRef )) then
                                                                              EvalRulelist( "CreateGainDryer_DwellUnitDHW", 1 )
                                                                           else UNCHANGED endif }
		;	Exterior lights
	"Setup exterior lighting profile CSE export string (Zone:ExtLtgDaySched_CSE)"
				Zone:ExtLtgDaySched_CSE	= {	if (LocalCompAssigned( ExtLtgDaySched ))
													then  Format( "* \n		hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( ExtLtgDaySched:Hr[1]  ), LocalRef( ExtLtgDaySched:Hr[2]  ), LocalRef( ExtLtgDaySched:Hr[3]  ), LocalRef( ExtLtgDaySched:Hr[4]  ),
																LocalRef( ExtLtgDaySched:Hr[5]  ), LocalRef( ExtLtgDaySched:Hr[6]  ), LocalRef( ExtLtgDaySched:Hr[7]  ), LocalRef( ExtLtgDaySched:Hr[8]  ),
																LocalRef( ExtLtgDaySched:Hr[9]  ), LocalRef( ExtLtgDaySched:Hr[10] ), LocalRef( ExtLtgDaySched:Hr[11] ), LocalRef( ExtLtgDaySched:Hr[12] ),
																LocalRef( ExtLtgDaySched:Hr[13] ), LocalRef( ExtLtgDaySched:Hr[14] ), LocalRef( ExtLtgDaySched:Hr[15] ), LocalRef( ExtLtgDaySched:Hr[16] ),
																LocalRef( ExtLtgDaySched:Hr[17] ), LocalRef( ExtLtgDaySched:Hr[18] ), LocalRef( ExtLtgDaySched:Hr[19] ), LocalRef( ExtLtgDaySched:Hr[20] ),
																LocalRef( ExtLtgDaySched:Hr[21] ), LocalRef( ExtLtgDaySched:Hr[22] ), LocalRef( ExtLtgDaySched:Hr[23] ), LocalRef( ExtLtgDaySched:Hr[24] ) )
													else  " "  endif  }
	; SAC 4/13/16 - revised Extltg gains for T24-2016
	"Create new Zone:GainExtLights"  			Zone:GainExtLights = {	if ((Proj:IntGainsMethod >  2013 .AND. IfValidAnd( Proj:LtgCondFloorArea > 0 )) .OR.
																								 (Proj:IntGainsMethod <= 2013 .AND. ExtLtg_Gain > 0)) then	CreateComp( cseGAIN, Local( Name ) + "-znExtLtg" )
																							else UNCHANGED endif  }
	"Set Zone:GainExtLights parent cseZONE"	Zone:GainExtLights:Parent 		= {  Local( CSE_ZONE )  }
	; SAC 4/22/16 - added NumDwellingUnits multiplier on constant '8' so that it scales for MFam models (tic #650)
	"Set Zone:GainExtLights gnPower_x"			Zone:GainExtLights:gnPower_x	= {
						if (Proj:IntGainsMethod <= 2013)
						then	Format("%g %s", (Local( ExtLtg_Gain ) * 3413), Local( ExtLtgDaySched_CSE ) )
						else	Format("(((8 * %g) + (.0532 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, ExtLight_WEH, Default ExtLight_WD) * Other_SM",
											ValidOr( Proj:NumDwellingUnits, 0 ), ValidOr( Proj:LtgCondFloorArea, 0 ), (ValidOr( CondFloorArea, 0 ) / max( 1, ValidOr( Proj:CondFloorArea, 1 ) )) )
						endif  }
	"Set Zone:GainExtLights:gnFrZn"				Zone:GainExtLights:gnFrZn		= {	0. }
	"Set Zone:GainExtLights:gnEndUse"			Zone:GainExtLights:gnEndUse	= {	"Ext" }
	"Set Zone:GainExtLights:gnMeter"				Zone:GainExtLights:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

			; setup for AirNet (& misc other stuff)
	"Set Zone:ExtWallArea"				Zone:ExtWallArea			= {	SumChildren( ExtWall:Area )  }
	"Set Zone:ClgBlwAtticArea"			Zone:ClgBlwAtticArea		= {	SumChildren( CeilingBelowAttic:Area )  }
	"Set Zone:CathCeilingArea"			Zone:CathCeilingArea		= {	SumChildren( CathedralCeiling:Area )  }
	"Set Zone:CondClgBlwAtticArea"	Zone:CondClgBlwAtticArea ={	if (Type < 10) then  ClgBlwAtticArea  else  0  endif  }
	"Set Zone:SlabFloorArea"			Zone:SlabFloorArea		= {	SumChildren( SlabFloor:Area ) + SumChildren( UndFloor:Area )  }		; SAC 11/17/14 - added UndFloor:Area
	"Set Zone:ExtFloorArea"				Zone:ExtFloorArea			= {	SumChildren( ExteriorFloor:Area ) + SumChildren( FloorOverCrawl:Area )  }
;	"Set Zone:FlrOverGarageArea"		Zone:FlrOverGarageArea	= {	SumChildren( InteriorFloor:GarAdjCndZnArea )  }

	"Set Proj:BldgExtWallArea"			Proj:BldgExtWallArea			= {	SumAll( Zone:ExtWallArea     )  }
	"Set Proj:BldgClgBlwAtticArea"	Proj:BldgClgBlwAtticArea	= {	SumAll( Zone:ClgBlwAtticArea )  }
	"Set Proj:BldgCathCeilingArea"	Proj:BldgCathCeilingArea	= {	SumAll( Zone:CathCeilingArea )  }
	"Set Proj:BldgSlabFloorArea"		Proj:BldgSlabFloorArea		= {	SumAll( Zone:SlabFloorArea   )  }
	"Set Proj:BldgCondZnSlabFlrArea"		Proj:BldgCondZnSlabFlrArea	= { SumAcrossif( Zone:SlabFloorArea, Zone:Type < 10 )  }		; SAC 9/10/13
	"Set Proj:BldgExtFloorArea"		Proj:BldgExtFloorArea		= {	SumAll( Zone:ExtFloorArea    )  }

	"Set ExtWall:WinVentArea"			ExtWall:WinVentArea			= {	SumChildren( Win:VentArea )  }
	"Set Zone:WinVentArea"				Zone:WinVentArea				= {	SumChildren( ExtWall:WinVentArea )  }

; SAC 4/14/16 - MOVED UP above DHWSYS creation
; ; CSE ZONE (Garage) creation & defaulting
;	"Create new Garage:CSE_ZONE" 				Garage:CSE_ZONE					= {	if (Global( Proj:HasGarage ) < 0.1 .OR. Local( Area ) < 0.1 .OR. Local( Volume ) < 0.1) then  UNCHANGED
;																										else  CreateComp( cseZONE, Local( Name ) + "-grg" )  endif  }
;	"Default Garage:CSE_ZONE:SourceGarage"	Garage:CSE_ZONE:SourceGarage	= {	Local( Name 				)  }
;	"Default Garage:CSE_ZONE:znModel"      Garage:CSE_ZONE:znModel     	= {	"UZX"  }
;	"Default Garage:CSE_ZONE:znArea"       Garage:CSE_ZONE:znArea      	= {	if (LocalStatus( Area      ) > 0) then  Local( Area 		)  else  UNDEFINED  endif  }
;	"Default Garage:CSE_ZONE:znVol"        Garage:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume    ) > 0) then  Local( Volume 	)  else  UNDEFINED  endif  }
;  ; SAC 2/4/13 - added more rules to set additional properties needed to accurately model a garage
;	"Default Garage:CSE_ZONE:znEaveZ"     	Garage:CSE_ZONE:znEaveZ    	= {	if (MaxAll( Zone:GrndFlrClgHeight ) > 3) then  Bottom + MaxAll( Zone:GrndFlrClgHeight )
;																										else  Bottom + 9  endif  }
;	"Prevent invalid Garage:...:znEaveZ"	Garage:CSE_ZONE:znEaveZ    	= {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }
;	"Default Garage:CSE_ZONE:znFloorZ"     Garage:CSE_ZONE:znFloorZ      = {	if (LocalStatus( Bottom ) > 0) then  Local( Bottom )  else  UNDEFINED  endif  }  ; SAC 3/28/13
;
;	"Default Garage:CSE_ZONE:znCAir"       Garage:CSE_ZONE:znCAir      	= {	0.01  }
;			; Infiltration - ensure only AirNet modeling...
;	"Default Garage:CSE_ZONE:infAC"       	Garage:CSE_ZONE:infAC      	= {	0  }
;	"Default Garage:CSE_ZONE:infELA"      	Garage:CSE_ZONE:infELA     	= {	0  }

	; SAC 4/13/16 - added ltg gains for T24-2016
	"Create new Garage:GainLights"			Garage:GainLights					= {	if (Proj:HasGarage < 0.1 .OR. Area < 0.1 .OR. Volume < 0.1) then  UNCHANGED
																										else if (Proj:IntGainsMethod <= 2013 .OR. Proj:LtgCondFloorArea < 1) then  UNCHANGED
																										else  CreateComp( cseGAIN, Local( Name ) + "-grgLtg" )  endif endif  }
	"Set Garage:GainLights parent cseZONE"	Garage:GainLights:Parent		= {	Local( CSE_ZONE )  }
	"Set Garage:GainLights gnPower_x"		Garage:GainLights:gnPower_x	= {
				Format("((20 + (.0063 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, IntLight_WEH, Default IntLight_WD) * Other_SM",
																Proj:LtgCondFloorArea, (Area / SumAll( Garage:Area )) )  }
	"Set Garage:GainLights:gnFrRad"			Garage:GainLights:gnFrRad		= {	0.2   }
	"Set Garage:GainLights:gnEndUse"			Garage:GainLights:gnEndUse		= {	"Lit" }
	"Set Garage:GainLights:gnMeter"			Garage:GainLights:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																										else  UNDEFINED  endif  }
	; SAC 4/14/16 - added secondary refrigerator for SFam models w/ a primary refrigerator
	"Create new Garage:GainRefrig"			Garage:GainRefrig					= {	if (Proj:HasGarage < 0.1 .OR. Area < 0.1 .OR. Volume < 0.1) then  UNCHANGED
																										else if (Proj:IntGainsMethod <= 2013 .OR. Proj:IsMultiFamily > 0.5 .OR. Proj:Appl_HaveRefrig[1] < 0.5) then  UNCHANGED
																										else  CreateComp( cseGAIN, Local( Name ) + "-grgRefrig" )  endif endif  }
	"Set Garage:GainRefrig parent cseZONE"	Garage:GainRefrig:Parent		= {	Local( CSE_ZONE )  }
	"Set Garage:GainRefrig gnPower_x"		Garage:GainRefrig:gnPower_x	= {
				Format("((%g * 71) * 3412/8760) * %g * ( select( $isWeHol, RefrConst_WEH, default RefrConst_WD ) + select( $isWeHol, RefrTemp_WEH, default RefrTemp_WD ) * @znRes[%c%s%c].prior.H.tAir)",
																										Proj:SimNumBedrooms, (Area / SumAll( Garage:Area )), 34, CSE_ZONE:Name, 34 )  }
	"Set Garage:GainRefrig:gnFrRad"			Garage:GainRefrig:gnFrRad		= {	0     }
	"Set Garage:GainRefrig:gnEndUse"			Garage:GainRefrig:gnEndUse		= {	"Refr" }
	"Set Garage:GainRefrig:gnMeter"			Garage:GainRefrig:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																										else  UNDEFINED  endif  }

; SAC 10/16/14 - added to accommodate multiple attics
	"Set CeilingBelowAttic:CSEZnEaveZ"		CeilingBelowAttic:CSEZnEaveZ	= {	if (IfValidAnd( Area > 0.1)==0 .OR. LocalCompAssigned( AtticZone ) < 1) then  UNDEFINED
																										else if (ParentComponentType() == "Zone"  ) then	Zone:CSE_ZONE:znEaveZ
																										else if (ParentComponentType() == "Garage") then	Garage:CSE_ZONE:znEaveZ
																										else  UNDEFINED  endif endif endif  }

; SAC 4/14/16 - MOVED UP above DHWSYS creation in order to have all Zones present for DHWSYS interconnections
; ; CSE ZONE (Attic) creation & defaulting
;	"Create new Attic:CSE_ZONE"  				Attic:CSE_ZONE						= {	if (FloorArea < 0.5) then  UNDEFINED		; SAC 9/13/13 - added logic to prevent simulation of attic zones w/ no area
;																										else  CreateComp( cseZONE, Local( Name ) + "-atc" )  endif  }
;
;	"Default Attic:CSE_ZONE:SourceAttic"  	Attic:CSE_ZONE:SourceAttic		= {	Local( Name 				)  }
;	"Default Attic:CSE_ZONE:znModel"      	Attic:CSE_ZONE:znModel     	= {	"UZX"  }
;	"Default Attic:CSE_ZONE:znArea"       	Attic:CSE_ZONE:znArea      	= {	if (LocalStatus( CeilArea      ) > 0) then  Local( CeilArea 		)  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znVol"        	Attic:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume        ) > 0) then  Local( Volume 			)  else  UNDEFINED  endif  }

 ; CSE ZONE (Attic) creation & defaulting
;	"Default Attic:CSE_ZONE:znEaveZ"     	Attic:CSE_ZONE:znEaveZ    	= {	MaxAll( cseZONE:znEaveZ )  }
	"Default Attic:CSE_ZONE:znEaveZ"     	Attic:CSE_ZONE:znEaveZ    	= {	MaxRevRef( CeilingBelowAttic:AtticZone, CeilingBelowAttic:CSEZnEaveZ )  }	; SAC 10/16/14 - revised to accommodate multiple attics
	"Prevent invalid Attic:CSE_ZONE:znEaveZ"  Attic:CSE_ZONE:znEaveZ    = {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }

	"Default Attic:CSE_ZONE:znCAir"       	Attic:CSE_ZONE:znCAir      	= {	0.01  }
;	"Default Attic:CSE_ZONE:znAzm"        	Attic:CSE_ZONE:znAzm       	= {	0     }
;	"Default Attic:CSE_ZONE:znSC"         	Attic:CSE_ZONE:znSC        	= {	0     }
			; znModel = CZM -
;	"Default Attic:CSE_ZONE:znTH"         	Attic:CSE_ZONE:znTH        	= {	if (LocalStatus( ZnTH        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTH        )  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znTC"         	Attic:CSE_ZONE:znTC        	= {	if (LocalStatus( ZnTC        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTC        )  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znTD"         	Attic:CSE_ZONE:znTD        	= {	if (LocalStatus( ZnTD        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTD        )  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znQMxH"       	Attic:CSE_ZONE:znQMxH      	= {	if (LocalStatus( ZnQMxH      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxH      )  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znQMxHRated"  	Attic:CSE_ZONE:znQMxHRated 	= {	if (LocalStatus( ZnQMxHRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxHRated )  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znQMxC"       	Attic:CSE_ZONE:znQMxC      	= {	if (LocalStatus( ZnQMxC      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxC      )  else  UNDEFINED  endif  }
;	"Default Attic:CSE_ZONE:znQMxCRated"  	Attic:CSE_ZONE:znQMxCRated 	= {	if (LocalStatus( ZnQMxCRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxCRated )  else  UNDEFINED  endif  }
			; Infiltration
	"Default Attic:CSE_ZONE:infAC"       	Attic:CSE_ZONE:infAC      		= {	0  }
	"Default Attic:CSE_ZONE:infELA"      	Attic:CSE_ZONE:infELA     		= {	0  }
	"Default Attic:CSE_ZONE:infShld"     	Attic:CSE_ZONE:infShld    		= {	4  }  ; SAC 5/22/12 - 5->4 per CBECCbug001 infShld from BW 5/18/12
; SAC 9/12/12 - removed per call & e-mail from Bruce today
;	"Default Attic:CSE_ZONE:infStories"  	Attic:CSE_ZONE:infStories 		= {	1  }

; SAC 9/7/12 - removed old attic diode via GAIN w/ simpler version using IZXFER
;  ; Attic Bypass Diode setup
;	"Create Proj:BypassAtticMETER"			Proj:BypassAtticMETER			= {	CreateComp( cseMETER, "BypassAtticMtr" )  }
;	"Setup attic bypass diodes"				Zone:Action							= {	if (Local( ClgBlwAtticArea ) < 0.5) then  UNCHANGED
;																										else  EvalRulelist( "SimPrep_SetupZoneAtticBypassDiode", 1 )  endif  }
; SAC 9/7/12 - new (simpler) attic bypass diode stuff via IZXFER
	; ICQEnclCavInsMult factors based on CavityIns2.xlsx from BW 7/16/12
	; SAC 1/13/13 - switched Improved multiplier from 0.008 to 0.0
	"Set Proj:ICQAtticBypassUAMult"		Proj:ICQAtticBypassUAMult	= {	switch (Local( InsulConsQuality ))		; ICQ-dependent multiplier for bypass UA (attic bypass diode)
																									case 2 :  0.000		; Improved
																									default:  0.015		; Standard (or other)
																								endswitch  }
;	"Setup attic bypass diode IZXFER"	Zone:Action						= {	if (Local( ClgBlwAtticArea ) < 0.5) then  UNCHANGED
;																								else  EvalRulelist( "SimPrep_SetupZoneAtticBypassDiode", 1 )  endif  }
; SAC 10/17/14 - modified to operate on CeilingBelowAttic objects rather than Zones (to accommodate multiple attics)
	"Setup attic bypass diode IZXFER"	CeilingBelowAttic:Action	= {	if (LocalCompAssigned( AtticZone ) < 0.5 .OR. ParentComponentType() != "Zone" .OR. Area < 1) then  UNCHANGED
																								else  EvalRulelist( "SimPrep_SetupClgBelowAtticBypassDiode", 1 )  endif  }

; SAC 4/14/16 - MOVED UP above CSE DHWSYS creation in order for all CSE ZONEs to be present for interconnections
; ; CSE ZONE (CrawlSpace) creation & defaulting
;	"Create new CrawlSpace:CSE_ZONE"  					CrawlSpace:CSE_ZONE							= {	if (LocalStatus( Area ) == 0 .OR. Local( Area ) < 0.5) then  UNCHANGED
;																																else  CreateComp( cseZONE, Local( Name ) + "-crwl" )  endif  }
;	"Set CrawlSpace:CSEZoneName"  						CrawlSpace:CSEZoneName						= {	if (LocalCompAssigned( CSE_ZONE ) == 0) then  UNDEFINED
;																																else  LocalRef( CSE_ZONE:Name )  endif  }
;	"Default CrawlSpace:CSE_ZONE:SourceCrawlSpace"  CrawlSpace:CSE_ZONE:SourceCrawlSpace	= {	Local( Name )  }
;	"Default CrawlSpace:CSE_ZONE:znModel"      		CrawlSpace:CSE_ZONE:znModel     			= {	"UZX"  }
;	"Default CrawlSpace:CSE_ZONE:znArea"       		CrawlSpace:CSE_ZONE:znArea      			= {	Area                  }
;	"Default CrawlSpace:CSE_ZONE:znVol"        		CrawlSpace:CSE_ZONE:znVol       			= {	Area * AvgWallHeight  }
;	"Default CrawlSpace:CSE_ZONE:znEaveZ"       		CrawlSpace:CSE_ZONE:znEaveZ     			= {	AvgWallHeight + 0.75  }

 ; CSE ZONE (CrawlSpace) defaulting
	"Default CrawlSpace:CSE_ZONE:znCAir"       		CrawlSpace:CSE_ZONE:znCAir      			= {	0.0001  }
	"Default CrawlSpace:CSE_ZONE:znAzm"        		CrawlSpace:CSE_ZONE:znAzm       			= {	0       }
;	"Default CrawlSpace:CSE_ZONE:znSC"         		CrawlSpace:CSE_ZONE:znSC        			= {	0       }
			; Infiltration
	"Default CrawlSpace:CSE_ZONE:infAC"       		CrawlSpace:CSE_ZONE:infAC      			= {	0  }	; still air films
;	"Default CrawlSpace:CSE_ZONE:infELA"      		CrawlSpace:CSE_ZONE:infELA     			= {	0  }
	"Default CrawlSpace:CSE_ZONE:infShld"     		CrawlSpace:CSE_ZONE:infShld    			= {	1  }
;	"Default CrawlSpace:CSE_ZONE:infStories"  		CrawlSpace:CSE_ZONE:infStories 			= {	1  }

END


;*************************************************************************
RULELIST "CreateGainRefrig" 1 0 0 0
;*************************************************************************
;	"Create Zone:GainRefrig"				Zone:GainRefrig			= {	if (Local(HasApplRefrig) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znRefrig" )
;																		else UNCHANGED endif }
	"Create Zone:GainRefrig"					Zone:GainRefrig				= {	CreateComp(cseGAIN, Local( Name ) + "-znRefrig" )  }
	"Set Zone:GainRefrig parent cseZone"	Zone:GainRefrig:Parent		= {	Local(CSE_ZONE) }
	"Set Zone:GainRefrig:gnPower"				Zone:GainRefrig:gnPower		= {	if (Proj:IntGainsMethod > 2013) then  UNDEFINED
																									else  Local(Appl_RefrigGain) * 3413 / 24.  endif  }   ; SAC 9/4/12 - added conversion to Btu (*3413)
	"Set Zone:GainRefrig:gnPower_x"			Zone:GainRefrig:gnPower_x	= {
																if (Proj:IntGainsMethod <= 2013) then  UNDEFINED
																else	Format( "(%g * 3412 / 24) * ( select( $isWeHol, RefrConst_WEH, default RefrConst_WD ) + select( $isWeHol, RefrTemp_WEH, default RefrTemp_WD ) * @znRes[%c%s%c].prior.H.tAir)",
																									Appl_RefrigGain, 34, CSE_ZONE:Name, 34 )  endif  }
	"Set Zone:GainRefrig:gnFrRad"				Zone:GainRefrig:gnFrRad		= {	0. }
	"Set Zone:GainRefrig:gnEndUse"			Zone:GainRefrig:gnEndUse	= {	"Refr" }
	"Set Zone:GainRefrig:gnMeter"				Zone:GainRefrig:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																									else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainDish_Zone" 1 0 0 0
;*************************************************************************
;	"Create Zone:GainDishwasher"			Zone:GainDishwasher				= {	if (Local(HasApplRefrig) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znDishwasher" )
;																		else UNCHANGED endif }
	"Create Zone:GainDishwasher"					Zone:GainDishwasher				= {	CreateComp(cseGAIN, Local( Name ) + "-znDishwasher" )  }
	"Set Zone:GainDishwasher parent cseZone"	Zone:GainDishwasher:Parent		= { Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainDishwasher:gnPower_x"			Zone:GainDishwasher:gnPower_x = { 
																	if (Proj:IntGainsMethod <= 2013)
																	then	Format("%g %s %s)", (Local( Appl_DishGain ) * 3413), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
																	else	UNDEFINED  endif  }
	"Set Zone:GainDishwasher:gnPower"			Zone:GainDishwasher:gnPower	= {	if (Proj:IntGainsMethod > 2013) then  Appl_DishGain * 3412
																											else	UNDEFINED  endif  }
	"Set Zone:GainDishwasher:gnFrRad"			Zone:GainDishwasher:gnFrRad	= { 0. }
	"Set Zone:GainDishwasher:gnFrLat"			Zone:GainDishwasher:gnFrLat	= { 0.25 }
	"Set Zone:GainDishwasher:gnEndUse"			Zone:GainDishwasher:gnEndUse	= { "Dish" }
	"Set Zone:GainDishwasher:gnMeter"			Zone:GainDishwasher:gnMeter	= { if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																										 else  UNDEFINED  endif  }

	"Set Zone:GainDishwasher:gnCtrlDHWEndUse"	Zone:GainDishwasher:gnCtrlDHWEndUse	= {	if (Proj:IntGainsMethod <= 2013) then  UNDEFINED
																													else	"DWashr"  endif  }
	"Set Zone:GainDishwasher:gnCtrlDHWSYS"		Zone:GainDishwasher:gnCtrlDHWSYS		= {	if (LocalCompAssigned( GainCtrlDHWSYS ) > 0 .AND. Proj:IntGainsMethod > 2013)
																													then  GainCtrlDHWSYS  else  UNDEFINED  endif  }
END

; SAC 7/26/16 - added to ensure multiple dishwasher gains, one for each DHWSys for single family models (tic #711)
;*************************************************************************
RULELIST "CreateGainDish_Zone_2" 1 0 0 0
;*************************************************************************
   "Create Zone:GainDishwasher[2]"               Zone:GainDishwasher[2]           = {  CreateComp(cseGAIN, Local( Name ) + "-znDishwasher2" )  }
   "Set Zone:GainDishwasher[2] parent cseZone"   Zone:GainDishwasher[2]:Parent    = {  Local(CSE_ZONE) }
   "Set Zone:GainDishwasher[2]:gnPower"          Zone:GainDishwasher[2]:gnPower   = {  Appl_DishGain * 3412  }
   "Set Zone:GainDishwasher[2]:gnFrRad"          Zone:GainDishwasher[2]:gnFrRad   = {  0. }
   "Set Zone:GainDishwasher[2]:gnFrLat"          Zone:GainDishwasher[2]:gnFrLat   = {  0.25 }
   "Set Zone:GainDishwasher[2]:gnEndUse"         Zone:GainDishwasher[2]:gnEndUse  = {  "Dish" }
   "Set Zone:GainDishwasher[2]:gnMeter"          Zone:GainDishwasher[2]:gnMeter   = {  if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
                                                                                       else  UNDEFINED  endif  }

   "Set Zone:GainDishwasher[2]:gnCtrlDHWEndUse"  Zone:GainDishwasher[2]:gnCtrlDHWEndUse   = {  "DWashr"  }
   "Set Zone:GainDishwasher[2]:gnCtrlDHWSYS"     Zone:GainDishwasher[2]:gnCtrlDHWSYS      = {  if (LocalCompAssigned( GainCtrlDHWSYS[2] ) > 0)
                                                                                               then  GainCtrlDHWSYS[2]  else  UNDEFINED  endif  }
END


; SAC 4/14/16 - DwellUnit-based GainDishwasher applicable only to T24-2016 multifamily models
;*************************************************************************
RULELIST "CreateGainDish_DwellUnitDHW" 1 0 0 0
;*************************************************************************
	"Create DwellUnitDHW:GainDishwasher"					DwellUnitDHW:GainDishwasher				= {	CreateComp(cseGAIN, Local( Name ) + "-znDishwasher" )  }
	"Set DwellUnitDHW:GainDishwasher parent cseZone"	DwellUnitDHW:GainDishwasher:Parent		= {	Parent2( CSE_ZONE )   }
	; SAC 4/22/16 - updated to set gnPower_x (expression) rather than static value - and added accounting for DwellUnit multiplier (tic #651)
	;"Set DwellUnitDHW:GainDishwasher:gnPower_x"			DwellUnitDHW:GainDishwasher:gnPower_x	= {	Format( "%g * %g * 3412", ValidOr( DwellUnitTypeRef:DishElecUsage, 0 ), ValidOr( Count, 0 ) )  }
	"Set DwellUnitDHW:GainDishwasher:gnPower_x"			DwellUnitDHW:GainDishwasher:gnPower_x	= {	Format( "%g * 3412", ValidOr( DwellUnitTypeRef:DishElecUsage, 0 ) )  }
	"Set DwellUnitDHW:GainDishwasher:gnFrRad"				DwellUnitDHW:GainDishwasher:gnFrRad		= {	0.			}
	"Set DwellUnitDHW:GainDishwasher:gnFrLat"				DwellUnitDHW:GainDishwasher:gnFrLat		= {	0.25		}
	"Set DwellUnitDHW:GainDishwasher:gnEndUse"			DwellUnitDHW:GainDishwasher:gnEndUse	= {	"Dish"	}
	"Set DwellUnitDHW:GainDishwasher:gnMeter"				DwellUnitDHW:GainDishwasher:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																															 		else  UNDEFINED  endif  }
	"Set DwellUnitDHW:GainDishwasher:gnCtrlDHWEndUse"	DwellUnitDHW:GainDishwasher:gnCtrlDHWEndUse	= {	"DWashr"  }
	"Set DwellUnitDHW:GainDishwasher:gnCtrlDHWSYS"		DwellUnitDHW:GainDishwasher:gnCtrlDHWSYS		= {	if (LocalCompAssigned( cseDHWSYSRef ) > 0) then  cseDHWSYSRef  else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainCooking" 1 0 0 0
;*************************************************************************
;	"Create Zone:GainCooking"					Zone:GainCooking		= {	if (Local(HasApplRefrig) == 1) then
;																								CreateComp(cseGAIN, Local( Name ) + "-znCook" )
;																							else UNCHANGED endif }
	"Create Zone:GainCooking[1] - Elec"			Zone:GainCooking[1]		= {	if (Appl_CookGain[1] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znCookElec" ) endif  }
	"Set Zone:GainCooking[1] parent cseZone"	Zone:GainCooking[1]:Parent	= { Local(CSE_ZONE) }
	; SAC 4/14/16 - revised for T24-2016
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainCooking[1]:gnPower_x"			Zone:GainCooking[1]:gnPower_x	= { 
				if (Proj:IntGainsMethod <= 2013)
				then	Format("%g %s %s)", Local( Appl_CookGain[1] ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, Cook_WEH, Default Cook_WD) * Cook_SM", Appl_CookGain[1] )  endif  }
	"Set Zone:GainCooking[1]:gnFrRad"			Zone:GainCooking[1]:gnFrRad	= { 0. }
	"Set Zone:GainCooking[1]:gnFrLat"			Zone:GainCooking[1]:gnFrLat	= { 0.67 }
	"Set Zone:GainCooking[1]:gnFrZn"				Zone:GainCooking[1]:gnFrZn		= { 0.9 }
	"Set Zone:GainCooking[1]:gnEndUse"			Zone:GainCooking[1]:gnEndUse	= { "Cook" }
	"Set Zone:GainCooking[1]:gnMeter"			Zone:GainCooking[1]:gnMeter	= { Global( Proj:CSE_ElecMETER ) }

	"Create Zone:GainCooking[2] - NGas"			Zone:GainCooking[2]		= {	if (Appl_CookGain[2] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znCookGas" ) endif  }
	"Set Zone:GainCooking[2] parent cseZone"	Zone:GainCooking[2]:Parent	= { Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainCooking[2]:gnPower_x"			Zone:GainCooking[2]:gnPower_x	= { 
				if (Proj:IntGainsMethod <= 2013)
				then	Format("%g %s %s)", Local( Appl_CookGain[2] ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, Cook_WEH, Default Cook_WD) * Cook_SM", Appl_CookGain[2] )  endif  }
	"Set Zone:GainCooking[2]:gnFrRad"			Zone:GainCooking[2]:gnFrRad	= { 0. }
	"Set Zone:GainCooking[2]:gnFrLat"			Zone:GainCooking[2]:gnFrLat	= { 0.67 }
	"Set Zone:GainCooking[2]:gnFrZn"				Zone:GainCooking[2]:gnFrZn		= { 0.9 }
	"Set Zone:GainCooking[2]:gnEndUse"			Zone:GainCooking[2]:gnEndUse	= { "Cook" }
	"Set Zone:GainCooking[2]:gnMeter"			Zone:GainCooking[2]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																											then	if (Proj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																											else	Proj:CSE_NatGasMETER  endif }

	"Create Zone:GainCooking[3] - Othr"			Zone:GainCooking[3]		= {	if (Appl_CookGain[3] <= 0 .OR. Proj:IntGainsMethod > 2013) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znCookOthr" ) endif  }
	"Set Zone:GainCooking[3] parent cseZone"	Zone:GainCooking[3]:Parent	= { Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainCooking[3]:gnPower_x"			Zone:GainCooking[3]:gnPower_x	= { 
				Format("%g %s %s)", Local( Appl_CookGain[3] ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) ) }
	"Set Zone:GainCooking[3]:gnFrRad"			Zone:GainCooking[3]:gnFrRad	= { 0. }
	"Set Zone:GainCooking[3]:gnFrLat"			Zone:GainCooking[3]:gnFrLat	= { 0.67 }
	"Set Zone:GainCooking[3]:gnFrZn"				Zone:GainCooking[3]:gnFrZn		= { 0.9 }
	"Set Zone:GainCooking[3]:gnEndUse"			Zone:GainCooking[3]:gnEndUse	= { "Cook" }
	"Set Zone:GainCooking[3]:gnMeter"			Zone:GainCooking[3]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																											then	if (Proj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																											else	Proj:CSE_OtherFuelMETER  endif }

;	"Set Zone:GainCooking[1]:gnMeter"			Zone:GainCooking[1]:gnMeter	= {	switch (Global(Proj:ApplCookFuel))
;																				case 1:	if (Global( Proj:Fuel_HaveElec   ) > 0.5) then  Global( Proj:CSE_ElecMETER )
;																						else  UNDEFINED  endif
;																				case 2:	if (Global( Proj:Fuel_HaveNatGas   ) > 0.5) then  Global( Proj:CSE_NatGasMETER )
;																						else  UNDEFINED  endif
;																				case 3:	if (Global( Proj:Fuel_HaveOther   ) > 0.5) then  Global( Proj:CSE_OtherFuelMETER )
;																						else  UNDEFINED  endif
;																				default: UNDEFINED
;																			endswitch  }
END


;*************************************************************************
RULELIST "CreateGainWasher_Zone" 1 0 0 0
;*************************************************************************
;	"Create Zone:GainWasher"					Zone:GainWasher			= {	if (Local(HasApplWasher) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znWasher" )
;																		else UNCHANGED endif }
	"Create Zone:GainWasher"					Zone:GainWasher				= {	CreateComp(cseGAIN, Local( Name ) + "-znWasher" )  }
	"Set Zone:GainWasher parent cseZone"	Zone:GainWasher:Parent		= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainWasher:gnPower_x"			Zone:GainWasher:gnPower_x	= { 
																if (Proj:IntGainsMethod <= 2013)
																then	Format("%g %s %s)", (Local( Appl_WasherGain ) * 3413), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
																else	UNDEFINED  endif  }
	"Set Zone:GainWasher:gnPower"				Zone:GainWasher:gnPower		= {	if (Proj:IntGainsMethod > 2013) then  Appl_WasherGain * 3412
																									else	UNDEFINED  endif  }
	"Set Zone:GainWasher:gnFrRad"				Zone:GainWasher:gnFrRad		= {	0. }
	"Set Zone:GainWasher:gnEndUse"			Zone:GainWasher:gnEndUse	= {	"Wash" }
	"Set Zone:GainWasher:gnMeter"				Zone:GainWasher:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																									else  UNDEFINED  endif  }

	"Set Zone:GainWasher:gnCtrlDHWEndUse"	Zone:GainWasher:gnCtrlDHWEndUse	= {	if (Proj:IntGainsMethod <= 2013) then  UNDEFINED
																											else	"CWashr"  endif  }
	"Set Zone:GainWasher:gnCtrlDHWSYS"		Zone:GainWasher:gnCtrlDHWSYS		= {	if (LocalCompAssigned( GainCtrlDHWSYS[1] ) > 0 .AND. Proj:IntGainsMethod > 2013)
																											then  GainCtrlDHWSYS[1]  else  UNDEFINED  endif  }
END

; SAC 7/26/16 - added to ensure multiple washer gains, one for each DHWSys for single family models (tic #711)
;*************************************************************************
RULELIST "CreateGainWasher_Zone_2" 1 0 0 0
;*************************************************************************
   "Create Zone:GainWasher[2]"               Zone:GainWasher[2]            = {  CreateComp(cseGAIN, Local( Name ) + "-znWasher2" )  }
   "Set Zone:GainWasher[2] parent cseZone"   Zone:GainWasher[2]:Parent     = {  Local(CSE_ZONE) }
   ; SAC 1/3/13 - augmented schedule output to include design sizing data
   "Set Zone:GainWasher[2]:gnPower_x"        Zone:GainWasher[2]:gnPower_x  = { 
                                                if (Proj:IntGainsMethod <= 2013)
                                                then   Format("%g %s %s)", (Local( Appl_WasherGain ) * 3413), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
                                                else   UNDEFINED  endif  }
   "Set Zone:GainWasher[2]:gnPower"          Zone:GainWasher[2]:gnPower      = {  if (Proj:IntGainsMethod > 2013) then  Appl_WasherGain * 3412
                                                                                  else   UNDEFINED  endif  }
   "Set Zone:GainWasher[2]:gnFrRad"          Zone:GainWasher[2]:gnFrRad      = {  0. }
   "Set Zone:GainWasher[2]:gnEndUse"         Zone:GainWasher[2]:gnEndUse     = {  "Wash" }
   "Set Zone:GainWasher[2]:gnMeter"          Zone:GainWasher[2]:gnMeter      = {  if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
                                                                                  else  UNDEFINED  endif  }

   "Set Zone:GainWasher[2]:gnCtrlDHWEndUse"  Zone:GainWasher[2]:gnCtrlDHWEndUse   = {  "CWashr"  }
   "Set Zone:GainWasher[2]:gnCtrlDHWSYS"     Zone:GainWasher[2]:gnCtrlDHWSYS      = {  if (LocalCompAssigned( GainCtrlDHWSYS[2] ) > 0)
                                                                                       then  GainCtrlDHWSYS[2]  else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainWasher_DwellUnitDHW" 1 0 0 0
;*************************************************************************
	"Create DwellUnitDHW:GainWasher"						DwellUnitDHW:GainWasher					= {	CreateComp(cseGAIN, Local( Name ) + "-znWasher" )  }
	"Set DwellUnitDHW:GainWasher parent cseZone"		DwellUnitDHW:GainWasher:Parent		= {	WasherZoneRef:CSE_ZONE  }		; SAC 4/22/16 - make sure gain added to correct Zone
	; SAC 4/22/16 - updated to set gnPower_x (expression) rather than static value - and added accounting for DwellUnit multiplier (tic #651)
	;"Set DwellUnitDHW:GainWasher:gnPower_x"			DwellUnitDHW:GainWasher:gnPower_x	= {	Format( "%g * %g * 3412", ValidOr( UnitClthWashGain, 0 ), ValidOr( Count, 0 ) )  }
	"Set DwellUnitDHW:GainWasher:gnPower_x"			DwellUnitDHW:GainWasher:gnPower_x	= {	Format( "%g * 3412", ValidOr( DwellUnit:UnitClthWashGain, 0 ) )  }
	"Set DwellUnitDHW:GainWasher:gnFrRad"				DwellUnitDHW:GainWasher:gnFrRad		= {	0.			}
	"Set DwellUnitDHW:GainWasher:gnEndUse"				DwellUnitDHW:GainWasher:gnEndUse		= {	"Wash"	}
	"Set DwellUnitDHW:GainWasher:gnMeter"				DwellUnitDHW:GainWasher:gnMeter		= {	if (Global( Proj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																															else  UNDEFINED  endif  }
	"Set DwellUnitDHW:GainWasher:gnCtrlDHWEndUse"	DwellUnitDHW:GainWasher:gnCtrlDHWEndUse	= {	"CWashr"  }
	"Set DwellUnitDHW:GainWasher:gnCtrlDHWSYS"		DwellUnitDHW:GainWasher:gnCtrlDHWSYS		= {	if (LocalCompAssigned( cseDHWSYSRef ) > 0) then  cseDHWSYSRef  else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainDryer_Zone" 1 0 0 0
;*************************************************************************
;	"Create Zone:GainDryer"					Zone:GainDryer			= {	if (Local(HasApplWasher) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znDryer" )
;																		else UNCHANGED endif }
	"Create Zone:GainDryer[1]-Elec"			Zone:GainDryer[1]				= {	if (Appl_DryerGain[1] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znDryerElec" )  endif  }
	"Set Zone:GainDryer[1] parent cseZone"	Zone:GainDryer[1]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainDryer[1]:gnPower_x"		Zone:GainDryer[1]:gnPower_x = { 
																if (Proj:IntGainsMethod <= 2013)
																then	Format("%g %s %s)", Local( Appl_DryerGain[1] ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
																else	Format("%g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[1], 34, GainCtrlDHWSYS[1]:Name, 34 )  endif  }
	"Set Zone:GainDryer[1]:gnFrRad"			Zone:GainDryer[1]:gnFrRad	= {	0.  }
	"Set Zone:GainDryer[1]:gnFrLat"			Zone:GainDryer[1]:gnFrLat	= {	0.5 }
	"Set Zone:GainDryer[1]:gnFrZn"			Zone:GainDryer[1]:gnFrZn	= {	0.3 }
	"Set Zone:GainDryer[1]:gnEndUse"			Zone:GainDryer[1]:gnEndUse = {	"Dry" }
	"Set Zone:GainDryer[1]:gnMeter"			Zone:GainDryer[1]:gnMeter	= {	Global( Proj:CSE_ElecMETER ) }

	"Create Zone:GainDryer[2]-NGas"			Zone:GainDryer[2]				= {	if (Appl_DryerGain[2] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znDryerGas" )  endif  }
	"Set Zone:GainDryer[2] parent cseZone"	Zone:GainDryer[2]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainDryer[2]:gnPower_x"		Zone:GainDryer[2]:gnPower_x = { 
																if (Proj:IntGainsMethod <= 2013)
																then	Format("%g %s %s)", Local( Appl_DryerGain[2] ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) )
																else	Format("%g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[2], 34, GainCtrlDHWSYS[1]:Name, 34 )  endif  }
	"Set Zone:GainDryer[2]:gnFrRad"			Zone:GainDryer[2]:gnFrRad	= {	0.  }
	"Set Zone:GainDryer[2]:gnFrLat"			Zone:GainDryer[2]:gnFrLat	= {	0.5 }
	"Set Zone:GainDryer[2]:gnFrZn"			Zone:GainDryer[2]:gnFrZn	= {	0.3 }
	"Set Zone:GainDryer[2]:gnEndUse"			Zone:GainDryer[2]:gnEndUse = {	"Dry" }
	"Set Zone:GainDryer[2]:gnMeter"			Zone:GainDryer[2]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																									then	if (Proj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																									else	Proj:CSE_NatGasMETER  endif  }

	"Create Zone:GainDryer[3]-Othr"			Zone:GainDryer[3]				= {	if (Appl_DryerGain[3] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znDryerOthr" )  endif  }
	"Set Zone:GainDryer[3] parent cseZone"	Zone:GainDryer[3]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainDryer[3]:gnPower_x"		Zone:GainDryer[3]:gnPower_x = { 
																Format("%g %s %s)", Local( Appl_DryerGain[3] ), Local( EqpDaySched_CSE ), Global( Proj:IntGain_MoMult_CSE ) ) }
	"Set Zone:GainDryer[3]:gnFrRad"			Zone:GainDryer[3]:gnFrRad	= {	0.  }
	"Set Zone:GainDryer[3]:gnFrLat"			Zone:GainDryer[3]:gnFrLat	= {	0.5 }
	"Set Zone:GainDryer[3]:gnFrZn"			Zone:GainDryer[3]:gnFrZn	= {	0.3 }
	"Set Zone:GainDryer[3]:gnEndUse"			Zone:GainDryer[3]:gnEndUse = {	"Dry" }
	"Set Zone:GainDryer[3]:gnMeter"			Zone:GainDryer[3]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																									then	if (Proj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																									else	Proj:CSE_OtherFuelMETER  endif  }
END

; SAC 7/26/16 - added to ensure multiple set of dryer gains, one for each DHWSys for single family models (tic #711)
;*************************************************************************
RULELIST "CreateGainDryer_Zone_2" 1 0 0 0
;*************************************************************************
	"Create Zone:GainDryer[4]-Elec"			Zone:GainDryer[4]				= {	if (Appl_DryerGain[1] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znDryerElec2" )  endif  }
	"Set Zone:GainDryer[4] parent cseZone"	Zone:GainDryer[4]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainDryer[4]:gnPower_x"		Zone:GainDryer[4]:gnPower_x = { 
																Format("%g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[1], 34, GainCtrlDHWSYS[2]:Name, 34 )  }
	"Set Zone:GainDryer[4]:gnFrRad"			Zone:GainDryer[4]:gnFrRad	= {	0.  }
	"Set Zone:GainDryer[4]:gnFrLat"			Zone:GainDryer[4]:gnFrLat	= {	0.5 }
	"Set Zone:GainDryer[4]:gnFrZn"			Zone:GainDryer[4]:gnFrZn	= {	0.3 }
	"Set Zone:GainDryer[4]:gnEndUse"			Zone:GainDryer[4]:gnEndUse = {	"Dry" }
	"Set Zone:GainDryer[4]:gnMeter"			Zone:GainDryer[4]:gnMeter	= {	Global( Proj:CSE_ElecMETER ) }

	"Create Zone:GainDryer[5]-NGas"			Zone:GainDryer[5]				= {	if (Appl_DryerGain[2] <= 0) then  UNCHANGED
																									else  CreateComp(cseGAIN, Local( Name ) + "-znDryerGas2" )  endif  }
	"Set Zone:GainDryer[5] parent cseZone"	Zone:GainDryer[5]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set Zone:GainDryer[5]:gnPower_x"		Zone:GainDryer[5]:gnPower_x = { 
																Format("%g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[2], 34, GainCtrlDHWSYS[2]:Name, 34 )  }
	"Set Zone:GainDryer[5]:gnFrRad"			Zone:GainDryer[5]:gnFrRad	= {	0.  }
	"Set Zone:GainDryer[5]:gnFrLat"			Zone:GainDryer[5]:gnFrLat	= {	0.5 }
	"Set Zone:GainDryer[5]:gnFrZn"			Zone:GainDryer[5]:gnFrZn	= {	0.3 }
	"Set Zone:GainDryer[5]:gnEndUse"			Zone:GainDryer[5]:gnEndUse = {	"Dry" }
	"Set Zone:GainDryer[5]:gnMeter"			Zone:GainDryer[5]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																									then	if (Proj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																									else	Proj:CSE_NatGasMETER  endif  }
END

;*************************************************************************
RULELIST "CreateGainDryer_DwellUnitDHW" 1 0 0 0
;*************************************************************************
	"Create DwellUnitDHW:GainDryer[1]-Elec"			DwellUnitDHW:GainDryer[1]				= {	if (UnitClthDryElecGain <= 0) then  UNCHANGED
																															else  CreateComp(cseGAIN, Local( Name ) + "-znDryerElec" )  endif  }
	"Set DwellUnitDHW:GainDryer[1] parent cseZONE"	DwellUnitDHW:GainDryer[1]:Parent		= {	DryerZoneRef:CSE_ZONE  }	; SAC 4/22/16 - make sure gain added to correct Zone
	; SAC 4/22/16 - added accounting for DwellUnit:Count (tic #651)
	"Set DwellUnitDHW:GainDryer[1]:gnPower_x"			DwellUnitDHW:GainDryer[1]:gnPower_x = { 
																		;		Format("%g * %g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", UnitClthDryElecGain, ValidOr( Count, 0 ), 34, GainCtrlDHWSYS:Name, 34 )  }
																				Format("%g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", DwellUnit:UnitClthDryElecGain, 34, cseDHWSYSRef:Name, 34 )  }
	"Set DwellUnitDHW:GainDryer[1]:gnFrRad"			DwellUnitDHW:GainDryer[1]:gnFrRad	= {	0.  }
	"Set DwellUnitDHW:GainDryer[1]:gnFrLat"			DwellUnitDHW:GainDryer[1]:gnFrLat	= {	0.5 }
	"Set DwellUnitDHW:GainDryer[1]:gnFrZn"				DwellUnitDHW:GainDryer[1]:gnFrZn		= {	0.3 }
	"Set DwellUnitDHW:GainDryer[1]:gnEndUse"			DwellUnitDHW:GainDryer[1]:gnEndUse	= {	"Dry" }
	"Set DwellUnitDHW:GainDryer[1]:gnMeter"			DwellUnitDHW:GainDryer[1]:gnMeter	= {	Global( Proj:CSE_ElecMETER ) }

	"Create DwellUnitDHW:GainDryer[2]-NGas"			DwellUnitDHW:GainDryer[2]				= {	if (DwellUnit:UnitClthDryGasGain <= 0) then  UNCHANGED
																															else  CreateComp(cseGAIN, Local( Name ) + "-znDryerGas" )  endif  }
	"Set DwellUnitDHW:GainDryer[2] parent cseZONE"	DwellUnitDHW:GainDryer[2]:Parent		= {	DryerZoneRef:CSE_ZONE  }	; SAC 4/22/16 - make sure gain added to correct Zone
	; SAC 4/22/16 - added accounting for DwellUnit:Count (tic #651)
	"Set DwellUnitDHW:GainDryer[2]:gnPower_x"			DwellUnitDHW:GainDryer[2]:gnPower_x = { 
																		;		Format("%g * %g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", UnitClthDryGasGain, ValidOr( Count, 0 ), 34, cseDHWSYSRef:Name, 34 )  }
																				Format("%g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", DwellUnit:UnitClthDryGasGain, 34, cseDHWSYSRef:Name, 34 )  }
	"Set DwellUnitDHW:GainDryer[2]:gnFrRad"			DwellUnitDHW:GainDryer[2]:gnFrRad	= {	0.  }
	"Set DwellUnitDHW:GainDryer[2]:gnFrLat"			DwellUnitDHW:GainDryer[2]:gnFrLat	= {	0.5 }
	"Set DwellUnitDHW:GainDryer[2]:gnFrZn"				DwellUnitDHW:GainDryer[2]:gnFrZn		= {	0.3 }
	"Set DwellUnitDHW:GainDryer[2]:gnEndUse"			DwellUnitDHW:GainDryer[2]:gnEndUse	= {	"Dry" }
	"Set DwellUnitDHW:GainDryer[2]:gnMeter"			DwellUnitDHW:GainDryer[2]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																															then	if (Proj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																															else	Proj:CSE_NatGasMETER  endif  }
END
;*************************************************************************


; SAC 9/7/12 - new (simpler) attic bypass diode stuff via IZXFER
; SAC 10/17/14 - modified to operate on CeilingBelowAttic rather than Zone (to accommodate multiple attics)
;*************************************************************************
RULELIST "SimPrep_SetupClgBelowAtticBypassDiode" 1 0 0 0
;*************************************************************************
	"Create CeilingBelowAttic:AtticBypassIZXFER"				CeilingBelowAttic:AtticBypassIZXFER	= {	if (LocalCompAssigned( AtticZone:CSE_ZONE ) < 1 .OR. ParentCompAssigned( CSE_ZONE ) < 1) then  UNDEFINED
																																	else  CreateComp( cseIZXFER, Local( Name ) + "-BypassxA" )  endif  }
	"Set CeilingBelowAttic:AtticBypassIZXFER:izZn1"			CeilingBelowAttic:AtticBypassIZXFER:izZn1			= {	Zone:CSE_ZONE		  }
	"Set CeilingBelowAttic:AtticBypassIZXFER:izZN2"			CeilingBelowAttic:AtticBypassIZXFER:izZN2   		= {	AtticZone:CSE_ZONE  }
	"Set CeilingBelowAttic:AtticBypassIZXFER:izNVType"		CeilingBelowAttic:AtticBypassIZXFER:izNVType		= {	1  }		; "NONE" - No interzone ventilation
	"Set CeilingBelowAttic:AtticBypassIZXFER:izHConst_x"	CeilingBelowAttic:AtticBypassIZXFER:izHConst_x	= {	
													Format( "%g * %g * select(@znRes[%c%s%c].prior.H.tAir - @znRes[%c%s%c].prior.H.tAir > 0., 1., default 0.)",
													Global( Proj:ICQAtticBypassUAMult ), Area, 34, ParentRef( CSE_ZONE:Name ), 34, 34, LocalRef( AtticZone:CSE_ZONE:Name ), 34 )  }
END
;*************************************************************************


;*************************************************************************
;*************************************************************************

ENDFILE
